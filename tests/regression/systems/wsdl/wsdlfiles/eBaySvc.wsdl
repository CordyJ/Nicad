<?xml version="1.0" encoding="UTF-8"?>
<!--  Copyright (C) eBay, Inc. (2004). All Rights Reserved. -->
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:ns="urn:ebay:api:eBayAPI" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ebl="urn:ebay:apis:eBLBaseComponents"  
xmlns:cc="urn:ebay:apis:CoreComponentTypes" targetNamespace="urn:ebay:api:eBayAPI">

	<wsdl:types>
		<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:ebay:api:eBayAPI" elementFormDefault="qualified" attributeFormDefault="unqualified">
			<!-- Custom Security header element-->
			<xs:element name="RequesterCredentials" type="ebl:CustomSecurityHeaderType"/>
			<!--  Call: GetItem -->
	<xs:element name="GetItemRequest" type="ns:GetItemRequestType"/>
	<xs:complexType name="GetItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that control what item data is retrieved. This includes the
          item ID that uniquely identifies the listing for which to retrieve data.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID">
						<xs:annotation>
							<xs:documentation>
                      Specifies the item ID that uniquely identifies the item listing for which to
                      retrieve the data. ItemID is a required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetItem -->
	<xs:element name="GetItemResponse" type="ns:GetItemResponseType"/>
	<xs:complexType name="GetItemResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains the item data returned by the call. The data for the specified item
          listing is returned in an ItemType object.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:Item" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains the data for the specified item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: AddItem -->
	<xs:element name="AddItemRequest" type="ns:AddItemRequestType"/>
	<xs:complexType name="AddItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Defines a single new item and lists it on a specified eBay site. 
          To list multiple new items, execute AddItem once for each item, 
          with a new item definition each time. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:Item">
						<xs:annotation>
							<xs:documentation>
                      Child elements hold the values that define the new item.
                      Item is a required input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:ExternalProductID" minOccurs="0">
						<xs:annotation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: AddItem -->
	<xs:element name="AddItemResponse" type="ns:AddItemResponseType"/>
	<xs:complexType name="AddItemResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns the item ID and the estimated fees for the new listing, as well as
          the start and end times of the listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID" minOccurs="0"/>
					<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Starting date and time for the new listing.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Date and time when the new listing ends. This is the starting time 
                      plus the listing duration.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Fees" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Child elements contain the estimated listing fees for the new item listing. 
                      The fees do not include the Final Value Fee (FVF), which cannot be determined 
                      until an item is sold.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: VerifyAddItem -->
	<xs:element name="VerifyAddItemRequest" type="ns:VerifyAddItemRequestType"/>
	<xs:complexType name="VerifyAddItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Defines a single new item and tests the definition for validity. Behaves exactly
          the same as AddItem (same inputs, same outputs, and same behavior and usage rules), 
          but without actually listing the item to an eBay site. Applications can use this call 
          to test the definition of an item before actually listing it to eBay with AddItem, 
          reducing item listing-related errors.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:Item">
						<xs:annotation>
							<xs:documentation>
                      Child elements hold the values that define the new item.
                      Item is a required input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: VerifyAddItem -->
	<xs:element name="VerifyAddItemResponse" type="ns:VerifyAddItemResponseType"/>
	<xs:complexType name="VerifyAddItemResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns the estimated fees that would be applicable for a new listing 
          (were the item actually listed to eBay with AddItem).
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Represents the item ID for the new listing. As VerifyAddItem does not 
                      actually list an item, returns 0 instead of a normal item ID.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Fees" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Child elements contain the estimated listing fees for the new item listing. 
                      The fees do not include the Final Value Fee (FVF), which cannot be determined 
                      until an item is sold.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetUser -->
	<xs:element name="GetUserRequest" type="ns:GetUserRequestType"/>
	<xs:complexType name="GetUserRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that control what user data is returned. This includes the
          eBay user ID for the user whose data is to be returned and the item ID for a
          listing to indicate a transactional relationship between the requestor and the
          target user.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the item ID for a successfully concluded listing in which
                      the requestor and target user were participants (one as seller and
                      the other as buyer). Necessary to return certain data (like an email
                      address). Not necessary of the requestor is retrieving own data.
                      ItemID is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UserID" type="xs:string">
						<xs:annotation>
							<xs:documentation>
                      Specifies the user whose data will returned by the call. UserID is an
                      optional input. If not specified, the user data returned is that for
                      the requesting user.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetUser -->
	<xs:element name="GetUserResponse" type="ns:GetUserResponseType"/>
	<xs:complexType name="GetUserResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains the data retrieved by the call. User data is returned in a User object.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:User" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains the returned user data for the specified eBay user.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetSellerEvents -->
	<xs:element name="GetSellerEventsRequest" type="ns:GetSellerEventsRequestType"/>
	<xs:complexType name="GetSellerEventsRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that control the items that are returned for seller events.
          This includes time-based filtering on the start time, end time, and/or modification
          time of the item listings.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:UserID"/>
					<xs:element name="StartTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on item
                      start time. Must be specified if StartTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on item
                      start time. Must be specified if StartTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on item end
                      time. Must be specified if EndTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on item
                      end time. Must be specified if EndTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on the time
                      an item's record was modified. Must be specified if ModTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on the
                      time an item's record was modified. Must be specified if ModTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NewItemFilter" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the only new items are to be returned. NewItemFilter is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetSellerEvents -->
	<xs:element name="GetSellerEventsResponse" type="ns:GetSellerEventsResponseType"/>
	<xs:complexType name="GetSellerEventsResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains the items returned by the call. Items for which a seller event has
          occurred (and that meet any filters specified as input) are returned in an
          ItemArrayType object, within which are zero, one, or multiple ItemType objects.
          Each ItemType object contains the detail data for one item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element name="TotalAvailable" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains a count of the total number of seller event items that are available to be
                      returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the latest (most recent) date for any date-based filtering specified as
                      input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:ItemArray" maxOccurs="1" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
                      Indicates the earliest (oldest) date for any date-based filtering specified as input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: RelistItem -->
	<xs:element name="RelistItemRequest" type="ns:RelistItemRequestType"/>
	<xs:complexType name="RelistItemRequestType">
	<xs:annotation>
		<xs:documentation>
         Allows a seller to take a single item (or a single multi-item listing) that ended 
         without bidders or buyers and re-list it on a specified eBay site. The listing may
         be re-listed with the same item properties as the original or the seller may change
         a number of the item's defining properties at re-listing time. The new listing will
         have a different item ID than the original one. RelistItem re-lists a single item
         (or a single multi-item listing) that has already ended. To re-list multiple items
         (multiple listings) that have ended, execute RelistItem once for each ended listing.
		</xs:documentation>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="ebl:AbstractRequestType">
			<xs:sequence>
				<xs:element ref="ebl:Item">
					<xs:annotation>
						<xs:documentation>
                     Child elements hold the values for item properties that change for the
                     item re-list. Item is a required input. At a minimum, the Item.ItemID
                     property must be set to the ID of the listing being re-listed (a
                     listing that ended in the past 90 days). By default, the new listing's
                     Item object properties are the same as those of the original (ended)
                     listing. By setting a new value in the Item object and citing that
                     changed Item property in the ModifiedFields property, the new listing
                     uses the new value rather than the corresponding value from the old
                     listing.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ModifiedFields" type="ebl:ModifiedFieldType" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>
                   Array of item property changes. Each element in the array indicates a
                   first level property in the Item object (specified in the Item property)
                   that is changing in the re-list. Item properties not specified in
                   ModifiedFields are not changed in the item re-list, even if a new value
                   is specified in the property in the Item object. Properties not specified
                   retain the same value as is present in the ended item listing being
                   re-listed.
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<!--  Call: RelistItem -->
	<xs:element name="RelistItemResponse" type="ns:RelistItemResponseType"/>
	<xs:complexType name="RelistItemResponseType">
		<xs:annotation>
			<xs:documentation>
            Returns the item ID and the estimated fees for the re-listed listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                     Unique item ID for the new listing.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Fees" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                     Child elements contain the estimated listing fees for the new item listing. 
                     The fees do not include the Final Value Fee (FVF), which cannot be determined 
                     until an item is sold.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                     Starting date and time for the new listing.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                     Date and time when the new listing ends. This is the starting time 
                     plus the listing duration.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: ReviseItem -->
	<xs:element name="ReviseItemRequest" type="ns:ReviseItemRequestType"/>
	<xs:complexType name="ReviseItemRequestType">
		<xs:annotation>
			<xs:documentation>
         Allows a seller to make changes to the definition of an active
         item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:Item">
						<xs:annotation>
							<xs:documentation>
                   Child elements hold the values for item properties that will be changed
                   with the revision. Item is a required input. At a minimum, the
                   Item.ItemID property must be set to the ID of the item listing being
                   revised. Set values in this Item object for only those properties that
                   are to change as a result of the revision. Every first level property
                   that conveys a new value must be cited in the ModifiedFields property.
						</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModifiedFields" type="ebl:ModifiedFieldType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                   Array of item property changes. Each element in the array indicates a
                   first level property in the Item object (specified in the Item property)
                   that is changing in the revision. Item properties not specified in
                   ModifiedFields are not changed in the item revision--even if a new value
                   is specified in the property in the Item object. Properties not specified
                   retain the same value as is present in the active item listing being
                   revised.
						</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: ReviseItem -->
	<xs:element name="ReviseItemResponse" type="ns:ReviseItemResponseType"/>
	<xs:complexType name="ReviseItemResponseType">
		<xs:annotation>
			<xs:documentation>
            Returns the item ID and the estimated fees for the revised listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Item ID that uniquely identifies the item listing that was revised.
                   Provided for confirmation purposes. The value returned should be the
                   same as the item ID specified in the ItemID property of the Item object
                   specified as input for the call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Fees" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Child elements contain the estimated listing fees for the revised item
                   listing. The fees do not include the Final Value Fee (FVF), which cannot
                   be determined until an item is sold. Revising an item does not itself
                   incur a fee. However, certain item properties are fee-based and result
                   in the return of fees in the call's response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetSellerList -->
	<xs:element name="GetSellerListRequest" type="ns:GetSellerListRequestType"/>
	<xs:complexType name="GetSellerListRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that govern which seller for whom a list of items is returned.
          Other inputs filter the items returned based on the start date or end date of
          listings, control the pagination of returned data, and control the sort order of
          the returned items.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:UserID">
						<xs:annotation>
							<xs:documentation>
                      Specifies the seller whose items will be returned. UserID is an optional input.
                      If not specified, the requesting user is the seller whose items are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the earliest (oldest) date to use in a date range filter based on item end
                      time. Must be specified if EndTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the latest (most recent) date to use in a date range filter based on item
                      end time. Must be specified if EndTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Sort" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the order in which returned items are sorted (based on the end dates of the
                      item listings). Valid values:
                          0 = No sorting
                          1 = Sort in descending order
                          2 = Sort in ascending order
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTimeFrom" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the earliest (oldest) date to use in a date range filter based on item
                      start time. Must be specified if StartTimeTo is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="StartTimeTo" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the latest (most recent) date to use in a date range filter based on item
                      start time. Must be specified if StartTimeFrom is specified.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Pagination" maxOccurs="1" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains the data controlling the pagination of the returned values: how many items
                      are returned per page of data (per call) and the number of the page to return with
                      the current call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetSellerList -->
	<xs:element name="GetSellerListResponse" type="ns:GetSellerListResponseType"/>
	<xs:complexType name="GetSellerListResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains a list of the items listed by the seller specified as input. The list of
          items is returned in an ItemArrayType object, in which are returned zero, one, or
          multiple ItemType objects. Each ItemType object contains the detail data for one
          item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains information regarding the pagination of data (if pagination is used),
                      including total number of pages and total number of entries.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreItems" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether there are more items yet to be retrieved (if a value of true is
                      returned). Additional calls must be made to retrieve these items.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:ItemArray" maxOccurs="1" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
                      Contains the list of the seller's items, one ItemType object per item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ItemsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the number of items that are being returned per page of data (i.e., per
                      call). Will be the same as the value specified in the Pagination.EntriesPerPage
                      input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates which page of data was just returned. Will be the same as the value
                      specified in the Pagination.PageNumber input. (If the input is higher than the
                      total number of pages, the call fails with an error.)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReturnedItemCountActual" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the total number of items returned (i.e., the number of ItemType objects
                      in ItemArray).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Seller" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the seller whose items are returned. Will be the same as the value specifed
                      in the UserID input (if a value is specified), otherwise the seller is the requesting
                      user making the call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetItemTransactions -->
<!--  Copyright (C) eBay, Inc. (2003). All Rights Reserved. -->
	<xs:element name="GetItemTransactionsRequest" type="ns:GetItemTransactionsRequestType"/>
	<xs:complexType name="GetItemTransactionsRequestType">
		<xs:annotation>
			<xs:documentation>
          A transaction contains the information about the sale of one or more items 
          by one buyer from a single listing. GetItemTransactions retrieves a 
          report containing information you can use to process one listing's transactions.
          (Often, it is more efficient to use GetSellerTransactions instead. 
          See the reference guide for more information.)
          As some listings can return large numbers of transactions, use the supplied 
          time filters to retrieve only those transactions whose status has been modified
          between two dates. Optionally, also configure the request to retrieve one page 
          of data at a time (where each page contains a more manageable number of transactions).
          All the listing's transactions that were modified within the specified date range can be retrieved,
          or a single transaction can be retrieved. However, retrieving transactions
          one at a time is inefficent and requires more API calls. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID">
						<xs:annotation>
							<xs:documentation>
                      Unique item ID for the item for which to retrieve transactions.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeFrom" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on the 
                      time the transaction status was modified. Filters out transactions whose status was 
                      last modified before this date. The date range between ModTimeFrom to ModTimeTo 
                      cannot be greater than 30 days.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeTo" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on the 
                      time a transaction's status was modified. Filters out transactions whose status 
                      was last modified after this date. The date range between ModTimeFrom to ModTimeTo 
                      cannot be greater than 30 days. It is considered a best practice to always pass 
                      the current date-time, to ensure that no data is missed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:TransactionID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Identifies one transaction for a listing. To determine the valid transaction IDs 
                      for a listing, you typically need to have previously executed GetItemTransactionsCall 
                      or GetSellerTransactionsCall and stored all the listing's transactions.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Pagination" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Child elements control pagination of the output. Use its EntriesPerPage 
                      property to control the number of transactions to return per call and its 
                      PageNumber property to specify the page of data to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetItemTransactions -->
<!--  Copyright (C) eBay, Inc. (2003). All Rights Reserved. -->
	<xs:element name="GetItemTransactionsResponse" type="ns:GetItemTransactionsResponseType"/>
	<xs:complexType name="GetItemTransactionsResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns an array of transaction data for the item specified in the request
          The results can be used to create a report of data that is commonly
          necessary for end-of-auction processing. 
          Zero, one, or many Transaction objects can be returned in the array.
          The set of transactions returned is limited to those that were modified between
          the times specified in the request's ModTimeFrom and ModTime filters. 
          Also returns the item object that spawned the transactions. 
          If pagination filters were specified in the request, returns meta-data describing
          the effects of those filters on the current response and the estimated effects if
          the same filters are used in subsequent calls.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains the total number of pages (TotalNumberOfPages) and the total number 
                      of entries (TotalNumberOfEntries) that could be returned given repeated calls 
                      that use the same selection criteria as the call that returned this response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreTransactions" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether there are additional transactions to retrieve.
                      That is, indicates whether more pages of data are available to be
                      returned, given the filters that were specified in the request. 
                      Returns false for the last page of data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TransactionsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Number of transactions returned per page (per call). May be a higher value 
                      than ReturnedTransactionCountActual if the page returned is the last page
                      and more than one page of data exists.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Page number for the page of transactions the response returned. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReturnedTransactionCountActual" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Number of transactions retrieved in the current page of results just returned. 
                      May be a lower value than TransactionsPerPage if the page returned is the last 
                      page and more than one page of data exists.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Item" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Item object that spawned the transaction. It is a purchase from this item's listing 
                      that the transaction represents. Only certain fields of the item are returned, 
                      and the list of returned fields can be further reduced 
                      depending on the detail level (DetailLevelCodeType) passed in the request. 
                      See the reference guide for information about the fields that are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:TransactionArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      List of Transaction objects representing the transactions resulting 
                      from the listing. Each Transaction object contains the data for one purchase 
                      (of one or more items in the same listing). The Transaction.Item field is not
                      returned because the Item object is returned at the root level of the response.
                      See the reference guide for more information about the fields that are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PayPalPreferred" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether the item's seller has the preference enabled that shows that the seller 
                      prefers PayPal as the method of payment for an item. This preference is indicated on 
                      an item's View Item page and is intended to influence a buyer to use PayPal 
                      to pay for the item. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetSellerTransactions -->
<!--  Copyright (C) eBay, Inc. (2003). All Rights Reserved. -->
	<xs:element name="GetSellerTransactionsRequest" type="ns:GetSellerTransactionsRequestType"/>
	<xs:complexType name="GetSellerTransactionsRequestType">
		<xs:annotation>
			<xs:documentation>
          A transaction contains the information about the sale of one or more items 
          by one buyer from a single listing. GetSellerTransactions retrieves a 
          report containing information you can use to process the requesting seller's transactions.
          As some listings can return large numbers of transactions, use the supplied 
          time filters to retrieve only those transactions whose status has been modified
          between two dates. Optionally, also configure the request to retrieve one page 
          of data at a time (where each page contains a more manageable number of transactions).
          The user making the request can only retrieve their own transactions.
          That is, a user cannot retrieve all the transactions for another seller.
          If the user needs to retrieve transactions for another seller's listing, 
          use GetItemTransactions instead.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ModTimeFrom" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>
                      Describes the earliest (oldest) date to use in a date range filter based on the 
                      time a transaction's status was modified. Filters out transactions whose status was 
                      last modified before this date. The date range between ModTimeFrom to ModTimeTo 
                      cannot be greater than 30 days.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ModTimeTo" type="xs:dateTime">
						<xs:annotation>
							<xs:documentation>
                      Describes the latest (most recent) date to use in a date range filter based on the 
                      time a transaction's status was modified. Filters out transactions whose status 
                      was last modified after this date. The date range between ModTimeFrom to ModTimeTo 
                      cannot be greater than 30 days. It is considered a best practice to always pass 
                      the current date-time, to ensure that no data is missed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Pagination" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Child elements control pagination of the output. Use its EntriesPerPage 
                      property to control the number of transactions to return per call and its 
                      PageNumber property to specify the page of data to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetSellerTransactions -->
<!--  Copyright (C) eBay, Inc. (2003). All Rights Reserved. -->
	<xs:element name="GetSellerTransactionsResponse" type="ns:GetSellerTransactionsResponseType"/>
	<xs:complexType name="GetSellerTransactionsResponseType">
		<xs:annotation>
			<xs:documentation>
          Returns an array of transaction data for the seller specified in the request
          The results can be used to create a report of data that is commonly
          necessary for end-of-auction processing. 
          Zero, one, or many Transaction objects can be returned in the array.
          The set of transactions returned is limited to those that were modified between
          the times specified in the request's ModTimeFrom and ModTime filters. 
          Also returns information about the seller whose transactions were requested.
          If pagination filters were specified in the request, returns meta-data describing
          the effects of those filters on the current response and the estimated effects if
          the same filters are used in subsequent calls.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains the total number of pages (TotalNumberOfPages) and the total number 
                      of entries (TotalNumberOfEntries) that could be returned given repeated calls 
                      that use the same selection criteria as the call that returned this response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreTransactions" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether there are additional transactions to retrieve.
                      That is, indicates whether more pages of data are available to be
                      returned, given the filters that were specified in the request. 
                      Returns false for the last page of data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TransactionsPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Number of transactions returned per page (per call). May be a higher value 
                      than ReturnedTransactionCountActual if the page returned is the last page
                      and more than one page of data exists.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Page number for the page of transactions the response returned. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ReturnedTransactionCountActual" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Number of transactions retrieved in the current page of results just returned. 
                      May be a lower value than TransactionsPerPage if the page returned is the last 
                      page and more than one page of data exists.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Seller" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Contains information about the seller whose transactions are being returned.
                      See the reference guide for information about the fields of the Seller object
                      that are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:TransactionArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      List of Transaction objects representing the seller's recent sales. 
                      Each Transaction object contains the data for one purchase 
                      (of one or more items in the same listing). 
                      See the reference guide for more information about the fields that are returned
                      for each transaction.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PayPalPreferred" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether the seller has the preference enabled that shows that the seller 
                      prefers PayPal as the method of payment for an item. This preference is indicated on 
                      an item's View Item page and is intended to influence a buyer to use PayPal 
                      to pay for the item. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetCategories -->
	<xs:element name="GetCategoriesRequest" type="ns:GetCategoriesRequestType"/>
	<xs:complexType name="GetCategoriesRequestType">
		<xs:annotation>
			<xs:documentation>
          Contains the inputs that determine which categories to return and from
          which eBay site to get them.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="CategorySiteID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies the eBay site for which to retrieve the category hierarchy. CategorySiteID
                      is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryParent" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                      Specifies the top most category to return, along with subordinate subcategories. If
                      no parent category is specified, the category hierarchy returned begins at the root
                      category on the specified site. CategoryParent is an optional input. If not specified
                      then the category hierarchy returned begins at the root category on the specified
                      eBay site.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="LevelLimit" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies which subcategories to return, based on how deep into the category
                      hierarchy a give category is. Categories returned are those no more levels deep in
                      the category hierarchy than the number specified. LevelLimit is an optional input. If
                      not specified, then categories at all levels are returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ViewAllNodes" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Specifies whether to return only leaf categories(those categories in which items can
                      be listed), if a value of true is passed. If a value of false is passed, both leaf
                      and container categories are returned. ViewAllNodes is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetCategories -->
	<xs:element name="GetCategoriesResponse" type="ns:GetCategoriesResponseType"/>
	<xs:complexType name="GetCategoriesResponseType">
		<xs:annotation>
			<xs:documentation>
          Contains the category data for the eBay site specified as input. The category
          data is contained in a CategoryArrayType object, within which are zero, one, or
          multiple CategoryType objects. Each CategoryType object contains the detail data
          for one category. Other fields tell how many categories are returned in a call,
          when the category hierarchy was last updated, and the version of the category
          hierarchy (all three of which can differ from one eBay site to the next).
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:CategoryArray">
						<xs:annotation>
							<xs:documentation>
                      List of the returned categories. The category array contains one CategoryType
                      object for each returned category.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryCount" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the number of categories returned (i.e., the number of CategoryType
                      objects in CategoryArray).
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="UpdateTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the last date and time that eBay modified the category hierarchy for the
                      specified eBay site.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CategoryVersion" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the version of the category hierarchy on the specified eBay site.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetAttributesCS -->
	<xs:element name="GetAttributesCSRequest" type="ns:GetAttributesCSRequestType"/>
	<xs:complexType name="GetAttributesCSRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves an XML string that describes how to present Item Specifics to a seller.
      Use this information to present users with the equivalent of the Item Specifics portion
      of the eBay Title and Description pages and to validate selected eBay attributes 
      on the client before including them in an AddItem call or related calls. 
      The XML string contains a list of all the attributes that are applicable for 
      one or more requested categories, along with related meta-data. 
      The meta-data specifies all the possible values of each attribute, the 
      logic for presenting the attributes to a user, and rules for validating the user's selections. 
      See the Developer's Guide for an overview of Item Specifics and details about 
      the eBay attribute model.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  A version of the Item Specifics meta-data definitions for the site.
                  Typically, an application passes the version value that was returned the last 
                  time the application executed this call.
                  Filter that causes the call to return only the characteristics sets 
                  for which the attribute meta-data has changed since the specified version.
                  If not specified, all characteristics sets are returned.
                  The latest version value is not necessarily greater than the previous
                  value that was returned. Therefore, when comparing versions, only  
                  compare whether the value has changed.
                  AttributeSystemVersion is an optional input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:AttributeSetID" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  An array of characteristics set IDs (which always correspond to attribute set IDs). 
                  Each characteristics set corresponds to a level in the eBay category hierarchy at
                  which all items share common characteristics. 
                  Multiple categories can be mapped to the same characteristics set.
                  AttributeSetIDs is an optional input. When IDs are specified, the call 
                  only returns meta-data for the corresponding characteristics sets.
                  When no IDs are specified, the call returns all the current meta-data in the system.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetAttributesCS -->
	<xs:element name="GetAttributesCSResponse" type="ns:GetAttributesCSResponseType"/>
	<xs:complexType name="GetAttributesCSResponseType">
		<xs:annotation>
			<xs:documentation>
      Returns XML that describes how to present Item Specifics to a seller 
      and how to validate selected eBay attributes on the client before including 
      them in an AddItem call or related calls.  
      See the Developer's Guide for an overview of Item Specifics and details about 
      the eBay attribute model. Also returns the current version of the meta-data system.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Current version of the Item Specifics meta-data system for the site.
                  This value changes each time changes are made to the meta-data.
                  The current version value is not necessarily greater than the previous
                  value. Therefore, when comparing versions, only compare whether the 
                  value has changed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:AttributeData" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  An XML string containing a list of all the attributes that are applicable 
                  for a requested category, along with related meta-data. 
                  The meta-data specifies all the possible values of each attribute, the 
                  logic for presenting attributes to a user, and rules for validating the 
                  user's selections. This data is returned as "raw" XML. Individual 
                  elements are not described in the base components schema. See the 
                  call reference guide for information about each element in the string.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetAttributesXSL -->
	<xs:element name="GetAttributesXSLRequest" type="ns:GetAttributesXSLRequestType"/>
	<xs:complexType name="GetAttributesXSLRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves the Item Specifics SYI XSL stylesheet.Apply the stylesheet to the 
      XML returned from a call to GetAttributesCS or GetProductSellingPages to
      render a form like the Item Specifics portion of eBay's Title and Description page.
      See the Developer's Guide for an overview of Item Specifics and information
      on working with the XSL.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:FileName" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  The name of the XSL file to retrieve. If not specified, the call 
                  returns the latest versions of all available XSL files.
                  FileName is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:FileVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  The desired version of the XSL file. Required if FileName is specified.
                  If not specified, the call returns the latest versions of all 
                  available XSL files that could be returned by the call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetAttributesXSL -->
	<xs:element name="GetAttributesXSLResponse" type="ns:GetAttributesXSLResponseType"/>
	<xs:complexType name="GetAttributesXSLResponseType">
		<xs:annotation>
			<xs:documentation>
      Retrieves the Item Specifics SYI XSL stylesheet.Apply the stylesheet to the 
      XML returned from a call to GetAttributesCS or GetProductSellingPages to
      render a form like the Item Specifics portion of eBay's Title and Description page.
      See the Developer's Guide for an overview of Item Specifics and information
      on working with the XSL.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:XSLFile" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Child elements specify data related to one XSL file. See XSLFileType.
                  Multiple XSLFile objects can be returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductFinder -->
	<xs:element name="GetProductFinderRequest" type="ns:GetProductFinderRequestType"/>
	<xs:complexType name="GetProductFinderRequestType">
		<xs:annotation>
			<xs:documentation>
      For a category that is catalog-enabled, GetProductFinder retrieves an XML string that 
      describes the attributes a seller can use to form a query when searching for Pre-filled Item Information. 
      Specifically, it retrieves data that you use to construct valid "Product Finder" queries
      (queries against multiple attributes). 
      The attributes describe search criteria (e.g., Manufacturer), as appropriate for the category.
      Use the results in combination with GetProductFinderXSL to render the Product Finder
      in a graphical user interface.
      GetProductFinder does not conduct the actual product search.
      It only returns data about what you can search on. Use the data as input to 
      GetProductSearchResults to conduct the actual search for product information.
      To retrieve single-attribute search criteria (querying against a single attribute, like UPC), 
      use GetProductSearchPage instead.
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  A version of the Product Finder attribute definitions for the site.
                  Typically, an application passes the version value that was returned the last 
                  time the application executed this call.
                  Filter that causes the call to return only the Product Finders 
                  for which the attribute meta-data has changed since the specified version.
                  The latest version value is not necessarily greater than the previous
                  value that was returned. Therefore, when comparing versions, only  
                  compare whether the value has changed.
                  AttributeSystemVersion is an optional input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:ProductFinderID" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  An array of Product Finder IDs. To determine the Product Finder ID for a category, 
                  call GetCategory2CS. 
                  Multiple categories can be mapped to the same Product Finder ID.
                  ProductFinderIDs is an optional input. When IDs are specified, the call 
                  only returns  Product Finder data for the specified Product Finders.
                  When no IDs are specified, the call returns all the current Product Finder 
                  meta-data available on the site.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductFinder -->
	<xs:element name="GetProductFinderResponse" type="ns:GetProductFinderResponseType"/>
	<xs:complexType name="GetProductFinderResponseType">
		<xs:annotation>
			<xs:documentation>
      For a category that is catalog-enabled, GetProductFinder retrieves an XML string 
      that decribes the attributes a seller can use to form a query when searching for Pre-filled Item Information.
      Specifically, it retrieves data that you use to construct valid "Product Finder" queries
      (queries against multiple attributes). 
      Use the results in combination with GetProductFinderXSL to render the Product Finder
      in a graphical user interface.
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  Current version of the product search page data for the site.
                  This value changes each time changes are made to the search page data.
                  The current version value is not necessarily greater than the previous
                  value. Therefore, when comparing versions, only compare whether the 
                  value has changed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:ProductFinderData" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  An XML string containing a list of search attributes that can be used in a
                  "Product Finder" style query.
                  The attribute data is returned as "raw" XML. Individual 
                  elements are not described in the base components schema. See the 
                  call reference guide for information about each element in the string.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductFinderXSL -->
	<xs:element name="GetProductFinderXSLRequest" type="ns:GetProductFinderXSLRequestType"/>
	<xs:complexType name="GetProductFinderXSLRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves the Product Finder XSL stylesheet. Apply the stylesheet to the 
      XML returned from a call to GetProductFinder to
      render a form that lets a user form a multi-attribute query against 
      eBay catalog data.
      See the Developer's Guide for an overview of Pre-filled Item Information
      and information on searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:FileName" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  The name of the XSL file to retrieve. If not specified, the call 
                  returns the latest versions of all available XSL files.
                  FileName is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:FileVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  The desired version of the XSL file. Required if FileName is specified.
                  IIf not specified, the call returns the latest versions of all 
                  available XSL files that could be returned by the call.
                  This is not a filter for retrieving changes to the XSL files.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductFinderXSL -->
	<xs:element name="GetProductFinderXSLResponse" type="ns:GetProductFinderXSLResponseType"/>
	<xs:complexType name="GetProductFinderXSLResponseType">
		<xs:annotation>
			<xs:documentation>
      Retrieves the Product Finder XSL stylesheet. Apply the stylesheet to the 
      XML returned from a call to GetProductFinder to
      render a form that lets a user form a multi-attribute query against 
      eBay catalog data.
      See the Developer's Guide for an overview of Pre-filled Item Information
      and information on searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:XSLFile" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Child elements specify data related to one XSL file. See XSLFileType.
                  Multiple XSLFile objects can be returned.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductSellingPages -->
	<xs:element name="GetProductSellingPagesRequest" type="ns:GetProductSellingPagesRequestType"/>
	<xs:complexType name="GetProductSellingPagesRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves an XML string that describes how to present catalog product information to a seller.
      Use this information to present users with the equivalent of the Item Specifics portion
      of the eBay Title and Description pages and to validate user-specified values for
      eBay attributes on the client before including them in an AddItem call or related calls. 
      The XML string contains a list of all the attributes that are applicable for 
      one or more requested products, along with related meta-data. 
      The meta-data specifies the pre-filled values of each attribute, the 
      possible values of attributes that are not pre-filled, the logic for presenting 
      the attributes to a user, and rules for validating the user's selections.
      Use the results in combination with GetAttributesXSL to render the Item Specifics
      in a graphical user interface.
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:UseCase">
						<xs:annotation>
							<xs:documentation>
               Specifies the context in which the call is being executed, which will imply 
					certain validation rules. Use this property to make sure you retrieve the 
					appropriate version of product information and attribute meta-data 
					when you are listing, revising, or relisting an item with Pre-filled Item Information. Valid values:
					      SYI = Sell Your Item. Use before adding an item. Causes the response to include the 
					            latest product ID in the system (given an ID specified in the Products element) 
					            and the corresponding characteristic meta-data. 
					      RYI = Revise Your Item. Use this before revising an item. Causes the response to return
					            the product ID, attribute data, and other data associated with the version of the product
					            that you pass in the Products element. This is useful in case the product ID or associated data 
					            has changed in the system since the item was originally listed. When revising 
					            an item, this helps you make changes that are consistent with the original listing.
					      RELIST = Use this before relisting an item. Causes the response to include the 
					            latest product ID in the system (given an ID specified in the Products element) 
					            and the corresponding characteristic meta-data. (Same as SYI).
               UseCase is a required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Product" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  An array of ProductType objects, each of which identifies a prototype description 
                  of a well-known type of item, such as a popular book.
                  Products is a required input. See the Developer's Guide for information about 
                  the ProductType properties that are required for this call.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductSellingPages -->
	<xs:element name="GetProductSellingPagesResponse" type="ns:GetProductSellingPagesResponseType"/>
	<xs:complexType name="GetProductSellingPagesResponseType">
		<xs:annotation>
			<xs:documentation>
      Retrieves an XML string that describes how to present catalog product information to a seller.
      Use this information to present users with the equivalent of the Item Specifics portion
      of the eBay Title and Description pages and to validate user-specified values for
      eBay attributes on the client before including them in an AddItem call or related calls. 
      Use the results in combination with GetAttributesXSL to render the Item Specifics
      in a graphical user interface.
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:ProductSellingPagesData" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  An XML string containing a list of all the attributes that are applicable for 
                  one or more requested products, along with related meta-data. 
                  The meta-data specifies the pre-filled values of each attribute, the 
                  possible values of attributes that are not pre-filled, the logic for presenting 
                  the attributes to a user, and rules for validating the user's selections. 
                  The data is based on the GetAttributesCS response (AttributeData).
                  Product and attribute information is nested within a set of Product tags. 
                  The product-specific data is merged into the attribute data so that the same 
                  XSL stylesheet used to render the results of GetAttributeCS can be used to render 
                  product data.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetAccount -->
	<xs:element name="GetAccountRequest" type="ns:GetAccountRequestType"/>
	<xs:complexType name="GetAccountRequestType">
		<xs:annotation>
			<xs:documentation>
                  Retrieves seller account data for the requesting user. A user can only
                  retrieve his or her own account data. GetAccount returns credits and/or
                  debits (account entries) in one of three report formats: invoice, period,
                  or all history. Also returns summary data for the account, as well as
                  account information for any additional accounts.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="AccountHistorySelection" type="ebl:AccountHistorySelectionCodeType">
						<xs:annotation>
							<xs:documentation>
                   Specifies the report format in which to return seller account entries.
                   Valid values are enumerated in the AccountHistorySelectionCodeType code
                   list.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="InvoiceDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Specifies the month and year that identifies the invoice to generate.
                   Used only with invoice reports (for specified invoices), causes the
                   report to include only those seller account entries that were included
                   in the invoice for the specified month and year. Note that this is not
                   the date on which an entry occurred, but the invoice in which an entry
                   was reported to the seller.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="BeginDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Specifies the ealier date in a date range for returned seller account
                   entries. Used only with period reports, BeginDate and EndDate define
                   the date range within which a credit or debit entry had to have occurred
                   for it to be included in the report. Value must be less than or equal to
                   the value specified in EndDate.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Specifies the later date in a date range for returned seller account
                   entries. Used only with period reports, BeginDate and EndDate define
                   the date range within which a credit or debit entry had to have occurred
                   for it to be included in the report. Value must be greater then or equal
                   to the value specified in BeginDate.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Pagination" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Child elements control pagination of the output. Use its EntriesPerPage
                   property to control the number of seller account entries to return per
                   call. Use its PageNumber property to specify the page of data to return.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetAccount -->
	<xs:element name="GetAccountResponse" type="ns:GetAccountResponseType"/>
	<xs:complexType name="GetAccountResponseType">
		<xs:annotation>
			<xs:documentation>
	     			Returns information about an eBay user's own account.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element name="AccountID" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Unique identifier for the requesting user's seller account at eBay.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="AccountSummary" type="ebl:AccountSummaryType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Contains summary data for the seller account, such as the overall
                   balance, bank account and credit card information, and amount and
                   date of any past due amounts. Also can contain defining data for
                   one or more additional accounts, if the user has changed country
                   of residency.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:Currency" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Indicates the currency in which monetary amounts in the report are
                   expressed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:AccountEntries" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Contains zero, one, or multiple individual seller account entries,
                   depending on how many fall into the report's scope or date range. Each
                   account entry represents one credit, debit, or administrative account
                   action.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:PaginationResult" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Contains the total number of pages (TotalNumberOfPages) and the total
                   number of account entries (TotalNumberOfEntries) that could be returned
                   given repeated calls that use the same report format and date criteria
                   (if applicable to the report format) as the call that returned this
                   response.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="HasMoreEntries" type="xs:boolean" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates whether there are more items yet to be retrieved (if a value of true is
                      returned). Additional calls must be made to retrieve these items.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EntriesPerPage" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates the number of items that are being returned per page of data (i.e., per
                      call). Will be the same as the value specified in the Pagination.EntriesPerPage
                      input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                      Indicates which page of data was just returned. Will be the same as the value
                      specified in the Pagination.PageNumber input. (If the input is higher than the
                      total number of pages, the call fails with an error.)
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: AddToItemDescription -->
	<xs:element name="AddToItemDescriptionRequest" type="ns:AddToItemDescriptionRequestType"/>
	<xs:complexType name="AddToItemDescriptionRequestType">
		<xs:annotation>
			<xs:documentation>
                  Retrieves seller account data for the requesting user. A user can only
                  retrieve his or her own account data. GetAccount returns credits and/or
                  debits (account entries) in one of three report formats: invoice, period,
                  or all history. Also returns summary data for the account, as well as
                  account information for any additional accounts.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID">
						<xs:annotation>
							<xs:documentation>
                   Unique item ID that identifies the target item listing, the description
                   of which is appended with the text specified in Description.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Description" type="xs:string">
						<xs:annotation>
							<xs:documentation>
                   Specifies the text to append to the end of the listings description.
                   Text appended to a listing's description must abide by the rules
                   applicable to this data (such as no JavaScript) as is the case when
                   first listing the item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: AddToItemDescription -->
	<xs:element name="AddToItemDescriptionResponse" type="ns:AddToItemDescriptionResponseType"/>
	<xs:complexType name="AddToItemDescriptionResponseType">
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: PlaceOffer -->
	<xs:element name="PlaceOfferRequest" type="ns:PlaceOfferRequestType"/>
	<xs:complexType name="PlaceOfferRequestType">
		<xs:annotation>
			<xs:documentation> 
        Allows the requesting user to submit a bid (make an offer) on a specified
        item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:Offer">
						<xs:annotation>
							<xs:documentation>
                   Specifies the type of offer being made. If the item is a
                   competitive-bidding listing, the offer is a bid. If the item is a
                   fixed-price listing, then the offer purchases the item. If the item is a
                   competitive-bidding listing and the offer is of type with an active,
                   unexercised Buy It Now option, then the offer can either purchase the
                   item or be a bid. See the schema documentation for OfferType for deatils
                   on its properties and their meanings.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:ItemID">
						<xs:annotation>
							<xs:documentation>
                   Unique item ID that identifies the item listing on which the bid is
                   being submitted.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: PlaceOffer -->
	<xs:element name="PlaceOfferResponse" type="ns:PlaceOfferResponseType"/>
	<xs:complexType name="PlaceOfferResponseType">
		<xs:annotation>
			<xs:documentation> 
        The PlaceOffer result set provides feedback on the success and result
        of the offer made.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:SellingStatus" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Indicates the current bidding/purchase state of the item listing, as of
                   the offer extended using PlaceOffer. See the schema documentation for
                   the SellingStatus object, the properties of which contain such
                   post-offer information as the current high bidder, the current price for
                   the item, and the bid increment.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: EndItem -->
	<xs:element name="EndItemRequest" type="ns:EndItemRequestType"/>
	<xs:complexType name="EndItemRequestType">
		<xs:annotation>
			<xs:documentation>
          Ends the specified item listing. Used by a seller to end the
          listing before it would normally end, such as before the
          specified duration has passed or the item was purchased via
          a Buy It Now option. Only the item's seller may call EndItem
          to end the item listing.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID">
						<xs:annotation>
							<xs:documentation>
                   Unique item ID that identifies the item listing to end.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="EndingReason" type="ebl:EndReasonCodeType">
						<xs:annotation>
							<xs:documentation>
                   Indicates the seller's reason for ending the listing early. A reason
                   code is required if the seller is ending the item early and the item
                   did not successfully sell. Possible values are enumerated in the
                   ReasonCodeType code list.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: EndItem -->
	<xs:element name="EndItemResponse" type="ns:EndItemResponseType"/>
	<xs:complexType name="EndItemResponseType">
		<xs:annotation>
			<xs:documentation>
          Includes the acknowledgement of date and time the auction was
          ended due to the call to EndItem.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Indicates the date and time (returned in GMT) the specified item listing
                   was ended.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetHighBidders -->
	<xs:element name="GetHighBiddersRequest" type="ns:GetHighBiddersRequestType"/>
	<xs:complexType name="GetHighBiddersRequestType">
		<xs:annotation>
			<xs:documentation>
        Request to get a list of high bidders for the Dutch auction specified in the input argument ItemId.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:ItemID" minOccurs="1">
						<xs:annotation>
							<xs:documentation>
                   Unique item ID that identifies the Dutch auction listing for which to
                   retrieve a list of the high bidders.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetHighBidders -->
	<xs:element name="GetHighBiddersResponse" type="ns:GetHighBiddersResponseType"/>
	<xs:complexType name="GetHighBiddersResponseType">
		<xs:annotation>
			<xs:documentation>
        Returns a list of high bidders for the Dutch auction specified in the input argument ItemId.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:sequence>
						<xs:element name="BidArray" type="ebl:OfferArrayType">
							<xs:annotation>
								<xs:documentation>
                   Contains a list of zero, one, or multiple OfferType objects. Each
                   OfferType object represents the data for one high bidder. See the schema
                   documentation for OfferType for details on its properties and their
                   meanings.
								</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetCategory2CS -->
	<xs:element name="GetCategory2CSRequest" type="ns:GetCategory2CSRequestType"/>
	<xs:complexType name="GetCategory2CSRequestType">
		<xs:annotation>
			<xs:documentation>
      Retrieves mappings between categories and characteristics sets that are available for an eBay site. 
      Retrieves all mappings or just those that match category IDs passed in the call.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:CategoryID" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  ID of a category for which to retrieve mappings. If not specified, the call 
                  retrieves a map for all categories.
                  CategoryID is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                  A version of the mappings for the site.
                  Typically, an application passes the version value that was returned the last 
                  time the application executed this call.
                  Filter that causes the call to return only the categories 
                  for which the mappings have changed since the specified version.
                  If not specified, all category-to-characteristics set mappings are returned.
                  This value changes each time changes are made to the mappings.
                  The current version value is not necessarily greater than the previous
                  value. Therefore, when comparing versions, only compare whether the 
                  value has changed.
                  AttributeSystemVersion is an optional input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetCategory2CS -->
	<xs:element name="GetCategory2CSResponse" type="ns:GetCategory2CSResponseType"/>
	<xs:complexType name="GetCategory2CSResponseType">
		<xs:annotation>
			<xs:documentation>
      Returns data that indicates the categories that are mapped to characteristics sets, 
      for the eBay site to which the call was routed. 
      Retrieves all mappings or just the one that matches the category ID passed as input.
      The data is returned in a CategoryArrayType object, which can contain multiple mappings.
      The response also contains information about categories for which the mappings have changed.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:MappedCategoryArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                    Contains data about categories that are mapped to characteristics sets.
                    Use this data to determine:
                    - The names and IDs of the characteristics sets 
                    - The availability of the Pre-filled Item Information feature for listings in that category
                      (i.e., whether the category is catalog-enabled)
                    - For catalog-enabled categories, the available product search methods 
                    - The current version information for the complete mapping 
                    - The version information for each characteristics set
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:UnmappedCategoryArray" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                    Contains data about categories whose characteristics set mappings have changed 
                    since the version specified in the request. When a characteristics set mapping 
                    changes, the data appears in both the UnmappedCategoryArray object 
                    (to indicate that the change occurred) and the MappedCategoryArray object.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:AttributeSystemVersion" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                    Current version of the mappings for the site.
                    This value changes each time changes are made to the mappings.
                    The current version value is not necessarily greater than the previous
                    value. Therefore, when comparing versions, only compare whether the 
                    value has changed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductSearchResults -->
	<xs:element name="GetProductSearchResultsRequest" type="ns:GetProductSearchResultsRequestType"/>
	<xs:complexType name="GetProductSearchResultsRequestType">
		<xs:annotation>
			<xs:documentation>
      GetProductSearchResults performs a product search and collects the results. 
      Result attributes for each product/product family are grouped and identified 
      with a product ID.  This call will perform a keyword search 
      for product matches in a characteristics set, or a batch of searches within multiple 
      characteristics sets. Each search will be done against a specified searchable attribute 
      or a combination of such attributes. To determine the valid list of searchable attributes, 
      call GetProductSearchPage or GetProductFinder.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ProductSearch" type="ebl:ProductSearchType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Specifies the attributes that make up the product query, with pagination instructions.
                  ProductSearch is a required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductSearchResults -->
	<xs:element name="GetProductSearchResultsResponse" type="ns:GetProductSearchResultsResponseType"/>
	<xs:complexType name="GetProductSearchResultsResponseType">
		<xs:annotation>
			<xs:documentation>
      GetProductSearchResults performs a product search and collects the results. 
      Result attributes for each product/product family are grouped and identified 
      with a product ID. If more matches are found than the max amount specified per family, 
      only the product family information is returned. In this case, call GetProductFamilyMembers 
      to retrieve more products within the same family.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element name="DataElementSets" type="ebl:DataElementSetType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Container for one or more DataElement fields containing supplemental helpful data. 
                  A DataElement field is an HTML snippet that specifies hints for the user, help links, 
                  help graphics, and other supplemental information that varies per characteristics set. 
                  Usage of this information is optional and may require developers to inspect the information 
                  to determine how it can be applied in an application. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductSearchResult" type="ebl:ProductSearchResultType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Contains the attributes and product details that match the product query passed in the request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetMyeBay -->
	<xs:element name="GetMyeBayRequest" type="ns:GetMyeBayRequestType"/>
	<xs:complexType name="GetMyeBayRequestType">
		<xs:annotation>
			<xs:documentation>
        Retrieves data for the requesting user's My eBay page. This data includes
        a list of items the user is watching and a list of items the user has bid on.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="BiddingSort" type="ebl:ItemSortTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Specifies how the items in the active list (the items the user has bid
                   on) are sorted in the result set. The items may be sorted by item ID,
                   price, title, bid count, and listing end time. See the code list
                   ItemSortTypeCodeType for valid input values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="MaxItemsPerList" type="xs:int" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Specifies maximum number of items to display in each of the lists.
                   Recommended value is 5. If not specified, all possible items for each
                   list are returned. One maximum is specified and applies to all of the
                   lists in the result set.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="WatchSort" type="ebl:ItemSortTypeCodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
                   Specifies how the items in the watch list (the items the user is watching)
                   are sorted in the result set. The items may be sorted by item ID,
                   price, title, bid count, and listing end time. See the code list
                   ItemSortTypeCodeType for valid input values.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetMyeBay -->
	<xs:element name="GetMyeBayResponse" type="ns:GetMyeBayResponseType"/>
	<xs:complexType name="GetMyeBayResponseType">
		<xs:annotation>
			<xs:documentation>
        Contains the lists of items from the requesting user's My
        eBay page. This includes a list of the items the user has bid
        on and a list of the items the user is watching. The number of
        items returned in any list can be controlled using the MaxItemsPerList
        property of the request object.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:BiddingItemArray">
						<xs:annotation>
							<xs:documentation>
                   Contains the list of items the requesting user has bid on. BiddingItemArray is
                   an array of ItemType objects, each of which represents one item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:WatchItemArray">
						<xs:annotation>
							<xs:documentation>
                   Contains the list of items the requesting user is watching. WatchItemArray is
                   an array of ItemType objects, each of which represents one item.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductSearchPage -->
	<xs:element name="GetProductSearchPageRequest" type="ns:GetProductSearchPageRequestType"/>
	<xs:complexType name="GetProductSearchPageRequestType">
		<xs:annotation>
			<xs:documentation>
      For a category that is catalog-enabled, GetProductSearchPage retrieves the attributes 
      a seller can use to form a query when searching for Pre-filled Item Information. 
      Specifically, it retrieves data that you use to construct valid "single-attribute" queries. 
      The attributes describe search criteria (e.g., Author) and sorting criteria (e.g., Publication Year), 
      as appropriate for the category. GetProductSearchPage does not conduct the actual product search.
      It only returns data about what you can search on. Use the data as input to 
      GetProductSearchResults to conduct the actual search for product information.
      To retrieve Product Finder search criteria (querying against multiple attributes), use 
      GetProductFinder instead.
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:AttributeSystemVersion">
						<xs:annotation>
							<xs:documentation>
                  A version of the search page definitions for the site.
                  Typically, an application passes the version value that was returned the last 
                  time the application executed this call.
                  Filter that causes the call to return only the search pages 
                  for which the attribute meta-data has changed since the specified version.
                  The latest version value is not necessarily greater than the previous
                  value that was returned. Therefore, when comparing versions, only  
                  compare whether the value has changed.
                  AttributeSystemVersion is an optional input. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element ref="ebl:AttributeSetID" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  An array of characteristics set IDs (which always correspond to attribute set IDs). 
                  Each characteristics set corresponds to a level in the eBay category hierarchy at
                  which all items share common characteristics. 
                  Multiple categories can be mapped to the same characteristics set.
                  AttributeSetIDs is an optional input. When IDs are specified, the call 
                  only returns search page data for the corresponding characteristics sets.
                  When no IDs are specified, the call returns allthe current search page data
                  in the system.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductSearchPage -->
	<xs:element name="GetProductSearchPageResponse" type="ns:GetProductSearchPageResponseType"/>
	<xs:complexType name="GetProductSearchPageResponseType">
		<xs:annotation>
			<xs:documentation>
      For a category that is catalog-enabled, GetProductSearchPage retrieves the attributes 
      a seller can use to form a query when searching for Pre-filled Item Information. 
      See the Developer's Guide for an overview of Pre-filled Item Information and details about 
      searching for catalog products.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
				    <xs:element name="AttributeSystemVersion" type="xs:string">
					    <xs:annotation>
							<xs:documentation>
          Current version of the product search page data for the site.
          This value changes each time changes are made to the search page data.
          The current version value is not necessarily greater than the previous
          value. Therefore, when comparing versions, only compare whether the 
          value has changed.
					          </xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductSearchPage" type="ebl:ProductSearchPageType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Current version of the product search page data for the site.
                  This value changes each time changes are made to the search page data.
                  The current version value is not necessarily greater than the previous
                  value. Therefore, when comparing versions, only compare whether the 
                  value has changed.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetSearchResults -->
	<xs:element name="GetSearchResultsRequest" type="ns:GetSearchResultsRequestType"/>
	<xs:complexType name="GetSearchResultsRequestType">
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="Query" type="xs:string"/>
					<xs:element ref="ebl:CategoryID" minOccurs="0"/>
					<xs:element name="SearchFlags" type="ebl:SearchFlagsCodeType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element ref="ebl:PriceRangeFilter" minOccurs="0"/>
					<xs:element ref="ebl:ItemTypeFilter" minOccurs="0"/>
					<xs:element name="SearchType" type="ebl:SearchTypeCodeType" minOccurs="0"/>
					<xs:element ref="ebl:UserIdFilter" minOccurs="0"/>
					<xs:element ref="ebl:SearchLocationFilter" minOccurs="0"/>
					<xs:element ref="ebl:StoreSearchFilter" minOccurs="0"/>
					<xs:element name="Order" type="ebl:SearchSortOrderCodeType" minOccurs="0"/>
					<xs:element name="Pagination" type="ebl:PaginationType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetSearchResults -->
	<xs:element name="GetSearchResultsResponse" type="ns:GetSearchResultsResponseType"/>
	<xs:complexType name="GetSearchResultsResponseType">
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element name="SearchResultItemArray" type="ebl:SearchResultItemArrayType" minOccurs="0"/>
					<xs:element name="ItemsPerPage" type="xs:int" minOccurs="0"/>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0"/>
					<xs:element name="HasMoreItems" type="xs:boolean"/>
					<xs:element ref="ebl:PaginationResult" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: AddSecondChanceItem -->
	<xs:element name="AddSecondChanceItemRequest" type="ns:AddSecondChanceItemRequestType"/>
	<xs:complexType name="AddSecondChanceItemRequestType">
		<xs:annotation>
			<xs:documentation>
		              AddSecondChanceItem request to create a new Second Chance Offer for an item to one of 
		              that item's bidders.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="RecipientBidderUserID" type="ebl:UserIDType"/>
					<xs:element name="BuyItNowPrice" type="cc:AmountType"/>
					<xs:element name="CopyEmailToSeller" type="xs:boolean"/>
					<xs:element name="Duration" type="ebl:SecondChanceOfferDurationCodeType"/>
					<xs:element name="ItemID" type="ebl:ItemIDType"/>
					<xs:element ref="ebl:Site"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: AddSecondChanceItem -->
	<xs:element name="AddSecondChanceItemResponse" type="ns:AddSecondChanceItemResponseType"/>
	<xs:complexType name="AddSecondChanceItemResponseType">
		<xs:annotation>
			<xs:documentation>
			     AddSecondChanceItem request to create a new Second Chance Offer for an item to one of 
		            that item's bidders.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:Fees"/>
					<xs:element name="ItemID" type="ebl:ItemIDType" minOccurs="0"/>
					<xs:element name="StartTime" type="xs:dateTime" minOccurs="0"/>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: VerifyAddSecondChanceItem -->
	<xs:element name="VerifyAddSecondChanceItemRequest" type="ns:VerifyAddSecondChanceItemRequestType"/>
	<xs:complexType name="VerifyAddSecondChanceItemRequestType">
		<xs:annotation>
			<xs:documentation>
		              VerifyAddSecondChanceItem request to emulate creation of a new Second Chance Offer for an item to one of 
		              that item's bidders.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="RecipientBidderUserID" type="ebl:UserIDType"/>
					<xs:element name="BuyItNowPrice" type="cc:AmountType"/>
					<xs:element name="CopyEmailToSeller" type="xs:boolean"/>
					<xs:element name="Duration" type="ebl:SecondChanceOfferDurationCodeType"/>
					<xs:element name="ItemID" type="ebl:ItemIDType"/>
					<xs:element ref="ebl:Site"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: VerifyAddSecondChanceItem -->
	<xs:element name="VerifyAddSecondChanceItemResponse" type="ns:VerifyAddSecondChanceItemResponseType"/>
	<xs:complexType name="VerifyAddSecondChanceItemResponseType">
		<xs:annotation>
			<xs:documentation>
		              VerifyAddSecondChanceItem request to emulate creation of a new Second Chance Offer for an item to one of 
		              that item's bidders.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:Fees"/>
					<xs:element name="StartTime" type="xs:dateTime" minOccurs="0"/>
					<xs:element name="EndTime" type="xs:dateTime" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductFamilyMembers -->
	<xs:element name="GetProductFamilyMembersRequest" type="ns:GetProductFamilyMembersRequestType"/>
	<xs:complexType name="GetProductFamilyMembersRequestType">
		<xs:annotation>
			<xs:documentation>
      The GetProductFamilyMembers call is similar to the GetProductSearchResults call. 
      Instead of passing in a query, you pass in a product ID. This product ID is used to 
      find all the members of the product family that the specified product is a member of. 
      Use this call when more matches are found than the  max amount specified per family 
      in a call to GetProductSearchResults.
      This call supports batch requests. This means you can retrieve products in 
      multiple families by using a single request.
      The results are compatible with the results from GetProductSearchResults,  
      so similar application logic can be used to handle both requests and responses.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ProductSearch" type="ebl:ProductSearchType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Specifies the ID of a product in the family to be retrieved, 
                  along with pagination and sorting instructions.
                  ProductSearch is a required input.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetProductFamilyMembers -->
	<xs:element name="GetProductFamilyMembersResponse" type="ns:GetProductFamilyMembersResponseType"/>
	<xs:complexType name="GetProductFamilyMembersResponseType">
		<xs:annotation>
			<xs:documentation>
      GetProductFamilyMembers performs a product search and returns results comprising
      all the children in the product family identified by a product ID that was 
      specified in the request. Use this call when more matches are found than the 
      max amount specified per family in a call to GetProductSearchResults.
      This call supports batch requests. This means you can retrieve products in 
      multiple families by using a single request.
      The results are compatible with the results from GetProductSearchResults,  
      so similar application logic can be used to handle both requests and responses.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
				     <xs:element name="DataElementSets" type="ebl:DataElementSetType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
                  Container for one or more DataElement fields containing supplemental helpful data. 
                  A DataElement field is an HTML snippet that specifies hints for the user, help links, 
                  help graphics, and other supplemental information that varies per characteristics set. 
                  Usage of this information is optional and may require developers to inspect the information 
                  to determine how it can be applied in an application. 
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductSearchResult" type="ebl:ProductSearchResultType" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
               Contains the attributes and summary product details for all products that match  
               the product ID (or IDs) passed in the request.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetCategoryListings -->
	<xs:element name="GetCategoryListingsRequest" type="ns:GetCategoryListingsRequestType"/>
	<xs:complexType name="GetCategoryListingsRequestType">
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:CategoryID"/>
					<xs:element ref="ebl:Currency"/>
					<xs:element ref="ebl:ItemTypeFilter" minOccurs="0"/>
					<xs:element name="SearchType" type="ebl:CategoryListingsSearchCodeType"/>
					<xs:element name="OrderBy" type="ebl:CategoryListingsOrderCodeType"/>
					<xs:element ref="ebl:Pagination"/>
					<xs:element ref="ebl:SearchLocation"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetCategoryListings -->
	<xs:element name="GetCategoryListingsResponse" type="ns:GetCategoryListingsResponseType"/>
	<xs:complexType name="GetCategoryListingsResponseType">
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:ItemArray" minOccurs="0"/>
					<xs:element name="Category" type="ebl:CategoryType"/>
					<xs:element name="SubCategories" type="ebl:CategoryArrayType"/>
					<xs:element name="ItemsPerPage" type="xs:int" minOccurs="0"/>
					<xs:element name="PageNumber" type="xs:int" minOccurs="0"/>
					<xs:element name="HasMoreItems" type="xs:boolean"/>
					<xs:element ref="ebl:PaginationResult" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: LeaveFeedback -->
	<xs:element name="LeaveFeedbackRequest" type="ns:LeaveFeedbackRequestType"/>
	<xs:complexType name="LeaveFeedbackRequestType">
		<xs:annotation>
			<xs:documentation>
		              LeaveFeedback performs a posting of positive, negative, or neutral feedback 
		              information about a user after the conclusion of an auction. This feedback data 
		              can later be retrieved by other users to evaluate the rated user regarding the 
		              desirability of doing business with that user. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element name="ItemID" type="ebl:ItemIDType"/>
					<xs:element name="CommentText" type="xs:string"/>
					<xs:element name="CommentType" type="ebl:CommentTypeCodeType"/>
					<xs:element ref="ebl:TransactionID"/>
					<xs:element name="TargetUser" type="ebl:UserIDType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: LeaveFeedback -->
	<xs:element name="LeaveFeedbackResponse" type="ns:LeaveFeedbackResponseType"/>
	<xs:complexType name="LeaveFeedbackResponseType">
		<xs:annotation>
			<xs:documentation>
			      LeaveFeedback response message includes an acknowledgement if the feedback was successfully left. 
			      To use LeaveFeedback, the function call must be associated with a successfully concluded auction. 
			      The completed auction is represented by the item indicated in the ItemId input argument. The auction's 
			      winning bidder can leave feedback about the seller and the auction's seller can leave feedback about 
			      the winning bidder. Attempting to use LeaveFeedback other than in association with a completed 
			      auction or by users other than the auction's seller or winning bidder results in an error. If the 
			      successfully concluded auction resulting in a feedback was an eBay Stores Inventory (Stores 
			      fixed-price) listing, a value must be supplied in the TransactionID argument to properly associate 
			      it with the purchase transaction.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType"/>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetFeedback -->
	<xs:element name="GetFeedbackRequest" type="ns:GetFeedbackRequestType"/>
	<xs:complexType name="GetFeedbackRequestType">
		<xs:annotation>
			<xs:documentation>
		              GetFeedback performs a retrieval of cumulative feedback data that has been left 
		              for an eBay member by other members. Feedback is left after a buyer has made a 
		              purchase from a listing (Fixed Price, Store Inventory, and Buy It Now) or when a 
		              buyer is the winning bidder in a competitive-bidding listing (Chinese and Dutch 
		              auction). In other words, feedback can be left after a transaction has been 
		              created for a listing. The buyer can leave feedback for the seller, and the seller 
		              can leave feedback for the buyer. Feedback can have one of three ratings: positive, 
		              negative, or neutral. 
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractRequestType">
				<xs:sequence>
					<xs:element ref="ebl:Pagination"/>
					<xs:element name="UserID" type="ebl:UserIDType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
<!--  Call: GetFeedback -->
	<xs:element name="GetFeedbackResponse" type="ns:GetFeedbackResponseType"/>
	<xs:complexType name="GetFeedbackResponseType">
		<xs:annotation>
			<xs:documentation>
			       In the GetFeedback response, the detailed feedback that has been left for the 
			       member is returned in a list of FeedbackDetailItem nodes (one for each feedback 
			       comment left). For each feedback comment, the rating is returned in the 
			       CommentType element. Other information, such as the actual text of each comment, 
			       is also returned. A member's feedback score is the net positive feedback minus 
			       the net negative feedback left for the member. Thus, the feedback score can be 
			       used a quantitative expression of the desirability of dealing with an eBay member 
			       as a buyer or a seller. The feedback score is returned in the Score element.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="ebl:AbstractResponseType">
				<xs:sequence>
					<xs:element ref="ebl:FeedbackDetailArray" minOccurs="0"/>
					<xs:element name="FeedbackDetailItemTotal" type="xs:int" minOccurs="0"/>
					<xs:element ref="ebl:FeedbackSummary" minOccurs="0"/>
					<xs:element name="FeedbackScore" type="xs:int" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

		</schema>
			<xs:schema targetNamespace="urn:ebay:apis:CoreComponentTypes" xmlns:ebl="urn:ebay:apis:eBLBaseComponents" xmlns:ns="urn:ebay:apis:CoreComponentTypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<!-- Definition of AmountType -->
	<xs:complexType name="AmountType">
      <xs:annotation>
			<xs:documentation>
	        Basic type for specifying monetary amounts. A decimal value (e.g., 1.00)
	        is meaningful as an amount when accompanied by a specification of the currency,
	        in which case the value specifies the amount in that currency.
	        An AmountType expresses both the value (a decimal) and the currency. 
	        Details such as prices, fees, costs, and payments are specified as amount types.
				</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="currencyID" type="ebl:CurrencyCodeType" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="BasicAmountType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="currencyID" type="ebl:CurrencyCodeType" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!-- Definition of MeasureType -->
	<xs:complexType name="MeasureType">
      <xs:annotation>
			<xs:documentation>
        Basic type for specifying measures. A decimal value (e.g., 10.25) is meaningful 
        as a measure when accompanied by a definition of the unit of measure (e.g., Pounds), 
        in which case the value specifies the quantity of that unit. 
        A MeasureType expresses both the value (a decimal) and the unit. 
        Details such as shipping weights are specified as measure types.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:decimal">
				<xs:attribute name="unit" type="xs:token" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!-- Definition of QuantityType -->
	<xs:complexType name="QuantityType">
      <xs:annotation>
			<xs:documentation>
        Basic type for specifying quantities.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:decimal">
				<xs:attribute name="unit" type="xs:token" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<!-- Definition of UUIDType (as a simpleType)-->
	<xs:simpleType name="UUIDType">
		<xs:annotation>
			<xs:documentation>
		  Specifies a universally unique identifier. The UUID can 
        only contain digits from 0-9 and letters from A-F. The 
        UUID must be 32 characters long.  For example, 
        1FB02B2-9D27-3acb-ABA2-9D539C374228
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:length value="36"/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
		<xs:schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:ebay:apis:eBLBaseComponents" xmlns:cc="urn:ebay:apis:CoreComponentTypes" xmlns:ns="urn:ebay:apis:eBLBaseComponents" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified">

	<!--  

##### from file eBLBaseComponents/eBLBaseComponents.xsd #####

-->	<xs:annotation>

		<xs:documentation>

			This file defines re-useable base and aggregate components of the 

			eBay Business Lanaguage (eBL) that would be used to compose 

			message payloads for eBay APIs.

 		</xs:documentation>

	</xs:annotation>
<xs:simpleType name="ItemIDType">

		<xs:annotation>

			<xs:documentation>

        Type that represents the unique identifier for a single item listing.

			</xs:documentation>

		</xs:annotation>

		<xs:restriction base="xs:string"/>

	</xs:simpleType>
<xs:simpleType name="UserIDType">

		<xs:restriction base="xs:string">

			<xs:length value="127"/>

		</xs:restriction>

	</xs:simpleType>
<xs:complexType name="AccountEntryType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data for a single account detail entry. Each detail entry is a

        transaction posted to the account and may be: a credit, a debit, or an

        administrative action (such as an update putting a credit card on file for

        the account).

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AccountDetailsEntryType" type="ns:AccountDetailEntryCodeType">

				<xs:annotation>

					<xs:documentation>

                Indicates the type of transaction or reason for the transaction. For example,

                a value of FeeGallery indicates a debit for listing an item in the Gallery.

                Possible values are enumerated in the AccountDetailEntryCodeType code list.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:Balance">

				<xs:annotation>

					<xs:documentation>

                Balance after the account entry's credit or debit amount has been applied.

                Can be 0.00.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Credit" type="cc:AmountType">

				<xs:annotation>

					<xs:documentation>

                Credit amount for a detail entry. Will be 0.00 if the entry is a debit.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Date" type="xs:dateTime">

				<xs:annotation>

					<xs:documentation>

                Date entry was posted to the account, in GMT. (Also see the Data Types

                appendix for more information on how GMT dates are handled in SOAP.)

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Debit" type="cc:AmountType">

				<xs:annotation>

					<xs:documentation>

                Debit amount for this detail entry. Will be 0.00 if the entry is a credit.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="GrossDetailAmount" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

						Gross fees that are assessed by eBay (net fees plus VAT, if any).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ItemID">

				<xs:annotation>

					<xs:documentation>

                Item ID (if the account detail entry is associated with an item listing) or

                0 (if no item listing is associated with the account entry).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Memo" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Memo line for the account entry, can be an empty string.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="NetDetailAmount" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                				Net fees that are assessed by eBay, excluding additional surcharges and VAT (if any).

 					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="RefNumber" type="xs:string">

				<xs:annotation>

					<xs:documentation>

                eBay reference number for the account entry. May return no value for some

                account transactions, such as an administrative action like placing the

                user's credit card on file.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="VATPercent" type="xs:decimal" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                  			The VAT rate (if any) of the specified user's registered country of residence. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="AccountEntriesType">

		<xs:annotation>

			<xs:documentation> 

        Collection of zero, one, or multiple individual detail account entries. Contains

        one AccountEntry object for each account entry returned. (See the schema

        documentation for AccountEntryType for details on its properties.)

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:AccountEntry" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

                Contains the data for one account entry. (See the schema

                documentation for AccountEntryType for details on its properties.)

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="AdditionalAccountType">

		<xs:annotation>

			<xs:documentation>

            Contains the data for one additional account. An additional account is

            created when the user has an active account and changes country of

            registry (i.e., registers with the eBay site for the new country). A

            new account is created and the old account becomes inactive as an

            additional account. A user who never changes country of residency while

            having an account will never have any additional accounts.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:Balance">

				<xs:annotation>

					<xs:documentation>

                   Indicates the current balance of the additional account.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:Currency">

				<xs:annotation>

					<xs:documentation>

                   Indicates the currency in which monetary amounts for the additional

                   account are expressed.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:AccountCode">

				<xs:annotation>

					<xs:documentation>

                   Indicates the unique identifier for the additional account (the account

                   ID).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="AccountSummaryType">

		<xs:annotation>

			<xs:documentation>

        Summary data for the requesting user's seller account as a whole. This includes a

        balance for the account, any past due amount and date, and defining data for

        additional accounts (if the user has changed country of residency while having an

        active eBay account).

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AccountState" type="ns:AccountStateCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Indicates the current state of the account (such as active or inactive).

                Possible values are enumerated in the AccountStateCodeType code list.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="AdditionalAccount" type="ns:AdditionalAccountType" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

                Contains the data for one additional account. An AccountSummaryType object

                may return zero, one, or multiple additional accounts. See the schema

                documentation for AdditionalAccountType for details on additional accounts.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="AdditionalAccountsCount" type="xs:int">

				<xs:annotation>

					<xs:documentation>

                Number of additional accounts returned.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:AmountPastDue" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Amount past due, 0.00 if not past due. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BankAccountInfo" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                First four digits of the bank account the user associated with the seller

                account (with remainder Xed-out). This may be an empty string depending

                upon the payment type the user selected for the account (e.g, if no

                debit-card specified).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BankModifyDate" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Indicates the date and time BankAccountInfo was last modified, in GMT.

                (Also see the Data Types appendix for more information on how GMT dates are

                handled in SOAP.) This may be an empty string depending upon the payment

                type the user selected for the account (e.g, if no debit-card specified).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BillingCycleDate" type="xs:int">

				<xs:annotation>

					<xs:documentation>

                Indicates the billing cycle in which eBay sends a billing invoice to the

                user. A value of 0 (zero) indicates an invoice sent on the last day of the

                month. A value of 15 indicates an invoice sent on the 15th day of the

                month.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CreditCardExpiration" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Expiration date for the credit card selected by the user as payment method

                for the account, in GMT. (Also see the Data Types appendix for more

                information on how GMT dates are handled in SOAP.) Empty string if no

                credit card is on file or if the account is inactive--even if there is a

                credit card on file.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CreditCardInfo" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Last four digits of the credit card the user selected as payment method for

                the account. Empty string if no credit is on file.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CreditCardModifyDate" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Indicates the date and time credit card or credit card expiration date was

                last modified, in GMT. (Also see the Data Types appendix for more

                information on how GMT dates are handled in SOAP.) This may be an empty

                string depending on the payment method the user selected for the account

                (e.g, Empty string if no credit card is on file.)

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:CurrentBalance">

				<xs:annotation>

					<xs:documentation>

                Current balance for the account. Can be 0.00, positive, or negative.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:Email" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Email address for the user.  Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="InvoiceBalance" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Amount of last invoice. 0.00 if account not yet invoiced.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="InvoiceDate" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Date of last invoice sent by eBay to the user, in GMT. (Also see the Data

                Types appendix for more information on how GMT dates are handled in SOAP.)

                Empty string if this account has not been invoiced yet.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="LastAmountPaid" type="cc:AmountType">

				<xs:annotation>

					<xs:documentation>

                Amount of last payment posted, 0.00 if no payments posted.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="LastPaymentDate" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Date of last payment by the user to eBay, in GMT. (Also see the Data Types

                appendix for more information on how GMT dates are handled in SOAP.) Empty

                string if no payments have been posted. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PastDue" type="xs:boolean">

				<xs:annotation>

					<xs:documentation>

                Indicates whether the account has past due amounts outstanding. A value of

                true indicates that the account is past due. A value of false indicates the

                account is current.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PaymentMethod" type="ns:SellerPaymentMethodCodeType">

				<xs:annotation>

					<xs:documentation>

                Indicates the method the user selected to pay eBay with for the account.

                The values for PaymentMethod vary from one global eBay site to the next.

                Payment methods are enumerated in the SellerPaymentMethodCodeType code

                list.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="AttributeType">

		<xs:annotation>

			<xs:documentation> 

      A salient aspect or feature of an item. Used to describe an item 

      in a standard way so that buyers can find it more easily.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Value" type="ns:ValType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            List of one or more valid values for the attribute.

            Call GetAttributesCS to determine valid attribute values.

			       </xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

		<xs:attribute name="attributeID" type="xs:int">

			<xs:annotation>

				<xs:documentation>

         Constant value that identifies the attribute in a language-independent way.

         Unique within the attribute set. Call GetCategory2CS to determine valid attribute IDs.

				</xs:documentation>

			</xs:annotation>

		</xs:attribute>

	</xs:complexType>
<xs:complexType name="AttributeSetType">

		<xs:annotation>

			<xs:documentation> 

      A set of salient aspects or features that describe an item in a standardized way.

      When used as input, a maximum of 2 AttributeSet types can be specified 

      (one for each category in which the item is listed, if Category and Category2 are 

      mapped to different characteristics sets). See the guide for more information. 

      In item-listing requests, this type is required if attributes are identified as required in 

      the characteristics set meta-data. See the guide for information about 

      characteristics meta-data and how to determine when attributes are required.

               </xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Attribute" type="ns:AttributeType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            A salient aspect or feature of an item. Used to describe an item 

            in a standard way so that buyers can find it more easily. 

            In item-listing requests, multiple attributes can be specified. 

            Some categories (e.g., Tickets) always require certain attributes to be specified. 

            Therefore, in item-listing requests, specify "editable" attributes 

            (Type 0 and editable Type 2 attributes) 

            that are identified as required in the characteristics set meta-data. 

            See the guide for information about characteristics meta-data, how to determine 

            the valid attributes for a category, and how to determine whether attributes

            are required.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

		<xs:attribute name="attributeSetID" type="xs:int">

			<xs:annotation>

				<xs:documentation>

         Constant value that identifies the attribute set in a language-independent way.

         Unique across all eBay sites. Corresponds to a characteristics set ID. 

         Call GetCategoryCS to determine valid characteristics set IDs.

				</xs:documentation>

			</xs:annotation>

		</xs:attribute>

		<xs:attribute name="attributeSetVersion" type="xs:string" use="optional">

			<xs:annotation>

				<xs:documentation>

         Version of the attribute set being specified (in requests) or that is

         currently on the site. This value changes each time changes are made to the mappings.

         The current version value is not necessarily greater than the previous

         value. Therefore, when comparing versions, only compare whether the

         value has changed.

				</xs:documentation>

			</xs:annotation>

		</xs:attribute>

	</xs:complexType>
<xs:complexType name="AttributeSetArrayType">

		<xs:annotation>

			<xs:documentation> 

      A list of attribute sets. Each attribute set contains a list of attributes

      that describe salient aspects or features of an item in a standardized way.

      See the guide for more information. In item-listing requests, this type is required 

      if attributes are identified as required in the characteristics set meta-data. 

      See the guide for information about characteristics meta-data and how to 

      determine when attributes are required.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AttributeSet" type="ns:AttributeSetType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            A maximum of 2 AttributeSet types can be specified 

            (one for each category in which the item is listed, if Category and Category2 are 

            mapped to different characteristics sets). See the guide for more information. 

            In item-listing requests, this type is required if attributes are identified as required in 

            the characteristics set meta-data. See the guide for information about 

            characteristics meta-data and how to determine when attributes are required.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="LookupAttributeArrayType">

		<xs:annotation>

			<xs:documentation> 

       A list of optional attributes and values that the seller wants to include in the listing. 

       Enables you to specify attributes by name rather than by ID.

       Only valid in Media categories (Books, DVD and Movies, Music, and Video Game categories). 

       You can pass either AttributeSetArrayType or 

       LookupAttributeArrayType, but you cannot pass both containers in the same request. 

       Input only.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="LookupAttribute" type="ns:LookupAttributeType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            An optional attributes that the seller wants to include in the listing. 

            Enables you to specify an attribute by name rather than by ID.

            Only valid in Media categories (Books, DVD and Movies, Music, and Video Game categories). 

            See LookupAttributeType.

            Input only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="LookupAttributeType">

		<xs:annotation>

			<xs:documentation> 

          An optional attribute that the seller wants to include in the listing. 

          Enables you to specify an attribute by name rather than by ID.

          Only valid in Media categories (Books, DVD and Movies, Music, and Video Game categories).

          Currently, only the Condition attribute is supported.

	       Input only.

				</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Name" type="xs:string">

				<xs:annotation>

					<xs:documentation> 

            The literal name of the attribute. Pass "Condition" (without quotes).

            Input only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Value" type="xs:string">

				<xs:annotation>

					<xs:documentation> 

            The literal name of the attribute value. Pass "New" or "Used" (without quotes).

            Input only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="BuyerType">

		<xs:annotation>

			<xs:documentation>

          Contains information about a user as a buyer.

				</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:ShippingAddress" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Contains the address of the buyer in the transaction, to which the seller

            would ship the item(s). See AddressType for its child elements.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CategoryType">

		<xs:annotation>

			<xs:documentation>

        Container for data on one listing category.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AutoPayEnabled" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates that the category supports immediate payment.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="B2BVATEnabled" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

             If true, indicates that the category supports business-to-business (B2B) VAT listings. 

             Applicable for the eBay Germany (DE), Austria (AT), or Switzerland (CH) site only.

			    Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CatalogEnabled" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, the category is associated with catalog content and the corresponding catalog 

            is identified by the characteristics set ID. See CharacteristicsSets.

            As the Pre-filled Item Information feature uses the Item Specifics feature, 

            the set of catalog-enabled categories is a subset of the categories that are mapped 

            to characteristics sets.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CategoryID" type="xs:string">

				<xs:annotation>

					<xs:documentation> 

            Category ID for the category represented by the CategoryType

            object.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CategoryLevel" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates depth of the category in the overall category

            hierarchy for the specified site. If CategoryLevel has a value

            of 2, then the category is two levels off the root category.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CategoryName" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Textual name of the category indicated in CategoryID.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CategoryParentID" type="xs:string" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            Category ID identifying the category that is parent in the category

            hierarchy to the category indicated in CategoryID.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CategoryParentName" type="xs:string" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            Textual name of the category indicated in CategoryParentID.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ProductFinderID" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Specifies the Product Finder ID associated with this category, if any.

            Only returns a value when ProductFinderAvailable is is true.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ProductSearchPageAvailable" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If the category supports single-attribute search, this field returns a value of true. 

            Otherwise this field is returned as null or false. 

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ProductFinderAvailable" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            If the category supports a Product Finder-based search, this field

            returns a value of true. Otherwise this field returns null or false.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CharacteristicsSets" type="ns:CharacteristicsSetType" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            A list of one or more characteristics sets mapped to the category. 

            Use this information when working with Item Specifics (Attributes) and 

            Pre-filled Item Information (Catalogs) functionality.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Expired" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates a category that has expired and to which items

            may not be listed.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="IntlAutosFixedCat" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates that the category is a fixed-fee category. Use this 

            information to identify categories are not eligible for eBay Stores Inventory 

            format listings. You cannot list eBay Store Inventory format listings in 

            fixed-fee categories on international sites. 

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="LeafCategory" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates that the category indicated in CategoryID is a

            leaf category, in which items may be listed (if the category is not

            also expired or virtual).

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="LotSizeDisabled" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            		</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Virtual" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates the that category indicated in CategoryID is a

            virtual category, to which items may not be listed.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="NumOfItems" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

					TODO

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SellerGuaranteeEligible" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether this category is eligible for Motors Seller Guarantee program.

            This tag is being emitted for eligible categories only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CategoryArrayType">

		<xs:annotation>

			<xs:documentation> 

            Container for a list of categories.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:Category" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

                   Contains the data for one category. See the schema documentation for

                   CategoryType for details on its properties and their meanings.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CharacteristicType">

		<xs:annotation>

			<xs:documentation>

            A salient aspect or feature of an item. Used to describe an item 

            in a standard way so that buyers can find it more easily. 

            An individual, standardized characteristic that is common to all 

            items within the specified characteristics set. 

            Applicable when working with Item Specifics (Attributes) and 

            Pre-filled Item Information (Catalogs) functionality.

            See the guide for more information.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:AttributeID">

				<xs:annotation>

					<xs:documentation>

         Constant value that identifies the characteristic in a language-independent way.

         Unique within the characteristics set.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="DateFormat" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Applicable when working with Pre-filled Item Information (Catalogs) functionality.

            Returned if the characteristic is a Date data type. Specifies the pattern 

            to use when presenting the date to a user. Possible values:

            Day/Month/Year, Month/Year, Year Only.

            For example, the Year Only format would indicate that date 

            would be a value like 1999.  

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="DisplaySequence" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>



            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="DisplayUOM" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Applicable when working with Pre-filled Item Information (Catalogs) functionality.

            The unit of measure (e.g., Inch) to use when the characteristic is numeric. 

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Label" type="ns:LabelType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Applicable when working with Pre-filled Item Information (Catalogs) functionality.

            The label to display when presenting the attribute to a user. 

            Not necessarily the same as the attribute's label as defined in the 

            characteristics set (i.e., the label could be overridden by the catalog). 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SortOrder" type="ns:SortOrderCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Applicable when working with Pre-filled Item Information (Catalogs) functionality.

            Indicates the order in which the search engine will sort the results if you 

            pass this characteristic as the sort key in other requests. Applications cannot 

            change the sort order of a characteristic. 

            If SortOrder is not returned at all, it means the results will be returned 

            in the order in which they are stored. This is useful for 

            international sites that use ideographic characters. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ValueList" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            List of one or more valid values for the characteristic.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CharacteristicsSetType">

		<xs:annotation>

			<xs:documentation>

      A level in the eBay category hierarchy at which a particular group of 

      items can share a common set of attributes. A set of characteristics 

      that can be used to describe similar kinds of items in a standardized way.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Name" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

         The well-known name of the characteristics set (e.g., "Tickets" or "Books"). 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="AttributeSetID" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

         Constant value that identifies the characteristics set in a language-independent way.

         Unique across all eBay sites.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="AttributeSetVersion" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Version of the characteristics meta-data mapping. 

            The current value of the version is not necessarily "greater than" the 

            previous value. Therefore, when comparing versions, you should merely test 

            whether or not the current version value is identical to the version value 

            you have stored locally. In responses, the version information is always 

            returned, even when no meta-data is returned.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Characteristics" type="ns:CharacteristicType" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            A salient aspect or feature of an item. Used to describe an item 

            in a standard way so that buyers can find it more easily. 

            An individual, standardized characteristic that is common to all 

            items within the specified characteristics set. 

            See the guide for more information.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CharityType">

		<xs:annotation>

			<xs:documentation> 

              Identifies a Giving Works listing and beneficiary. 

              Not applicable for US eBay Motors, international, Real Estate, and Tickets. 

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="CharityName" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            The name of the benefiting nonprofit organization 

            the seller selected. Max length 254.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CharityNumber" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            The number assigned to the nonprofit organization by the provider of 

            the Giving Assistant for eBay Giving Works. Max 10 digits.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="DonationPercent" type="xs:float" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            The percentage of the purchase price that the seller chose to donate to 

            the selected nonprofit organization. Possible values: 1.0 to 100.0. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ExternalProductIDType">

		<xs:annotation>

			<xs:documentation>

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Value" type="xs:string">

				<xs:annotation>

					<xs:documentation>

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ReturnSearchResultOnDuplicates" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Type" type="ns:ExternalProductCodeType">

				<xs:annotation>

					<xs:documentation>

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="FeeType">

		<xs:annotation>

			<xs:documentation>

			     Identifies the name and monetary amount of a fee that a member 

			     pays to eBay (or an eBay company). See AddItemResponseType for a 

			     list of current fees related to listing items.

                   </xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Name" type="xs:string" minOccurs="0"/>

			<xs:element name="Fee" type="cc:AmountType" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="FeesType">

		<xs:annotation>

			<xs:documentation>

			    Identifies a set of one or more fees that a member pays to eBay 

			    (or an eBay company). See AddItemResponseType for current listing Fee types.

			    Instances of this type can hold one or more fees.

          </xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Fee" type="ns:FeeType" maxOccurs="unbounded"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="FeedbackDetailArrayType">

		<xs:annotation>

			<xs:documentation> 

            Contains multiple individual feedback detail entries.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:FeedbackDetail" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            Contains a single feedback detail entry.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="FeedbackDetailType">

		<xs:annotation>

			<xs:documentation> 

	       		Detailed feedback information for a user.

     			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="CommentingUser" type="ns:UserIDType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      eBay user ID for the user who left the feedback. 

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CommentingUserScore" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Feedback score of the user indicated in CommentingUser. 

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CommentText" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Text message left by user specified in CommentingUser. Used to 

			                      provide a more in-depth description of the user's opinion of their 

			                      transaction with the user about whom they left feedback. Returned 

			                      as text in the language that the comment was originally left in. 

			                      Note: Max length 80 (125 for Taiwan).

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CommentTime" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Date and time (in GMT) that the feedback was submitted to eBay. 

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CommentType" type="ns:CommentTypeCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Type of feedback. Can be Praise, Complaint, or Neutral. 

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="FeedbackResponse" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Textual comment that the user targeted by feedback may leave 

			                      in response or rebuttal to the feedback. Max length 80 (125 for 

			                      Taiwan).

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Followup" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Explanation a user can give to a response. Max length 80 (125 

			                      for Taiwan). 

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ItemID" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

			                	The ID that uniquely identifies the item listing.

                                 </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Role" type="ns:TradingRoleCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Indicates whether the user who the feedback is being 

			                      retrieved for was a Buyer or a Seller for that transaction.

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="FeedbackID" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

			              	Unique identifier for the feedback entry.

                              	</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="FeedbackPeriodArrayType">

		<xs:annotation>

			<xs:documentation> 

        Container for a set of feedback statistics.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:FeedbackPeriod" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

                   Contains one feedback statistic giving length of the period being reported

			(e.g. last 7 days), and total number of feedback entries (of the type given by the

			container, e.g. positive feedback), submitted during this period.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="FeedbackPeriodType">

		<xs:annotation>

			<xs:documentation> 

	       		Specifies the period of the feedback.

     			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="PeriodInDays" type="xs:int" minOccurs="0"/>

			<xs:element name="Count" type="xs:int" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="FeedbackSummaryType">

		<xs:annotation>

			<xs:documentation>

			         Specifies all feedback summary information (except Score). 

			         Contains the leaf nodes BidRetractionCountINT1 through 

			         UniqueNegativeFeedbackCount, listed below.  

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:BidRetractionFeedbackPeriodArray" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Bid retractions count. 

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:NegativeFeedbackPeriodArray" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Negative feedback entries count.

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:NeutralFeedbackPeriodArray" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Neutral feedback enties count. 

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:PositiveFeedbackPeriodArray" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Positive feedback entries count.

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:TotalFeedbackPeriodArray" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Total feedback score. 

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="NeutralCommentCountFromSuspendedUsers" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Number of neutral comments received from suspended users.

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="UniqueNegativeFeedbackCount" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Number of unique negative comments.

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="UniquePositiveFeedbackCount" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

			                      Number of unique positive comments.

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="NameValueListType">

		<xs:sequence>

			<xs:element name="Name" type="xs:string">

				<xs:annotation>

					<xs:documentation>

            (Not used.)

				       </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Value" type="xs:string" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            (Not used.)

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="NameValueListArrayType">

		<xs:annotation>

			<xs:documentation>

			(Not used.)

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="NameValueList" type="ns:NameValueListType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            (Not used.)

          		</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ItemType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data defining one item. A seller populates an object of this type

        at listing time with the definition of a new item. A seller also uses an object

        of this type to re-list or revise an item. Calls that retrieve item data (such

        as the GetItem call) return an object of this type, filled with the item's data.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="ApplicationData" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Returns custom, application-specific data associated with the item. The data in this

            field is stored with the item in the items table at eBay, but is not used in any way

            by eBay. Use ApplicationData to store such special information as a part or SKU number.

            Maximum 32 characters in length.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="AttributeSetArray" type="ns:AttributeSetArrayType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Carries one or more instances of AttributeSet in a list.

            An item will be associated with no more than two full

            attribute sets (one for the primary category and one for the secondary

            category).

            For some international sites, an item can specify additional

            site-wide attribute sets.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="LookupAttributeArray" type="ns:LookupAttributeArrayType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            A list of optional attributes that the seller wants to include in the listing. 

            Enables you to specify attributes by name rather than by ID.

            Only valid in Media categories (Books, DVD and Movies, Music, and Video Game categories).

            Currently, only the Condition attribute is supported.

	         Input only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ApplyShippingDiscount" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

						Multiple Item Shipping Discount.

	                   		</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="AutoPay" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                    If true, the seller requests immediate payment for the item.

                    If false, immediate payment is not requested. 

                    (In responses, does not indicate whether the item is 

                    actually still a candidate for puchase via immediate payment.) 

                    Only applicable for items listed on PayPal-enabled sites in 

                    categories that support immediate payment, when seller 

                    has a Premier or Business PayPal account.

                          		</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BuyerProtection" type="ns:BuyerProtectionCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                    Indicates the status of the item's eligibility for the   

                    Buyer Protection Program. Applicable for items listed to the 

                    main US site and to the Parts and Accessories category or Everything Else 

                    category (or their subcategories) on the US eBay Motors site.

               </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BuyItNowPrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Amount a Buyer would need to bid to take advantage of the Buy It Now feature

            (if the seller lists the item with this option). Not applicable to fixed-price 

            items (ListingTypeCodeType type StoresFixedPrice or FixedPriceItem) or AdFormat-type

            listings. For fixed-price items, see StartPrice instead. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CategoryMappingAllowed" type="xs:boolean" default="false" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Controls how eBay handles cases in which an ID specified in PrimaryCategory and/or SecondaryCategory no longer exists in the current category

            structure: If you pass a value of "true" in CategoryMappingAllowed, eBay will look up the current ID that is mapped to the same (or equivalent) 

            category and use the new ID for the listing. If CategoryMappingAllowed is not set or contains a value of "false" (the default), an error will be returned 

            if a selected category ID no longer exists. Not applicable for US eBay Motors (SiteId 100) listings.

               </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Charity" type="ns:CharityType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                    Identifies a Giving Works listing and the benefiting nonprofit 

                    organization the seller selected. 

                </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:Country" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Two-letter ISO 3166 country code. Along with Location, indicates the city and country

            where the item is located.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CrossPromotion" type="ns:CrossPromotionsType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            CrossPromotions container. If applicable, shows cross-promoted items referred to when

            the item indicated in ItemID is viewed or purchased.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:Currency" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                  Currency associated with the item's price information. 

                  3-letter ISO 4217 currency code that corresponds to 

                  the site specified in the item-listing request.

               </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Description" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Brief description of the item. Max 500,000 characters. An item's description may

            contain embedded HTML. A description may not include embedded JavaScript.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Escrow" type="ns:EscrowCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether escrow is used for a liting and, if so, who pays for it: the

            buyer or the seller. See EscrowCodeType for specific values. Cannot use with real

            estate auctions. Escrow is recommended for  for transactions over $500. Escrow

            service, available via Escrow.com, protects both buyer and seller by acting as a

            trusted third-party during the transaction and managing the payment process from

            start to finish. Also, if escrow by seller option used, then for Motors, this means

            that Escrow will be negotiated at the end of the auction.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="GiftIcon" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                    If set, a generic gift icon displays next the listing's 

                    title in search and browse pages. GiftIcon must be set to 

                    be able to use GiftServices options.

               </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="GiftServices" type="ns:GiftServicesCodeType" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

                    Optional gift services that the seller is offering if the buyer

                    chooses to purchase the item as a gift.

               </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="HitCounter" type="ns:HitCounterCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether an optional hit counter is displayed on the item's listing page

            and, if so, what type. See HitCounterCodeType for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ItemID" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            The ID that uniquely identifies the item listing.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ListingDetails" type="ns:ListingDetailsType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   Various details about the listing that are calculated or derived after

                   the item is listed. These include the start and end time,

                   converted (localized) prices, and certain flags that indicate whether

                   the seller specified fields (e.g., a reserve price) whose values aren't 

                   visible to the requesting user.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ListingDesigner" type="ns:ListingDesignerType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Contains the detail data for the Listing Designer theme and template

            (if either are used), which can optionally be used to enhance the

            appearance of the description area of an item's description. See

            ListingDesignerType for its child elements.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ListingDuration" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                    Describes the number of days the seller wants the listing to be

                    active (available for bidding/buying).

                    The valid choice of values depends on the listing type.

                    The duration specifies the seller's initial intent at listing time.

                    If the listing ends early, the value of the listing duration does not change.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ListingEnhancement" type="ns:ListingEnhancementsCodeType" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            Describes the types of for-fee enhancments the seller selects for the

            item's listing, such as title bolding and featuring the listing on the

            eBay home page. See ListingEnhancementsCodeType for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ListingType" type="ns:ListingTypeCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates the type of listing the seller choses for an item or items.

            (such as Chinese, Dutch, FixedPrice, etc.). See ListingTypeCodeType

            for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Location" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates the geographical location of the item (along with Country). Maximum

            length 45.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PartnerCode" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            eBay Partner ID specified when a partner lists an item.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PartnerName" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Textual name of the eBay Partner that corresponds to the ID specified in

            PartnerCode.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:PaymentMethods" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            Identifies the payment method or methods (such as credit card or money order)

            the seller will accept for the buyer to pay for the purchase of the item. See

            BuyerPaymentMethodCodeType for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PayPalEmailAddress" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Valid PayPal email address which is used as the seller's PayPal member ID

            Automatically used by eBay to identify the seller the buyer needs to pay

            during the checkout process. Applicable if seller has chosen PayPal as a

            payment method (PaymentMethods) for the item.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PrimaryCategory" type="ns:CategoryType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Category ID for the first (or only) category in which the item is listed (or

            is to be listed in the case of new, as-yet unlisted items).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PrivateListing" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, designates the listing as a private auction. The list of bidders on

            private auctions is hidden when the active listing is viewed. Not applicable

            to fixed-price items (type StoresFixedPrice and FixedPriceItem listings). 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ProductListingDetails" type="ns:ProductListingDetailsType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

	     Container node for product information that can be included in a listing.

	     Only required when listing items with Pre-filled Item Information.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Quantity" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Number of items in the listing. For new listings being defined, this is

            the initial number of items the seller offers for sale. For in-progress

            multi-item fixed-price listings, this is the number of items still

            available for purchase (such listings end when Quantity is reduced to zero).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:RegionID" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   Region where the item is located. Causes the listing to be returned 

                   in local (regional) search results and regional listings 

                   (in addition to normal (all-eBay) search results and listings).

                   See the documentation for valid values. 

                   If the item is listed with a RegionId of 0, then no region is association 

                   with the listing, and it will only be returned in normal (all-eBay) 

                   search results and listings.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="RelistLink" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Applicable only to re-listing an item. If true, creates a link in the

            item's old listing for the item that points to the new relist page,

            which accommodates users who might still look for the item under its old

            item ID.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ReservePrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates the reserve price for a reserve auction. Returned only with

            a detail level of 4. ReservePrice only has a non-zero value for listings

            with a reserve price and where the user requesting the item data is also

            the item's seller. Returned as null for fixed-price items. For more

            information on reserve price auctions, see

            http://pages.ebay.com/help/sell/reserve.html

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ReviseStatus" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether an item has been revised since the listing became

            active and, if so, which among a subset of properties have been changed

            by the revision.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ScheduleTime" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Allows a user to schedule a listing to start at the specified time in the future.

            Specify the time (in GMT) that the item's listing is scheduled to be actived on eBay.

            Input only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SecondaryCategory" type="ns:CategoryType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            ID for second category in which the item is listed (also see PrimaryCategory).

            Listing an item in a second category is optional.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SiteHostedPicture" type="ns:SiteHostedPictureType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Contains the data for pictures associated with an item, when those pictures are

            hosted on the eBay site (eBay Picture Services). See SiteHostedPictureType for

            its child elements. For pictures hosted other than on the eBay site, use

            VendorHostedPicture instead.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:Seller" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   Container for information about this listing's seller. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:SellingStatus" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                   Various details about the current status of the listing, 

                   such as the current number of bids and the current high bidder. 

               </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingOption" type="ns:ShippingOptionCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates where the seller is willing to ship the item. Default is SiteOnly.

            See ShippingOptionCodeType for specific values. If SitePlusRegions is selected,

            when the item is listed, then at least one region must also be specified (in

            ShippingRegions).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ShippingDetails" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Contains the shipping details for an item or transaction, including calculated

            shipping specifications and--if the item has been sold--the calculated shipping

            costs. See ShippingDetailsType for its child elements.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ShippingRegions" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            Indicates the global regions to which the seller is willing to ship the item(s).

            Only applicable if the seller specifies SitePlusRegions for the shipping option

            (ShippingOptionCodeType). See ShippingRegionCodeType for specific shipping regions

            values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingTerms" type="ns:ShippingTermsCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates who pays the shipping costs for the item(s), the buyer or the seller.

            See ShippingTermsCodeType for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:Site" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   The site associated with the item affects the business logic 

                   and validation rules that are applied to the request, which in 

                   turn affect the values that are returned in the response, as 

                   well as values that appear on the eBay Web site. 

                   For example, the value specified for Site can affect the validation 

                   of Category in listing requests, international business seller requirements, 

                   the values of converted (localized) prices in responses, the item-related time stamps 

                   that are displayed on the eBay Web site, the visibility of the item 

                   in some types of searches (e.g., GetCategoryListings), and other information. 

                   In some cases, the rules are determined by a combination of Site, the user's 

                   registration address, and other information.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="StartPrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Returns the price the seller specified when originally listing or re-listing the

            item. Returns the new start price if the item is revised and the starting price

            is changed. For auction-type listings, competitive bidding starts at this value.

            Once at least one bid has been placed, StartPrice remains the same but CurrentPrice

            is incremented to the amount of each succeeding bid. For fixed-price listings

            (type StoresFixedPrice or FixedPriceItem), returns the unchanging price at which a

            buyer may purchase the item.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Storefront" type="ns:StorefrontType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                  Contains information related to the item in the context of 

                  a seller's eBay Store. Applicable for auction format, basic Fixed Price, 

                  and Store Inventory format items listed by eBay Stores sellers.    

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SubTitle" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                  Subtitle to use in addition to the title. Provides more keywords 

                  when buyers search in titles and descriptions. You cannot use HTML in the Subtitle. 

                  Not applicable for US eBay Motors listings. If you pass any value, this feature is 

                  applied (with applicable fees). Max length 55.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="TimeLeft" type="xs:duration" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Time left before the listing ends.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Title" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

             Name of the item as it appears in the listing or the Gallery. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:UUID" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Universally unique constraint tag. The UUID is unique to a category. The UUID

            can only contain digits from 0-9 and letters from A-F. The UUID must be 32

            characters long.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="VATDetails" type="ns:VATDetailsType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                    Container for eBay's Business User features. A business seller can choose 

                    to offer an item exclusively to bidders and buyers that also represent businesses.

                    Only applicable when the item is listed in a B2B-enabled category 

                    (on a site that supports B2B business features).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="VendorHostedPicture" type="ns:VendorHostedPictureType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Contains the data for a picture associated with an item, when that picture is

            hosted on a site of the seller's choice (other than on the eBay site with eBay

            Picture Services). See VendorHostedPictureType for its child elements. For

            pictures on EPS, use SiteHostedPicture instead.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ItemArrayType">

		<xs:annotation>

			<xs:documentation> 

              Container for a list of items.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:Item" minOccurs="0" maxOccurs="unbounded"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ItemListType">

		<xs:annotation>

			<xs:documentation>

			        Specifies a list of items, for example, a user is bidding on.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:Item" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            Array of items.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="TotalAvailable" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates the total number of items that may be returned 

            in the active items list.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="LabelType">

		<xs:sequence>

			<xs:element name="Name" type="xs:string">

				<xs:annotation>

					<xs:documentation>

            The label to display when presenting the attribute to a user (e.g., "Title" or "Manufacturer"). 

            The label is defined for the product, and is therefore not necessarily the same as the label 

            that is defined in the characteristics set. 

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

		<xs:attribute name="visible" type="xs:boolean">

			<xs:annotation>

				<xs:documentation>

         If true, the label name is visible on the eBay site. If false, the label is not visible. 

         Usage of this information is optional. You are not required to display labels in 

         the same manner as eBay. 

         Output only.

				</xs:documentation>

			</xs:annotation>

		</xs:attribute>

	</xs:complexType>
<xs:complexType name="ListingDesignerType">

		<xs:annotation>

			<xs:documentation> 

        Contains the IDs for the Listing Designer theme and template (if either are

        used) associated with an item, which can optionally be used to enhance the

        appearance of the item's description.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="LayoutID" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Identifies the Layout template associated with the item.

			  		</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="OptimalPictureSize" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            If true, indicates that the item's picture will be enlarged to fit description

            of the item.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ThemeID" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Identifies the Theme template associated with the item.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ListingDetailsType">

		<xs:annotation>

			<xs:documentation> 

			    Various details about the listing that are calculated or derived after

             the item is listed. These include the start and end time,

             converted (localized) prices, and certain flags that indicate whether

             the seller specified fields (e.g., a reserve price) whose values aren't 

             visible to the requesting user. The ListingDetails type cannot be specified at 

             listing time. It is only returned in responses.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Adult" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                   If true, the item is listed in a Mature category. Users must accept

                   the Mature Category agreement on the eBay site to retrieve 

                   items listed in Mature categories. (Users do not need to sign 

                   this agreement to be able to list items in Mature Categories.)

                </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BindingAuction" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                   Applicable for Real Estate auctions only. If true, buyers and sellers  

                   are expected to follow through on the sale. If false, bids for the 

                   Real Estate auction are only expressions of interest.

                </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CheckoutEnabled" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                   Indicates whether checkout is enabled for this item. If true, indicates

                   that the seller elects to allow the item purchase to go through the

                   checkout process, if the buyer chooses to do so.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ConvertedBuyItNowPrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   Converted value of the BuyItNowPrice in the currency of 

                   the site that returned this response. 

                   For active items, refresh this value every 24 hours to 

                   pick up the current conversion rates.

               </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ConvertedStartPrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   Converted value of the StartPrice in the currency of

                   the site that returned this response.

                   For active items, refresh this value every 24 hours to 

                   pick up the current conversion rates.

                </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ConvertedReservePrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                   Converted value of the ReservePrice in the currency of the

                   site that returned this response. Only returned for listings with 

                   a reserve price when the requesting user is the listing's seller.

                   For active items, refresh this value every 24 hours to 

                   pick up the current conversion rates.

                   Not applicable to Fixed Price and Store Inventory listings.

             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="HasReservePrice" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                   If true, the seller specified a value in ReservePrice.

               </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="RegionName" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                   The human-readable name that corresponds to the RegionId that the 

                   seller specified for the listing, if any.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="RelistedItemID" type="ns:ItemIDType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   Indicates the new item ID for a re-listed item. When an item is 

                   re-listed, the item ID for the new (re-list) item is added to the

                   the old (expired) listing to provide buyers a means to navigate to

                   the new listing. This value only appears when the old listing is 

                   retrieved.

                   Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SecondChanceOriginalItemID" type="ns:ItemIDType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   The item ID for the original listing from which a second chance offer

                   is made. This value is only returned when the data for the second chance

                   offer listing is retrieved.

                   Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   Time stamp (in GMT) that eBay recorded as the moment that

                   the listing became available for bidding or buying.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   Time stamp (in GMT) when the listing is scheduled to end

                   (calculated based on the values of StartTime and ListingDuration)

                   or the actual end time if the item has ended.

				</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ViewItemURL" type="xs:anyURI" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                   The URL of the Web page where a user can view the listing. 

                   On the US site, this is called the "View Item" page.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ModifiedFieldType">

		<xs:annotation>

			<xs:documentation> 

		        Identifies the fields that are being modified. Only applicable when 

		        revising and relisting items. See the documentation for details

		        about how to specify this information.

				</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Field" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

	            The name of the field that is being modified.

						</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ModifyType" type="ns:ModifyCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

	            Instruction describing the nature of the modification. 

	            See the ModifyCodeList for valid values.

						</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="OfferType">

		<xs:annotation>

			<xs:documentation>

        Contains information pertaining to an offer made on an item listing and

        the current bidding or purchase state of the listing.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="Action" type="ns:BidActionCodeType">

				<xs:annotation>

					<xs:documentation>

                Indicates the type of offer being made on the specified listing. Valid

                values are enumerated in the BidActionCodeType code list.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Currency" type="ns:CurrencyCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Numeric ID for the currency for the auction. Valid values are

                enumerated in the CurrencyCodeType code list.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="MaxBid" type="cc:AmountType">

				<xs:annotation>

					<xs:documentation>

                Amount of the offer placed. For competitive-bidding listings, the amount

                bid on the item (subject to outbid by other buyers). For fixed-price

                listings, the fixed sale price at which the item is purchased. For

                competitive-bidding listings with an active Buy It Now option, this amount

                will be either the Buy It Now price for purchase or the amount of a bid,

                depending on the offer type (as specified in Action).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Quantity" type="xs:int">

				<xs:annotation>

					<xs:documentation>

                Specifies the number of items from the specified listing the user

                tendering the offer intends to purchase or bid on. For Chinese auctions and

                other listing formats that only allow one item per listing, value may not

                exceed one. For multi-item listings, must be greater than zero and now

                exceeding the number of items offered for sale in the listing.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SecondChanceEnabled" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Indicates the user's preference to accept second chance offers. If true,

                the user is willing to be the receipient of second chance offers.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SiteCurrency" type="ns:CurrencyCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Unique ID identifying the currency in which the localized offer amounts are

                expressed.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="TimeBid" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Date and time the offer or bid was placed.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="HighestBid" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Amount the highest bidder had bid on the item. Applicable only to

                competitive-bidding listings (Chinese and Dutch auctions) where there is

                progressive bidding and winning bidders are determined based on the highest

                bid.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ConvertedPrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Localized amount for the item's current price.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="User" type="ns:UserType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                Bidder information. See the schema documentation for UserType for details

                on its properties and their meanings.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="OfferArrayType">

		<xs:annotation>

			<xs:documentation> 

        Container for a list of offers. May contain zero, one, or multiple

        OfferType objects, each of which represents one offer extended by

        a user on a listing.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:Offer" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

                   Contains the data for one offer. This includes: data for the user making

                   the offer, the amount of the offer, the quantity of items being bought

                   from the listing, the type of offer being made, and more.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="PaginationType">

		<xs:annotation>

			<xs:documentation> 

        Contains data for controlling pagination in function requests. Pagination

        of returned data is not needed in and not supported for all calls.

        See the documentation for individual calls to determine whether

        pagination is supported, required, or desirable.

        Input only.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="EntriesPerPage" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Specifies the maximum number of entries to return in a single call. 

            If the number of entries that can be returned is less

            than the value specified in EntriesPerPage, then that number of entries

            is returned instead. Default is 25.

            Input only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PageNumber" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Specifies the number of the page of data to return in the current call. 

            Default is one.

            Input only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="PaginationResultType">

		<xs:annotation>

			<xs:documentation> 

        Shows the pagination of data returned by requests. Pagination

        of returned data is not needed in and not supported for every call.

        See the documentation for individual calls to determine whether

        pagination is supported, required, or desirable.

        Output only.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="TotalNumberOfPages" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates the total number of pages of data that could be returned by

            repeated requests.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="TotalNumberOfEntries" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates the total number of entries that could be returned by repeated

            requests.

            Input only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="PaymentMeansType">

		<xs:annotation>

			<xs:documentation> 

            Payment method the seller uses to pay eBay.

		   </xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="TypeCodeID" type="ns:SellerPaymentMethodCodeType"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="PaymentType">

		<xs:annotation>

			<xs:documentation> 

	         Payment method the seller uses to pay eBay.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="PaymentMeans" type="ns:PaymentMeansType"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ProductListingDetailsType">

		<xs:annotation>

			<xs:documentation>

      Contains product information that can be included in a listing.

      Applicable for items listed with Pre-filled Item Information.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="ProductID" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Required when ProductListingDetailsType is used. Unique identifier for

            the product. See the Developer's Guide for information about determining product IDs.

            If the primary and secondary categories are both catalog-enabled, this ID should correspond to the primary

            category (not the secondary category). Max length 4000.

            In item-listing requests, if you pass in an old product ID, eBay will

            list the item with the latest version of the product and the latest product ID, and the call

            will return a warning indicating that the data has changed.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="IncludeStockPhotoURL" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            If true, specifies that the listing should include the stock photo (if any). 

            In item-listing requests, if you do not pass PictureURL and you set IncludeStockPhotoURL to true, 

            the stock photo is used at the top of the View Item page and in the Item Specifics section of the listing. 

            If you also pass PictureURL, the stock photo only appears in the Item Specifics section of the listing. 

            Other pictures you specify appear in a separate section of the listing. If you set IncludeStockPhotoURL 

            to false, the stock photo does not appear in the listing at all. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="IncludePrefilledItemInformation" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            If true, specifies that the listing should include additional information about the product, 

            such as a publisher's description or film credits. Such information is hosted through the eBay site 

            and cannot be edited. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="UseStockPhotoURLAsGallery" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            If true, IncludeStockPhotoURL must also be true, and the listing uses the stock photo 

            as the Gallery image. 

            If true in item-listing requests, pass GalleryType with the code for Gallery or Gallery Featured, 

            and do not pass GalleryURL.

            If UseStockPhotoURLAsGallery is false or not specified, this logic is used: 

               - If IncludeStockPhotoURL is true, the system looks for the first URL in PictureURL to use 

                  as the Gallery image. If PictureURL is not specified, no image appears in the Gallery. 

               - If IncludeStockPhotoURL is false, GalleryURL is used instead. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="StockPhotoURL" type="xs:anyURI" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Fully qualified URL for a standard image (if any) that is associated with the product. 

            A user can choose to include the stock photo in the listing.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Copyright" type="xs:string" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            Copyright statement indicating the source of the product information. This information will be 

            included in the listing with Pre-filled Item Information. Your application should also display 

            the copyright statement when rendering the Pre-filled Item Information. 

            If more than one copyright statement is applicable, they can be presented to the 

            user in alphabetical order. Returned as HTML.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ProductType">

		<xs:annotation>

			<xs:documentation>

      A prototype description of a well-known type of item, such as a popular book.

      Applicable when working with Pre-filled Item Information.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="CharacteristicsSet" type="ns:CharacteristicsSetType">

				<xs:annotation>

					<xs:documentation>

            A set of characteristics that describe the product in a standardized way.

            In responses, only the attributes and values that applicable for the 

            specified product are returned.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="DetailsURL" type="xs:anyURI">

				<xs:annotation>

					<xs:documentation>



					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

		<xs:attribute name="productID" type="xs:string">

			<xs:annotation>

				<xs:documentation>

         Unique identifier for the product. The ID is defined in an eBay catalog.

         Product IDs may change over time. Therefore, use the catalog search calls

         to update any product IDs that you store locally.

				</xs:documentation>

			</xs:annotation>

		</xs:attribute>

		<xs:attribute name="stockPhotoURL" type="xs:anyURI">

			<xs:annotation>

				<xs:documentation>

         Fully qualified URL for a standard image that is associated with the product. 

         Allows the user to preview the image from your application.

         A user can choose to include the stock photo in a listing.

         Output only.

				</xs:documentation>

			</xs:annotation>

		</xs:attribute>

		<xs:attribute name="title" type="xs:string">

			<xs:annotation>

				<xs:documentation>

         The name of the product, as defined within the catalog. Not necessarily the 

         same as the "Title" attribute in the characteristics set meta-data, if any. 

         On the eBay site, this title serves as the basis for the suggested item title 

         (truncated to the max length permitted for Title in item-listing calls). 

         Applications can use this value to supply a suggested listing title to users.

         Output only.

				</xs:documentation>

			</xs:annotation>

		</xs:attribute>

	</xs:complexType>
<xs:complexType name="ProductFamilyType">

		<xs:annotation>

			<xs:documentation>

      A set of results returned from a catalog product search. 

      See the guide for information about Pre-filled Item Information (Catalogs) functionality.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="ParentProduct" type="ns:ProductType">

				<xs:annotation>

					<xs:documentation>

            A transient header that describes the current search results. Contains a 

            an ID, a subset of attributes, and a typical stock photo 

            to help a user easily distinguish the products in the current result set

            from products in other result sets returned in the same response. 

            One ParentProduct is returned per ProductFamily.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="FamilyMembers" type="ns:ProductType" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            A set of products (within the same product family) that match the search query. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

		<xs:attribute name="hasMoreChildren" type="xs:boolean">

			<xs:annotation>

				<xs:documentation>

         If true, the product family has more products than you requested in

         MaxChildrenPerFamily in the query. In this case, no products are returned

         (ChidrenProducts is empty).

         Call GetProductFamilyMembers to retrieve all products in the family.

         If 0 (false), the product family has MaxChildrenPerFamily or fewer product

         children, and the ProductChildren container returns all products in the family.

         Output only.

         	</xs:documentation>

			</xs:annotation>

		</xs:attribute>

	</xs:complexType>
<xs:complexType name="ProductFinderConstraintType">

		<xs:annotation>

			<xs:documentation>

      An attribute (constraint) that was specified in a search request that was 

      based on a Product Finder.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="DisplayName" type="xs:string">

				<xs:annotation>

					<xs:documentation>

            The search attribute name (e.g., Manufacturer). 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="DisplayValue" type="xs:string">

				<xs:annotation>

					<xs:documentation>

            The search attribute value (e.g., the actual name the user chose for the manufacturer).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ProductSearchPageType">

		<xs:annotation>

			<xs:documentation>

     

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="DataElements" type="xs:string" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

          An HTML snippet that specifies hints for the user, help links, help graphics, 

          and other supplemental information that varies per characteristics set. 

          Usage of this information is optional and may require developers to inspect 

          the information to determine how it can be applied in an application. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SearchCharacteristicsSet" type="ns:CharacteristicsSetType">

				<xs:annotation>

					<xs:documentation>

          A list of attributes that describe valid "single-attribute" search criteria 

          for a catalog-enabled category. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SearchType" type="ns:CharacteristicsSearchCodeType">

				<xs:annotation>

					<xs:documentation>

          Indicates whether one attribute or multiple attributes can be used as the search keyword 

          when calling GetProductSearchResults. See CharacteristicsSearchCodeType for a list 

          of valid codes.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SortCharacteristics" type="ns:CharacteristicType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

          A list of attributes that define the choice of criteria by which catalog search results 

          can be sorted. At least one attribute is always returned in the list. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ProductSearchType">

		<xs:annotation>

			<xs:documentation>

      Container for a product query and pagination instructions.

      This data is applicable when searching eBay catalogs for stock product

      information (to use in listings with Pre-filled Item Information.)

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AttributeSetID" type="xs:int">

				<xs:annotation>

					<xs:documentation>

            Identifier for a characteristics set that is mapped to a catalog-enabled category 

            (unique across all eBay sites). 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ProductFinderID" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Identifier for a Product Finder associated with the characteristics set, if any.

            Use a Product Finder when you want to specify multiple attributes in a

            product search query. Call GetCategory2CS to determine which categories

            support Product Finder searches.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ProductID" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Identifier for a characteristics set that is mapped to a catalog-enabled category 

            (unique across all eBay sites). 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SortAttributeID" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Unique identifier for a sortable attribute. Call GetProductSearchPage to determine 

            the valid sort attribute IDs for the specified characteristics set. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="MaxChildrenPerFamily" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Pagination instruction that specifies the maximum quantity of products to return for each 

            product family within the search response whose ID matches the current request's ID. 

            In the response, if the last family returned contains MaxChildrenPerFamily or fewer 

            additional products, those additional products are also returned (i.e., the actual quantity 

            returned for the last family can exceed the specified maximum value). Max valid value is 20000. 

            Default is 5 if this field is zero (0), empty, or not specified. The value should not 

            include punctuation (i.e., a thousands separator is not valid). 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SearchAttributes" type="ns:SearchAttributesType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            Container for a query consisting of a set of attributes (search criteria). 

            If the query includes multiple attributes, the search engine will apply "AND" logic to the query. 

            Call GetProductSearchPage to determine the list of valid attributes and how many are 

            permitted for the specified characteristics set.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Pagination" type="ns:PaginationType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Pagination instruction that specifies the virtual page of data to return per search request. 

            Default page number is 0 (the first page). Specify a page number of 0 or a positive value lower 

            than the approximate number of pages available.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="DataElementSetType">

		<xs:annotation>

			<xs:documentation>

      Container for a set of data elements (see below) that are applicable for a set

      of products (returned within the same call results). The data elements contain

      supplemental information helps end users understand product search results.

      Usage of this information is optional and may require developers to inspect

      the information to determine how it can be applied in an application.



			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="DataElement" type="xs:string">

				<xs:annotation>

					<xs:documentation>

          A DataElement field is an HTML snippet that specifies hints for the user,

          help links, help graphics, and other supplemental information that varies per

          characteristics set.

          Usage of this information is optional and may require developers to inspect

          the information to determine how it can be applied in an application.

          Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

		<xs:attribute name="attributeSetID" type="xs:int">

			<xs:annotation>

				<xs:documentation>

             Matches the AttributeSetID associated with a ProductSearchResult

             returned from the same call that returned the data element set.

             As product search calls can perform batch searches, this ID helps

             you determine which attribute set the data element set is associated with.

             Output only.

				</xs:documentation>

			</xs:annotation>

		</xs:attribute>

	</xs:complexType>
<xs:complexType name="ProductSearchResultType">

		<xs:annotation>

			<xs:documentation>

      Container for the results of a product query. Supports Pre-filled Product Information

      functionality.

      Output only.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="ApproximatePages" type="xs:int">

				<xs:annotation>

					<xs:documentation>

            The approximate quantity of pages of results that match the product search query 

            (TotalProducts divided by the median number of products per page examined so far). 

            Lowest value is 1. See the guide for more information.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="AttributeSetID" type="xs:int">

				<xs:annotation>

					<xs:documentation>

            Constant value that identifies the attribute set in a language-independent way.

            Unique across all eBay sites. Corresponds to a characteristics set ID.

            Identifies the characteristics set associated with the current set of

            search results.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="HasMore" type="xs:boolean">

				<xs:annotation>

					<xs:documentation>

            If true, the query results contain additional pages (higher than the current page number). 

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ProductFamilies" type="ns:ProductFamilyType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            A list of product families. A product family identifies a group of related products. 

            For example, the movie "My Favorite Movie: The Sequel" might be released on DVD, but there 

            might be several editions of the DVD (e.g., in different languages) with different ISBN numbers. 

            All variations are part of the same product family ("My Favorite Movie: The Sequel" in the DVD format). 

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ProductFinderConstraints" type="ns:ProductFinderConstraintType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            A list of attributes (constraints) that were specified in the search request.

            Applicable when the search request was constructed based on a Product Finder.

               </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="TooManyMatchesFound" type="xs:boolean">

				<xs:annotation>

					<xs:documentation>

            If too many search results match the query, the TooManyMatchesFound tag is returned with a warning. 

            In this case, it may be a good idea to ask the user to specify more details to narrow the search 

            (e.g., specify "My Favorite Movie" instead of "My").

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="TotalProducts" type="xs:int">

				<xs:annotation>

					<xs:documentation>

            The total quantity of products that match the query. This can exceed the actual number 

            of products returned in the current virtual page.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="PromotedItemType">

		<xs:annotation>

			<xs:documentation>

        Type representing the data for one cross-promoted item.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="ItemID" type="ns:ItemIDType">

				<xs:annotation>

					<xs:documentation> 

            Item ID for the cross-promoted item.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PictureURL" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            URL for the picture of the cross-promoted item.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="position" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates the ordinal position of the cross-promoted item in the

            multi-item display of cross-promoted items.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PromotionPrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Price of the cross-promoted item at which a buyer can purchase the item now.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PromotionPriceType" type="ns:PromotionItemPriceTypeCodeType" minOccurs="0"/>

			<xs:element name="SelectionType" type="ns:PromotionItemSelectionCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates how the cross-promoted item was selected for association with the

            referring item. See PromotionItemSelectionCodeType for specific values.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Title" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Item Title for the promoted item.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ListingType" type="ns:ListingTypeCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates the listing type (Chinese, Dutch, etc.) under which the

            cross-promoted item is being offered. See ListingTypeCodeType for

            specific values.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CrossPromotionsType">

		<xs:annotation>

			<xs:documentation>

        Contains the cross-promotion data for one or multiple items

        cross-promoted with the display or purchase of the referring

        item.

        Output only.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="ItemID" type="ns:ItemIDType">

				<xs:annotation>

					<xs:documentation> 

            Item ID for the referring item. Other items are cross-promoted

            when this item is displayed or purchased.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PrimaryScheme" type="ns:PromotionSchemeCodeType">

				<xs:annotation>

					<xs:documentation> 

            Indicates the primary cross-promotion rule scheme (item-to-item,

            item-to-Store-category, or Store-category-to-Store-Category) that

            was applied to return the cross-promotion item. See

            PromotionSchemeCodeType for specific values.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PromotionMethod" type="ns:PromotionMethodCodeType">

				<xs:annotation>

					<xs:documentation> 

            Indicates the type of cross-promotion for the promoted item,

            cross-sell or up-sell. See PromotionMethodCodeType for specific

            values.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SellerID" type="xs:string">

				<xs:annotation>

					<xs:documentation>

            eBay user ID for the seller offering the cross-promoted item.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingDiscount" type="xs:boolean">

				<xs:annotation>

					<xs:documentation>

            If true, indicates whether a shipping discount is offered by the

            seller when the cross-promoted item is purchased.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SellerKey" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Key of the seller who is promoting item.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="StoreName" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Store name for the seller offering the cross-promoted item.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PromotedItem" type="ns:PromotedItemType" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            Item data for one cross-promoted item. See PromotedItemType

            for specific child elements.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ReviseStatusType">

		<xs:annotation>

			<xs:documentation> 

        Contains data indicating whether an item has been revised since the

        listing became active and, if so, which among a subset of properties

        have been changed by the revision.

        Output only.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="ItemRevised" type="xs:boolean">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates the item was revised since the listing became

            active.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BuyItNowAdded" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates that a Buy It Now Price was added for the item.

            Only applicable to US eBay Motors items.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BuyItNowLowered" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates that the item's Buy It Now price was lowered.

            Only applicable to US eBay Motors items.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ReserveLowered" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates that the peserve price was lowered for

            the item. Only applicable to US eBay Motors items.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ReserveRemoved" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates that the reserve price was removed

            from the item. Only applicable to US eBay Motors items.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SearchAttributesType">

		<xs:annotation>

			<xs:documentation>

      A product aspect or feature that can be used as a criterion in a search for catalog content. 

      For example, "Title" might be a criterion for searching the catalogs for 

      Pre-filled Item Information related to books. 

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:AttributeID">

				<xs:annotation>

					<xs:documentation>

            Unique identifier for the attribute within the characteristics set. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="DateSpecifier" type="ns:DateSpecifierCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Specifies the date subcomponent that the attribute represents.

            This only applies to date attributes.

            Allows for separate text fields or drop-down lists to be rendered for

            each subcomponent. For example, the day, month, and year can be rendered as

            separate drop-down lists. See DateSpecifierCodeType for possible values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="RangeSpecifier" type="ns:RangeCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates that the attribute represents the high or low end in a range,

            such as a date range or a price range. See RangeCodeType.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ValueList" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation>

            Container for the list of one or more valid values that the user has selected for 

            the searchable attribute. If multiple values are specified, the search engine 

            applies "OR" logic to the query (i.e., at least one of the specified values must match).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SearchLocationType">

		<xs:annotation>

			<xs:documentation>

            [TODO]

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="RegionID" type="xs:string">

				<xs:annotation>

					<xs:documentation>

            [TODO]

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SiteLocation" type="ns:SiteLocationType">

				<xs:annotation>

					<xs:documentation>

            [TODO]

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SiteLocationType">

		<xs:annotation>

			<xs:documentation>

            [TODO] Specifies a list of items, for example, a user is bidding on.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:Site" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Site ID, for example, used to specify the eBay site from 

            which to retrieve product information. You can only 

            retrieve product information for one eBay site at a time.

			             </xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SiteID" type="ns:SiteIDFilterCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Allows a user to filter the category listings by SiteID. Limits items 

            returned to those described below: 

            Items listed in the currency implied by SiteID. 

            Items located in the country implied by SiteID. 

            Items available to the country implied by SiteID. 

            (For the US site, this implies listings from ALL English-language countries 

            that are availabe to the US.) 

            Items listed on the site implied by SiteID, regardless of listing currency. 

            Items located in Belgium or listed on one of the two Belgian sites.  

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ShippingServiceOptionsType">

		<xs:sequence>

			<xs:element name="ShippingInsuranceCost" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Shipping insurance costs for the transaction's item(s).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ShippingService" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates the shipping service (and carrier) that would be used

            to ship the item (such as UPS Ground). See ShippingServiceCodeType

            for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingServiceCost" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Specifies the shipping cost for the first (or only) item sold to the buyer. Shipping 

	    costs for additional items are specified in the ShippingServiceAdditionalCost

	    element. Only relevant to flat shipping.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingServiceAdditionalCost" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Specifies the shipping cost for each item beyond the first sold to the same buyer. 

	    Should be zero for single-item listings. Default value is 0.00. Only relevant to flat shipping.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingServicePriority" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

		            For multiple shipping service options specified for the item listing,

		            specifies the relative priority of the options. The priorities reflect the sellers

		            relative preference for shipping. Affects the order in which the shipping

		            options are displayed to the buyer on the checkout page. The valid values

		            are:

		            1 (First Choice), 2 (Second Choice), and 3 (Third Choice).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CalculatedShippingRateType">

		<xs:annotation>

			<xs:documentation> 

         Contains the elements that define and convey the calculated

         shipping specifications for an item or items shipped together

         to the same buyer. Used by the seller when listing an item to

         define the item's shipping specifications for shipping cost

         calculation. These elements are also returned with the data for

         an item's transaction.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="OriginatingPostalCode" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Potal/zip code from which package will be shipped.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PackageDepth" type="cc:MeasureType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Depth dimension of the package needed to ship the item after it is sold.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PackageLength" type="cc:MeasureType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Length dimension of the package needed to ship the item after it is sold.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PackageWidth" type="cc:MeasureType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Width dimension of the package needed to ship the item after it is sold.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PackagingHandlingCosts" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Optional fees a seller might assess for the packaging and shipping of the item. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingIrregular" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            If true, indicates an item that cannot go through the

            stamping machine at the shipping service office and requires 

            special or fragile handling. Only applicable if calculated

            shipping is used.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingPackage" type="ns:ShippingPackageCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            The size of the package used to ship the item(s). See

            ShippingPackageCodeType for its possible values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="WeightMajor" type="cc:MeasureType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Number of whole units for shipping weight unit of measure. For example,

            If WeightUnit is Pounds, WeightMajor is the number of whole pounds.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="WeightMinor" type="cc:MeasureType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Fractional number of units for shipping weight unit of measure. If

            WeightUnit is Pounds, then WeightMinor is the number of ounces in

            addition to whole pounds in WeightMajor.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SalesTaxType">

		<xs:annotation>

			<xs:documentation> 

        Type for expressing sales tax data.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="SalesTaxPercent" type="xs:float" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Percent of an item's price to be charged as the sales tax for the transaction. 

            Sales tax is only for US.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SalesTaxState" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            State for which the sales tax is being collected.

            Sales tax is only for US.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingIncludedInTax" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether shipping is included in the amount charged as sales tax.

            Applicable if flat or calculated shipping rates are specified.

            Sales tax is only for US.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SellerType">

		<xs:annotation>

			<xs:documentation>

        Information about a user returned in the context of an item's seller.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AllowPaymentEdit" type="xs:boolean"/>

			<xs:element name="BillingCurrency" type="ns:CurrencyCodeType" minOccurs="0"/>

			<xs:element ref="ns:CheckoutEnabled"/>

			<xs:element name="CIPBankAccountStored" type="xs:boolean"/>

			<xs:element name="GoodStanding" type="xs:boolean"/>

			<xs:element name="LiveAuctionAuthorized" type="xs:boolean"/>

			<xs:element name="MerchandizingPref" type="ns:MerchandizingPrefCodeType">

				<xs:annotation>

					<xs:documentation>

					            		Indicates whether the user has elected to participate 

					            		as a seller in the Merchandising Manager feature. 

    					         	</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="QualifiesForB2BVAT" type="xs:boolean"/>

			<xs:element ref="ns:SellerLevel"/>

			<xs:element ref="ns:SellerPaymentAddress" minOccurs="0"/>

			<xs:element name="SchedulingInfo" type="ns:SchedulingInfoType" minOccurs="0"/>

			<xs:element ref="ns:StoreOwner"/>

			<xs:element name="StoreURL" type="xs:anyURI" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ShippingDetailsType">

		<xs:annotation>

			<xs:documentation> 

        Type for the shipping details for an item or transaction.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AllowPaymentEdit" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether the seller allows the buyer edit the payment amount

            for the transaction.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CalculatedShippingRate" type="ns:CalculatedShippingRateType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Calculated shipping rate details. If present, then the calculated shipping

            rate option was used. See CalculatedShippingRateType for its child elements.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CarrierShippingFee" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Calculated cost of shipping the item(s) in a transaction, based on

            shipping parameters and selected shipping service. Only returned if

            calculated shipping is used.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ChangePaymentInstructions" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether the payment instructions are included (e.g., for updating

            the details of a transaction).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="InsuranceFee" type="cc:AmountType" minOccurs="0"/>

			<xs:element ref="ns:InsuranceOption" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether the seller offers shipping insurance and, if so, whether

            the insurance is optional or required.  See InsuranceOptionCodeType for

            possible values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="InsuranceTotal" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Total cost of insurance for the transaction. If calculated shipping is selected,

            then this value is for output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="InsuranceWanted" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether buyer selected to have insurance.

            Ouput only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PaymentInstructions" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Payment instuctions from the seller to the buyer.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SalesTax" type="ns:SalesTaxType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Sales tax details. Sales tax applicable for only US sites. See SalesTaxType

            for its child elements.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SellerPostalCode" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Postal/Zip code from which the seller will ship the item. Used by eBay for

            calculating the shipping costs when calculated shipping is selected.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ShippingRateErrorMessage" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Describes any error message associated with the attempt to calculate shipping

            rates. If there was no error, returns "No Error" (without the quotation marks).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ShippingServiceOptions" minOccurs="0" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            Contains information about shipping fees per each shipping service chosen by the seller.

            See ShippingServiceOptionsType for its elements.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SiteHostedPictureType">

		<xs:annotation>

			<xs:documentation> 

        Data for images hosted on the eBay site (eBay Picture Services).

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="PictureURL" type="xs:anyURI" minOccurs="0" maxOccurs="6">

				<xs:annotation>

					<xs:documentation> 

            Semicolon-separated list of URLs for item pictures that are stored/hosted

            at eBay site.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PhotoDisplay" type="ns:PhotoDisplayCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Special picture effect seller selects for the display of the an item's

            picture(s). Default is None. See PhotoDisplayCodeType for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="GalleryType" type="ns:GalleryTypeCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            For purposes of displaying a picture of the image, indicates whether the

            item is featured or appears in the Gallery. See GalleryTypeCodeType for

            specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="StorefrontType">

		<xs:annotation>

			<xs:documentation> 

             Contains information related to the item in the context of 

             a seller's eBay Store. Applicable for auction format, basic Fixed Price, 

             and Store Inventory format items listed by eBay Stores sellers. 

     			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:StoreCategoryID">

				<xs:annotation>

					<xs:documentation> 

                   Numeric ID for a custom category that the seller 

                   created in their eBay Store, if any.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:StoreURL" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   URL pointing to the seller's eBay Store page. 

                   Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SellingStatusType">

		<xs:annotation>

			<xs:documentation>

        Contains various details about the current status of a listing. These

        values are computed by eBay and cannot be specified at listing time.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="BidCount" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Number of bids placed so far against the item. Only applicable to

            competitive-bidding listings (Chinese and Dutch auctions).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BidIncrement" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Smallest amount a bid must be above the current high bid. Only applicable

            to competitive-bidding listings (Chinese and Dutch auctions). Returns zero

            (0.00) for Ad type, eBay Stores Inventory (Stores Fixed-price), and Basic

            Fixed-Price (Fixed Price Item) listings.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ConvertedCurrentPrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Converted value of the CurrentPrice in the currency of the site that

            returned this response. For active items, refresh the listing's data every 24

            hours to pick up the current conversion rates.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CurrentPrice" type="cc:AmountType">

				<xs:annotation>

					<xs:documentation>

            For competitive-bidding listings (Chinese and Dutch auctions), current

            minimum asking price (start price) or the current highest bid for the item if

            bids have been placed. Shows minimum bid if no bids have been placed on the item.

            For

            Basic Fixed Price (Fixed Price Item), Store Inventory (Stores Fixed-

            price), or Ad type listings this returns the original price specified when the item

            was listed/re-listed or the revised price if the item was revised.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:HighBidder" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            For auctions that have ended and have a winning bidder, indicates the

            user who is the current high bidder. For Basic Fixed Price (Fixed Price Item) and

            Store Inventory (Stores Fixed-price) listings that have ended, indicates the

            user who purchased the item. Not returned for auctions that have received no bids

            or Fixed Price Item and Stores Fixed-price listings that are still active.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="LeadCount" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Applicable to Ad type listings only. Indicates how many leads to

            potential buyers are associated with this item. Returns 0 (zero) for listings in

            other formats.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="MinimumToBid" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Smallest amount the next bid on the item can be. Returns same value as

            Item.StartPrice (if no bids have yet been placed) or CurrentPrice plus

            BidIncrement (if at least one bid has been placed). Only applicable to Chinese and

            Dutch auction listings. Returns null for basic Fixed Price (Fixed Price Item),

            Store Inventory (Stores Fixed-price), and Ad type listings.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="QuantitySold" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Number of items purchased so far. (Subtract from the value returned in

            the Item.Quantity field to calculate the number of items remaining.)

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ReserveMet" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates whether the reserve price has been met for the listing. Returns

            true if the reserve price was met or no reserve price was specified.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SecondChanceEligible" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Part of the Second Chance Offer feature, indicates whether the seller can

            extend a second chance offer for the item.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SchedulingInfoType">

		<xs:annotation>

			<xs:documentation> 

        Contains information for scheduling limits for the user.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="MaxScheduledMinutes" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Maximum number of minutes that a listing may be scheduled in advance of its going live.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="MinScheduledMinutes" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Minimum number of minutes that a listing may be scheduled in advance of its going live.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="MaxScheduledItems" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Maximum number of Items that a user may schedule.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="TransactionArrayType">

		<xs:annotation>

			<xs:documentation> 

        Contains information about multiple individual transations. Contains one Transaction object

        for each transaction.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:Transaction" maxOccurs="unbounded">

				<xs:annotation>

					<xs:documentation> 

            Contains the data for one transaction.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="TransactionType">

		<xs:annotation>

			<xs:documentation> 

        Contains information about a single transaction. A transaction contains information 

        about the sale one or multiple items from a listing to a single buyer. The eBay

        system creates a transaction when a buyer has made a purchase (fixed-price listings)

        or is the winning bidder (BIN and competitive-bidding listings) A listing can be spawn

        one or more transactions in these cases: multi-item fixed-price listings and Dutch

        listings. A listing can spawn only a single transaction in these cases: single-item

        fixed-price listings and Chinese listings.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:AmountPaid" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            The amount the buyer paid for the item(s) in the transaction.

            If the seller allowed the buyer to change the item total, the buyer 

            is able to change the total until the time that the transaction's 

            status moves to Complete. Determine whether the buyer 

            changed the amount by retrieving the transaction data and comparing

            the AmountPaid value to what the seller expected. For Motors items,

            AmountPaid is the amount paid by the buyer for the deposit.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="AdjustmentAmount" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Adjustment amount entered by the buyer. A positive amount indicates 

            the amount is an extra charge being paid to the seller by the buyer. 

            A negative value indicates this amount is a credit given to the buyer by the seller.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ConvertedAdjustmentAmount" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Converted value of AdjustmentAmount in the currency of the site that returned the response.

            Refresh this value every 24 hours to pick up the current conversion rates.

            Output only.

			     		</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Buyer" type="ns:UserType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Contains the data for the transaction's buyer. See UserType for its

            child elements.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:ShippingDetails" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Contains the shipping details for the transaction. See ShippingDetailsType

            for its child elements.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ConvertedAmountPaid" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Converted value of AmountPaid in the currency of the site that returned the response.

            Refresh this value every 24 hours to pick up the current conversion rates.

            Output only.

			     		</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ConvertedTransactionPrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Converted value of TransactionPrice in the currency of the site that returned the

            response. Refresh this value every 24 hours to pick up the current conversion rates.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CreatedDate" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates when the transaction was created. For fixed-price, Stores, and BIN items

            this indicates when the purchase (or BIN) occurred. For competitive-bidding listing

            types this indicates when listing ended, the winning bidder(s) determined, and the

            transaction created.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="DepositType" type="ns:DepositTypeCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Deposit type for US eBay Motors items. If item is not a Motors item, then returns an

            empty value for DepositType. See DepositTypeCodeType for specific values.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Item" type="ns:ItemType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Information about the item that spawned the transaction. It

            is a purchase from this item's listing that the transaction represents.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="QuantityPurchased" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates the number of items the buyer purchased from the listing identified

            in ItemID.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Status" type="ns:TransactionStatusType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Contains the status of the transaction, such as the buyer's online payment and

            whether the checkout process for the transaction has been completed. See

            TransactionStatusType for its child elements.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:TransactionID" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Identifier for the transaction. Returns a value of zero for Chinese auction format

            listings (a valid transaction ID). A transaction ID is only unique to the listing

            that spawned it, so a transaction is only uniquely identified on a global basis by

            a combination of ItemID and TransactionID.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="TransactionPrice" type="cc:AmountType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Price of the transaction (before shipping and sales tax) that the buyer needs to pay

            to complete the purchase. For eBay Motors, TransactionPrice is the deposit amount.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="VATPercent" type="xs:decimal" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                  VAT rate for the item, if the item price includes VAT. 

                  The seller specifies the VATPercent if they want include the net price in 

                  addition to the gross price in the listing. VAT rates vary 

                  depending on the item and on the user's country of residence; 

                  therefore a business seller is responsible for entering the 

                  correct VAT rate (it will not be calculated by eBay).

                  On the eBay site, the max precision is 3 decimal places (e.g., 0.000) 

                  and the max length is 5 characters.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="TransactionStatusType">

		<xs:annotation>

			<xs:documentation> 

        Contains the status of the transaction, such as the buyer's online payment and

        whether the checkout process for the transaction has been completed.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="eBayPaymentStatus" type="ns:PaymentStatusCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates the success or failure of the buyer's online payment for a transaction.

            Only applicable if the buyer chose PayPal as the payment method for the transaction.

            If the payment failed, the value returned indicates the reason for the failure.

            Output only. Please see PaymentStatusCodeType for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CheckoutStatus" type="ns:CheckoutStatusCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates the current status of the checkout process for the transaction. 

            See CheckoutStatusCodeType for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="LastTimeModified" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates date and time a transaction's status or incomplete state was last updated (in GMT). 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="PaymentMethodUsed" type="ns:BuyerPaymentMethodCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Payment method the buyer selected for paying the seller for the transaction. See

            BuyerPaymentMethodCodeType for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="CompleteStatus" type="ns:CompleteStatusCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates whether the transaction process is complete or incomplete. 

            Please see CompleteStatusCodeType for specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="UserType">

		<xs:annotation>

			<xs:documentation>

        Type to contain the data for one eBay user. Depending on the context, the user might be

        the seller or the buyer in a transaction, or the bidder or winning bidder in a listing.

        An object of this type is returned by a number of calls, including the GetUser call.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AboutMePage" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            If true, indicates that the user has set up an About Me page.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="EIASToken" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

                  Reserved for future use.

                  Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:Email" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Email address for the user. Only conditionally returned. See anti-spam rules for the

            conditions under which a user's email address can be returned.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="FeedbackScore" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Contains the the aggregate feedback score for a user. A member's feedback

            score is the net positive feedback minus the net negative feedback left for the

            member. Output only. Feedback scores are a quantitative expression of the

            desirability of dealing with that person as a Buyer or a Seller in auction transactions. Each

            auction transaction can result in one feedback entry for a given user

            (the buyer can leave feedback for the seller, and the seller can leave 

            feedback for the buyer.). That one feedback can be positive,

            negative, or neutral. The aggregated feedback counts for a particular user represent

            that user's overall feedback score (referred to as a "feedback rating" on

            the eBay site). This rating is commonly expressed as the eBay Feedback score for the user.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="FeedbackPrivate" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates whether the user selected to make feedback information private and hidden

            from other users.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="FeedbackRatingStar" type="ns:FeedbackRatingStarCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Visual indicator of user's feedback score. See FeedbackRatingStarCodeType for

            specific values.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="IDVerified" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates whether the user has been verified. Output only. For more information

            about the ID Verify program, see:

            	http://pages.ebay.com/help/policies/identity-idverify.html

            

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="eBayGoodStanding" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

           If true, indicates that the user is in good standing with eBay

           					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="NewUser" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            If true, identifies a new user who has been a registered eBay user for 30 days or

            less. Always false after the user has been registered for more than 30 days. Does not

            indicate an ID change (see UserIdChanged).

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:RegistrationAddress" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Registration address for a user. Returned only if the user is registered

            on the Germany, Austria, or Switzerland eBay site and the user requesting

            the data is also registered on one of those sites. Returned in the place of

            of an email address.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="RegistrationDate" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates the date the specified user originally registered with eBay.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:Site" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            eBay site the user is registered with.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="Status" type="ns:UserStatusCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates the user's registration/user status. See UserStatusCodeType for

            specific values.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element ref="ns:UserID" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Unique eBay user ID for the user.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="UserIDChanged" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            If true, identifies a user whose ID has changed within the last 30 days. Does not

            indicate a new user (see NewUser).

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="UserIDLastChanged" type="xs:dateTime" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Date and time the user's data was last changed (in GMT).

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="VATStatus" type="ns:VATStatusCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Indicates whether or not the user is subject to VAT (Value Added Tax). Users who have

            registered with eBay as VAT-exempt are not subject to VAT. Not applicable to users whose

            country of residence is outside the EU. See VATStatusCodeType for possible values.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="BuyerInfo" type="ns:BuyerType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Contains information about the user as a buyer, such as the shipping address. See

            BuyerType for its child elements.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SellerInfo" type="ns:SellerType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

            Contains information about the user as a seller, such as whether the seller is

            authorized to list Live Auctions items or opts to have items cross-promoted. See

            SellerType for its child elements.

            Output only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="VATDetailsType">

		<xs:annotation>

			<xs:documentation> 

             Container for eBay's Business User features. A business seller can choose 

             to offer an item exclusively to bidders and buyers that also represent businesses.

             Only applicable when the item is listed in a B2B-enabled category. 

             Currently, the eBay Germany (DE), Austria (AT), and Switzerland (CH) sites support

             B2B business features.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="BusinessSeller" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   If true, indicates that the seller is a business user and intends to use 

                   listing features that are offered to business users only. 

                   This declaration is up to the seller and is not validated by eBay. 

                   Applicable for business sellers residing in Germany, Austria, or Switzerland 

                   and listing in a B2B VAT-enabled category. 

                   Input only.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="RestrictedToBusiness" type="xs:boolean" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   If true, indicates that the seller elects to offer the item exclusively 

                   to business users. If false, indicates that the seller elects to offer 

                   the item to all users. Applicable for business sellers residing in 

                   Germany, Austria, or Switzerland and listing in a B2B VAT-enabled category.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="VATPercent" type="xs:float" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

                   VAT rate for the item, if the item price includes VAT. 

                   The seller specifies the VATPercent if they want include the net price in 

                   addition to the gross price in the listing. VAT rates vary 

                   depending on the item and on the user's country of residence; 

                   therefore a business seller is responsible for entering the 

                   correct VAT rate (it will not be calculated by eBay).

                   On the eBay site, the max precision is 3 decimal places (e.g., 0.000) 

                   and the max length is 5 characters.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="ValType">

		<xs:sequence>

			<xs:element name="ValueLiteral" type="xs:string">

				<xs:annotation>

					<xs:documentation> 

            The display name of an attribute or characteristic value 

            (e.g., "New" might be a literal value for a Condition attribute).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ValueID" type="xs:int" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

	          Constant value that identifies the attribute or characteristic in a 

	          language-independent way. Unique within the characteristics set.

	          In product searches, the possible ID values are:

	                -3 = User entered an arbitrary value

	                -100 = Value not specified (null)

	                (positive integer) = Identifer for a pre-defined value the user selected (e.g., 1001).

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="VendorHostedPictureType">

		<xs:annotation>

			<xs:documentation> 

        Data for images hosted on a location of the seller's choice (other than eBay).

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="PictureURL" type="xs:anyURI" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            URL for one item picture that is stored/hosted at a non-eBay site.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="GalleryURL" type="xs:anyURI" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            URL for a picture to be used as the Gallery thumbnail (item must be listed with the fee-based

            option to be in the Gallery or Gallery Featured). If the item is Gallery Featured, a value must

            be supplied for either GalleryURL or PictureURL. In either case:

            (a) If a URL is provided for only PictureURL, it is used as the Gallery thumbnail. 

            (b) If a URL is provided for both GalleryURL and PictureURL, then the picture indicated in GalleryURL 

            is used as the thumbnail. 

            The image used for the Gallery thumbnail (specified in GalleryURL or PictureURL) must be in one of

            the graphics formats JPEG, BMP, TIF, or GIF. 

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="GalleryType" type="ns:GalleryTypeCodeType" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            For purposes of displaying a picture of the image, indicates whether the

            item is featured or appears in the Gallery. See GalleryTypeCodeType for

            specific values.

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="XSLFileType">

		<xs:annotation>

			<xs:documentation> 

      Describes an XSL file that would be returned

      from an Item Specifics or Pre-filled Item Information meta-data call

      (such as GetAttributesXSL or GetProductFinderXSL).

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="FileName" type="xs:string">

				<xs:annotation>

					<xs:documentation> 

            Indicates the name of the xsl file

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="FileVersion" type="xs:string">

				<xs:annotation>

					<xs:documentation> 

            Indicates the version of the xsl file

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="FileContent" type="xs:string" minOccurs="0">

				<xs:annotation>

					<xs:documentation> 

            Indicates the base64 encoded content of the xsl file

					</xs:documentation>

				</xs:annotation>

			</xs:element>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="PriceRangeFilterType">

		<xs:sequence>

			<xs:element name="MaxPrice" type="cc:AmountType"/>

			<xs:element name="MinPrice" type="cc:AmountType"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="UserIdFilterType">

		<xs:sequence>

			<xs:element name="ExcludeSellers" type="ns:UserIDType" minOccurs="0" maxOccurs="100"/>

			<xs:element name="IncludeSellers" type="ns:UserIDType" minOccurs="0" maxOccurs="100"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SearchLocationFilterType">

		<xs:sequence>

			<xs:element name="CountryCode" type="ns:CountryCodeType" minOccurs="0"/>

			<xs:element name="ItemLocation" type="ns:ItemLocationCodeType" minOccurs="0"/>

			<xs:element ref="ns:SearchLocation" minOccurs="0"/>

			<xs:element ref="ns:Currency" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SearchStoreFilterType">

		<xs:sequence>

			<xs:element name="StoreName" type="xs:string" minOccurs="0"/>

			<xs:element name="StoreSearch" type="ns:StoreSearchCodeType" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SearchResultItemType">

		<xs:sequence>

			<xs:element name="Item" type="ns:ItemType">

				<xs:annotation>

					<xs:documentation>

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="ItemSpecific" type="ns:NameValueListArrayType" minOccurs="0">

				<xs:annotation>

					<xs:documentation>

					</xs:documentation>

				</xs:annotation>

			</xs:element>

			<xs:element name="SearchResultValues" type="ns:SearchResultValuesCodeType" minOccurs="0" maxOccurs="unbounded"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="SearchResultItemArrayType">

		<xs:annotation>

			<xs:documentation> 

              Container for a list ofSearch Result  items.

			</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="SearchResultItem" type="ns:SearchResultItemType" minOccurs="0" maxOccurs="unbounded"/>

		</xs:sequence>

	</xs:complexType>
	<xs:element name="AccountCode" type="xs:string"/>
	<xs:element name="AccountEntry" type="ns:AccountEntryType"/>
	<xs:element name="AccountEntries" type="ns:AccountEntriesType"/>
	<xs:element name="AccountSummary" type="ns:AccountSummaryType"/>
	<xs:element name="BiddingItemArray" type="ns:ItemArrayType"/>
	<xs:element name="AmountPaid" type="cc:AmountType"/>
	<xs:element name="AmountPastDue" type="cc:AmountType"/>
	<xs:element name="AttributeID" type="xs:int">

		<xs:annotation>

			<xs:documentation>

      Constant value that identifies the characteristic in a language-independent way.

      Unique within a characteristics set.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="AttributeData" type="xs:string">

		<xs:annotation>

			<xs:documentation>

      An XML string containing a list of all the attributes that are applicable

      for a requested category, along with related meta-data.

      The meta-data specifies all the possible values of each attribute, the

      logic for presenting attributes to a user, and rules for validating the

      user's selections. This data is returned as "raw" XML. Individual

      elements are not described in the base components schema. See the

      description of GetAttributesCS in the reference guide for information about

      each element in the string.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="AttributeSetID" type="xs:int">

		<xs:annotation>

			<xs:documentation>

      Constant value that identifies the attribute set in a language-independent way.

      Unique across all eBay sites. Corresponds to a characteristics set ID. 

      Call GetCategory2CS to determine valid characteristics set IDs.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="AttributeSetVersion" type="xs:string">

		<xs:annotation>

			<xs:documentation>

      Version of the attribute set being specified (in requests) or that is currently

      on the site. This value changes each time changes are made to the mappings.

      The current version value is not necessarily greater than the previous

      value. Therefore, when comparing versions, only compare whether the

      value has changed.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="AttributeSystemVersion" type="xs:string">

		<xs:annotation>

			<xs:documentation>

      Version of the characteristics set mappings for the site.

      This value changes each time changes are made to the mappings.

      The current version value is not necessarily greater than the previous

      value. Therefore, when comparing versions, only compare whether the

      value has changed.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="Balance" type="cc:AmountType"/>
	<xs:element name="BidRetractionFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">

		<xs:annotation>

			<xs:documentation> 

        Contains feedback period statistics summarizing bid retractions. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="Buyer" type="ns:UserType">

		<xs:annotation>

			<xs:documentation> 

        Data for the item's buyer.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="Category" type="ns:CategoryType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data for one category. See CategoryType for

        specific child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="CategoryArray" type="ns:CategoryArrayType"/>
	<xs:element name="CategoryID" type="xs:string"/>
	<xs:element name="CharacteristicID" type="xs:string">

		<xs:annotation>

			<xs:documentation> 

        Unique identifier for a characteristic. Unique within a characteristics set.

        Applicable when working with Item Specifics (Attributes) or 

        Pre-filled Item Information (Catalogs).

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="CheckoutEnabled" type="xs:boolean">

		<xs:annotation>

			<xs:documentation> 

        If true, indicates the seller enabled the option for the buyer

        to go through the checkout process for payment and shipping of

        the specified item.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="CurrentBalance" type="cc:AmountType"/>
	<xs:element name="ExternalProductID" type="ns:ExternalProductIDType"/>
	<xs:element name="FeedbackDetail" type="ns:FeedbackDetailType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data for one feedback detail entry. See FeedbackDetailType for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="FeedbackDetailArray" type="ns:FeedbackDetailArrayType">

		<xs:annotation>

			<xs:documentation> 

        Contains a collection of one or multiple feedback detail entries. See FeedbackDetailArrayArrayType

        for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="FeedbackPeriod" type="ns:FeedbackPeriodType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data for one feedback period statistic. See FeedbackPeriodType for its child

        elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="FeedbackSummary" type="ns:FeedbackSummaryType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data for the feedback summary entry. See FeedbackSummaryType for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="Fees" type="ns:FeesType"/>
	<xs:element name="FileName" type="xs:string"/>
	<xs:element name="FileVersion" type="xs:string"/>
	<xs:element name="HighBidder" type="ns:UserType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data for the the current high bidder for an item. GetItem

        returns a high bidder for auctions that have ended and have a winning bidder.

        For fixed-price listings, in-progress auctions, or auction items that received

        no bids, GetItem returns a HighBidder node with empty values.

        Output only.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="InsuranceFee" type="cc:AmountType">

		<xs:annotation>

			<xs:documentation> 

        Amount of shipping insurance the seller is charging the buyer. Only applicable

        if flat shipping rate is specified for the item. Will be a zero value if shipping

        insurance is not required.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="InsuranceOption" type="ns:InsuranceOptionCodeType">

		<xs:annotation>

			<xs:documentation> 

        Indicates whether shipping insurance is offered by the seller and, if so, whether

        the insurance is optional or required. See InsuranceOptionCodeType for specific

        values. Applicable if flat or calculated shipping rates are used.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="Item" type="ns:ItemType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data for one item. See ItemType for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ItemArray" type="ns:ItemArrayType"/>
	<xs:element name="ItemID" type="ns:ItemIDType">

		<xs:annotation>

			<xs:documentation> 

        Item ID that uniquely identifies one listing.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ItemTypeFilter" type="ns:ItemTypeFilterCodeType"/>
	<xs:element name="ListingDuration" type="ns:ListingDurationCodeType"/>
	<xs:element name="MappedCategoryArray" type="ns:CategoryArrayType"/>
	<xs:element name="NegativeFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">

		<xs:annotation>

			<xs:documentation> 

        Contains feedback period statistics summarizing negative feedback. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="NeutralFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">

		<xs:annotation>

			<xs:documentation> 

        Contains feedback period statistics summarizing neutral feedback. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="UnmappedCategoryArray" type="ns:CategoryArrayType"/>
	<xs:element name="Offer" type="ns:OfferType"/>
	<xs:element name="Pagination" type="ns:PaginationType">

		<xs:annotation>

			<xs:documentation>

        Contains the data for controlling the pagination of data returned by call. 

        See PaginationType for its child elements.

        Input only.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="PaginationResult" type="ns:PaginationResultType">

		<xs:annotation>

			<xs:documentation>

        Shows the pagination of data returned by a call. See

        PaginationResultType for its child elements.

        Output only.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="PaymentMeans" type="ns:PaymentMeansType">

		<xs:annotation>

			<xs:documentation> 

		         Payment method the seller uses to pay eBay.

				</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="PaymentMethods" type="ns:BuyerPaymentMethodCodeType">

		<xs:annotation>

			<xs:documentation> 

        Identifies the payment method used by the buyer to pay the seller. See

        BuyerPaymentMethodCodeType for possible values.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="PaymentType" type="ns:PaymentType"/>
	<xs:element name="PositiveFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">

		<xs:annotation>

			<xs:documentation> 

        Contains feedback period statistics summarizing positive feedback. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="Product" type="ns:ProductType"/>
	<xs:element name="ProductFinderData" type="xs:string"/>
	<xs:element name="ProductFinderID" type="xs:int">

		<xs:annotation>

			<xs:documentation>

      Identifier for a Product Finder associated with the characteristics set, if

      any. Use a Product Finder when you want to specify multiple attributes in a

      product search query. Call GetCategory2CS to determine which categories

      support Product Finder searches.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ProductID" type="xs:string"/>
	<xs:annotation>

		<xs:documentation> 

      Unique identifier for a catalog product. A product is a prototype description 

      of a well-known type of item, such as a popular book.

		 </xs:documentation>

	</xs:annotation>
	<xs:element name="ProductSellingPagesData" type="xs:string"/>
	<xs:element name="Region" type="xs:string"/>
	<xs:element name="RegionID" type="xs:string"/>
	<xs:element name="RegistrationAddress" type="ns:AddressType">

		<xs:annotation>

			<xs:documentation> 

        Registration address for a user. Returned only if the user is registered

        on the Germany, Austria, or Switzerland eBay site and the user requesting

        the data is also registered on one of those sites. Returned in the place of

        of an email address.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ReviseStatus" type="ns:ReviseStatusType">

		<xs:annotation>

			<xs:documentation> 

        Indicates whether an item has been revised since the listing became

        active and, if so, which among a subset of properties have been changed

        by the revision.

        Output only.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="Seller" type="ns:UserType">

		<xs:annotation>

			<xs:documentation> 

             Indicates that the specified user is the listing's seller. 

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="SellerLevel" type="ns:SellerLevelCodeType">

		<xs:annotation>

			<xs:documentation> 

             Indicates the user's eBay PowerSeller tier. 

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="SellingStatus" type="ns:SellingStatusType">

		<xs:annotation>

			<xs:documentation>

              Various details about the current status of the listing, 

              such as the current number of bids and the current high bidder. 

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ShippingPriority" type="xs:int">

		<xs:annotation>

			<xs:documentation> 

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ShippingService" type="ns:ShippingServiceCodeType">

		<xs:annotation>

			<xs:documentation> 

        Indicates the shipping service (and carrier) that would be used

        to ship the item (such as UPS Ground). See ShippingServiceCodeType

        for specific values.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="Site" type="ns:SiteCodeType">

		<xs:annotation>

			<xs:documentation>

             The eBay site associated with the item or user (depending on the context). 

             The site associated with the item or user affects the business logic 

             and validation rules that are applied to the request, which in 

             turn affect the values that are returned in the response, as 

             well as values that appear on the eBay Web site. 

             For example, the value specified for Site can affect the list of 

             available categories, international business seller requirements, 

             the values of converted (localized) prices, the item-related time stamps 

             that are displayed on the eBay Web site, the visibility of the item 

             in some types of searches (e.g., GetCategoryListings), and other information. 

             In some cases, the rules are determined by a combination of Site, the user's 

             registration address, and other information.

          </xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="StoreCategoryID" type="xs:int">

		<xs:annotation>

			<xs:documentation> 

             Applicable for eBay Store sellers only. Numeric ID for a 

             custom category that the seller created in their eBay Store.

             eBay Stores sellers can create up to 19 custom categories 

             for their stores. (One additional Store category cannot be customized 

             and retains the value of "Other"). Valid values are 0 to 20:

                 0=Not an eBay Store item

                 1=Other

                 2=Category 1

                 3=Category 2

                 ...

                 19=Category 18

                 20=Category 19

             If you specify an invalid value (e.g., 21), the system resets the 

             value to 1 (Other).

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="StoreOwner" type="xs:boolean">

		<xs:annotation>

			<xs:documentation> 

             If true, the user has an eBay Store. 

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="StoreURL" type="xs:anyURI">

		<xs:annotation>

			<xs:documentation> 

             URL pointing to the seller's eBay Store page. 

             This URL follows the format below, where "sellerstorename" is 

             the seller's eBay Stores ID (that uniquely identifies the eBay Store).

             http://www.stores.ebay.com/sellerstorename

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ShippingAddress" type="ns:AddressType">

		<xs:annotation>

			<xs:documentation> 

        Contains the address of the buyer in the transaction, to which the seller

        would ship the item(s).

        See AddressType for its child elements.

        Output only.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="SearchLocation" type="ns:SearchLocationType"/>
	<xs:element name="SellerPaymentAddress" type="ns:AddressType">

		<xs:annotation>

			<xs:documentation> 

        Contains the address for a seller used for eBay payment purposes.

        See AddressType for its child elements.

        Output only.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ShippingRegions" type="ns:ShippingRegionCodeType">

		<xs:annotation>

			<xs:documentation> 

        Indicates the global regions to which the seller is willing to ship the item(s).

        Only applicable if the seller specifies SitePlusRegions for the shipping option

        (ShippingOptionCodeType). See ShippingRegionCodeType for specific shipping regions

        values.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ShippingDetails" type="ns:ShippingDetailsType">

		<xs:annotation>

			<xs:documentation> 

        Contains the shipping details for an item or transaction, such as the

        flat shipping costs or the calculated shipping specifications. See

        ShippingDetailsType for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ShippingServiceOptions" type="ns:ShippingServiceOptionsType">

		<xs:annotation>

			<xs:documentation> 

	Container that holds information about the shipping options for the item. 

	There can be up three options within ShippingServiceOptions.

        See ShippingServiceOptionsType for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ShippingTerm" type="ns:ShippingTermsCodeType">

		<xs:annotation>

			<xs:documentation> 

        Indicates who pays the shipping costs for the item(s), the buyer or the seller.

        See ShippingTermsCodeType for specific values.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="Transaction" type="ns:TransactionType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data for one transaction. See TransactionType for its child

        elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="TotalFeedbackPeriodArray" type="ns:FeedbackPeriodArrayType">

		<xs:annotation>

			<xs:documentation> 

        Contains feedback period statistics totals. See FeedbackPeriodArrayType

        for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="TransactionArray" type="ns:TransactionArrayType">

		<xs:annotation>

			<xs:documentation> 

        Contains a collection of one or multiple transactions. See TransactionArrayType

        for its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="TransactionID" type="xs:string">

		<xs:annotation>

			<xs:documentation> 

        Contains the identifier for one transaction for a listing.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="UserID" type="ns:UserIDType">

		<xs:annotation>

			<xs:documentation> 

        Contains the eBay ID for one user. Maximum length 127.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="UseCase" type="ns:ProductUseCaseCodeType">

		<xs:annotation>

			<xs:documentation>

      Specifies the context in which the product selling page is being called,

      which will imply certain validation rules. Use this code list to make sure

      you retrieve the appropriate version of product information and characteristic

      meta-data when you are listing an item with Pre-filled Item Information.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="User" type="ns:UserType">

		<xs:annotation>

			<xs:documentation> 

        Contains the data for one user. Depending on the context, this might be

        a seller, a buyer, a bidder, or a high/winning bidder. See UserType for

        its child elements.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="ValueList" type="ns:ValType">

		<xs:annotation>

			<xs:documentation>

      List of one or more valid values for an attribute or characteristic.

			</xs:documentation>

		</xs:annotation>

	</xs:element>
	<xs:element name="WatchItemArray" type="ns:ItemArrayType"/>
	<xs:element name="XSLFile" type="ns:XSLFileType"/>
	<xs:element name="PriceRangeFilter" type="ns:PriceRangeFilterType"/>
	<xs:element name="UserIdFilter" type="ns:UserIdFilterType"/>
	<xs:element name="SearchLocationFilter" type="ns:SearchLocationFilterType"/>
	<xs:element name="StoreSearchFilter" type="ns:SearchStoreFilterType"/>
	<xs:element name="BidderNoticePreferences" type="ns:BidderNoticePreferencesType"/>
	<xs:element name="CalculatedShippingPreferences" type="ns:CalculatedShippingPreferencesType"/>
	<xs:element name="CombinedPaymentPreferences" type="ns:CombinedPaymentPreferencesType"/>
	<xs:element name="CrossPromotionPreferences" type="ns:CrossPromotionPreferencesType"/>
	<xs:element name="FlatShippingPreferences" type="ns:FlatShippingPreferencesType"/>
	<xs:element name="SellerPaymentPreferences" type="ns:SellerPaymentPreferencesType"/>
<xs:complexType name="SellerPaymentPreferencesType">

		<xs:annotation>

			<xs:documentation/>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AlwaysUseThisPaymentAddress" type="xs:boolean" minOccurs="0"/>

			<xs:element name="DisplayPayNowButton" type="ns:DisplayPayNowButtonCodeType" minOccurs="0"/>

			<xs:element name="PayPalPreferred" type="xs:boolean" minOccurs="0"/>

			<xs:element ref="ns:SellerPaymentAddress" minOccurs="0"/>

			<xs:element name="UPSRateOption" type="ns:UPSRateOptionCodeType" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CombinedPaymentPreferencesType">

		<xs:annotation>

			<xs:documentation/>

		</xs:annotation>

		<xs:sequence>

			<xs:element ref="ns:CalculatedShippingPreferences" minOccurs="0"/>

			<xs:element name="CombinedPaymentOption" type="ns:CombinedPaymentOptionCodeType" minOccurs="0"/>

			<xs:element name="CombinedPaymentPeriod" type="ns:CombinedPaymentPeriodCodeType" minOccurs="0"/>

			<xs:element ref="ns:FlatShippingPreferences" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="FlatShippingPreferencesType">

		<xs:annotation>

			<xs:documentation/>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="AmountPerAdditionalItem" type="cc:AmountType" minOccurs="0"/>

			<xs:element name="DeductionAmountPerAdditionalItem" type="cc:AmountType" minOccurs="0"/>

			<xs:element name="FlatRateInsuranceRangeCost" type="ns:FlatRateInsuranceRangeCostType" minOccurs="0" maxOccurs="6"/>

			<xs:element name="FlatShippingRateOption" type="ns:FlatShippingRateOptionCodeType"/>

			<xs:element ref="ns:InsuranceOption"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="FlatRateInsuranceRangeCostType">

		<xs:annotation>

			<xs:documentation>Issurance Cost for Item Price Range</xs:documentation>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="FlatRateInsuranceRange" type="ns:FlatRateInsuranceRangeCodeType" minOccurs="0"/>

			<xs:element name="InsuranceCost" type="cc:AmountType" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CalculatedShippingPreferencesType">

		<xs:annotation>

			<xs:documentation/>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="CalculatedShippingAmountForEntireOrder" type="cc:AmountType" minOccurs="0"/>

			<xs:element name="CalculatedShippingChargeOption" type="ns:CalculatedShippingChargeOptionCodeType"/>

			<xs:element name="CalculatedShippingRateOption" type="ns:CalculatedShippingRateOptionCodeType" minOccurs="0"/>

			<xs:element ref="ns:InsuranceOption"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="BidderNoticePreferencesType">

		<xs:annotation>

			<xs:documentation/>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="UnsuccessfulBidderNoticeIncludeMyItems" type="xs:boolean" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<xs:complexType name="CrossPromotionPreferencesType">

		<xs:annotation>

			<xs:documentation/>

		</xs:annotation>

		<xs:sequence>

			<xs:element name="CrossPromotionEnabled" type="xs:boolean" minOccurs="0"/>

			<xs:element name="CrossSellItemFormatSortFilter" type="ns:ItemFormatSortFilterCodeType" minOccurs="0"/>

			<xs:element name="CrossSellGallerySortFilter" type="ns:GallerySortFilterCodeType" minOccurs="0"/>

			<xs:element name="CrossSellItemSortFilter" type="ns:ItemSortFilterCodeType" minOccurs="0"/>

			<xs:element name="UpSellItemFormatSortFilter" type="ns:ItemFormatSortFilterCodeType" minOccurs="0"/>

			<xs:element name="UpSellGallerySortFilter" type="ns:GallerySortFilterCodeType" minOccurs="0"/>

			<xs:element name="UpSellItemSortFilter" type="ns:ItemSortFilterCodeType" minOccurs="0"/>

		</xs:sequence>

	</xs:complexType>
<!--  

##### from file eBLBaseComponents/eBLSharedComponents.xsd #####

-->	<xs:annotation>
		<xs:documentation>
			This schema definition file contains specifications for:
			1)  The abstract request and response messages
			    that will be used to construct payloads for various use cases;
			2) Re-useable error components that are used to communicate 
			    application or business-level error messages back to the client application. 
			    These  error messages are tupically returned due to a problem detected 
			    while processing the request message (e.g., an invalid combination of arguments).
			3) Other utility components needed by various eBay buying, selling, and payment
			    applications (e.g., address type).
 		</xs:documentation>
	</xs:annotation>
<xs:complexType name="ErrorParameterType">
		<xs:annotation>
			<xs:documentation>
              A variable that contains specific information about the context of this error.
              For example, if you pass in an attribute set ID that does not match 
              the specified category, the attribute set ID might be returned as an error parameter.
              Use error parameters to flag fields that users need to correct.
              Also use error parameters to distinguish between errors when multiple
              errors are returned.
				</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="xs:string">
				<xs:annotation>
					<xs:documentation>
		             The value of the variable (e.g., the attribute set ID)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ParamID" type="xs:string">
			<xs:annotation>
				<xs:documentation>
		          The index of the parameter in the list of parameter types returned
		          within the error type.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
<xs:complexType name="ErrorType">
		<xs:annotation>
			<xs:documentation>
             These are request errors (as opposed to system errors) that occur due to problems 
             with business-level data (e.g., an invalid combination of arguments) that 
             the application passed in.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ShortMessage" type="xs:string">
				<xs:annotation>
					<xs:documentation>
                   A brief description of the condition that raised the error.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LongMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
                   A more detailed description of the condition that raised the error.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorCode" type="xs:token">
				<xs:annotation>
					<xs:documentation>
                  A unique code that identifies the particular error condition that occurred.
                  Your application can use error codes as identifiers 
                  in your customized error-handling algorithms. 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SeverityCode" type="ns:SeverityCodeType">
				<xs:annotation>
					<xs:documentation>
                   Indicates whether the error is a severe error (causing the request to fail)
                   or an informational error (a warning) that should be communicated to the user.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorParameters" type="ns:ErrorParameterType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
                   This optional element carries a list of context-specific 
                   error variables that indicate details about the error condition. 
                   These are useful when multiple instances of ErrorType are returned.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="FaultDetailsType">
		<xs:annotation>
			<xs:documentation>
            SOAP faults are used to indicate that an infrastructure error has occurred, 
            such as a problem on eBay's side with database or server going down, or a 
            problem with the client or server-side SOAP framework.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ErrorCode" type="xs:string">
				<xs:annotation>
					<xs:documentation>
                  Error code can be used by a receiving application to debug a SOAP response 
                  message that contains one or more SOAP fault details. 
                  Each error code is uniquely defined for each fault scenario.
                  See the eBay documentation for more information.
                  Your application can use error codes as identifiers 
                  in your customized error-handling algorithms.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Severity" type="xs:string">
				<xs:annotation>
					<xs:documentation>
                   Indicates whether the error is a severe error (causing the request to fail)
                   or an informational error (a warning).
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DetailedMessage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
                   Description of the condition that caused the SOAP fault.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AbstractRequestType" abstract="true">
		<xs:annotation>
			<xs:documentation> 
            Base type definition of the request payload, which can carry any type 
            of payload content plus optional versioning information and detail level requirements.
            All concrete request types (e.g., AddItemRequestType) are derived from the abstract request type. 
            The naming convention we use for the concrete type names is the name of the service 
            (the verb or call name) followed by "RequestType": VerbNameRequestType
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DetailLevel" type="ns:DetailLevelCodeType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
                  Detail levels are instructions that define standard subsets of data to return for 
                  particular data components (e.g., each Item, Transaction, or User) within the response payload. 
                  For example, a particular detail level might cause the response to include buyer-related 
                  data in every result (e.g., for every Item), but no seller-related data. 
                  Specifying a detail level is like using a predefined attribute list in the SELECT clause of 
                  an SQL query. Use the DetailLevel element to specify the required detail level that 
                  the client application needs pertaining to the data components that are applicable for the request. 
                  The DetailLevelCodeType defines the global list of available detail levels for
                  all request types. Most request types support certain detail levels or none at all.
                  If you pass a detail level that exists in the schema but that isn't valid for a 
                  particular request, eBay will ignore it and your request will still be processed. 
                  For each request type, see the eBay documentation to determine which detail levels 
                  are applicable.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ErrorLanguage" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
                   Use ErrorLanguage to return error strings for the call in a different language 
                   from the language commonly associated with the site that the requesting user is registered with. 
                   Specify the standard RFC 3066 language identification tag (e.g., en_US).
                   See http://www.ietf.org/rfc/rfc3066.txt.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MessageID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
                  All requests support a MessageID element and all responses support a CorrelationID element. 
                  If you pass a message ID in a request, we will return the same value as the correlation ID 
                  in the response. This may be useful for tracking that a response is returned for every request 
                  and to match particular responses to particular requests.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:string">
				<xs:annotation>
					<xs:documentation> 
                   The version of the request payload schema. Specify the version
                   of the eBay Service WSDL your application is using. 
                   The value you pass in the Version property of the request has two effects:
                   - It directly indicates the version of the code lists and other data that eBay 
                     will use to process your request.
                   - It indirectly indicates the API compatibility level of the data and functionality 
                      you are using.
                   See the eBay documentation for more information.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AbstractResponseType" abstract="true">
		<xs:annotation>
			<xs:documentation> 
                    Base type definition of a response payload that can carry any 
                    type of payload content with following optional elements:
                    	- timestamp of response message, 
                    	- application-level acknowledgement 
                    	- application-level (business-level) errors and warnings
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Timestamp" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
                    This value represents the date and time (in GMT) when the response 
                    was generated by a service provider (e.g., the AddItem service) 
                    as a result of processing of a request). 
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Ack" type="ns:AckCodeType">
				<xs:annotation>
					<xs:documentation> 
                  A token representing the application-level acknowledgement code that indicates
                  the response status (e.g., success). The AckCodeType list specifies
                  the possible values for Ack.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="CorrelationID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
                  All requests support a MessageID element and all responses support a CorrelationID element. 
                  If you pass a message ID in a request, we will return the same value as the correlation ID 
                  in the response. This may be useful for tracking that a response is returned for every request 
                  and to match particular responses to particular requests.
                  The CorrelationID may be used with an application level acknowledgement.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Errors" type="ns:ErrorType" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation> 
                  A list of application-level errors (if any) that occurred when eBay processed the request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Version" type="xs:string">
				<xs:annotation>
					<xs:documentation> 
                   The version of the response payload schema. Indicates the version of the
                   schema that eBay used to process the request, and it should match the version 
                   you sent in the request.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Build" type="xs:string">
				<xs:annotation>
					<xs:documentation> 
                   This refers to the specific software build that eBay used when processing the request 
                   and generating the response. eBay Developer Support may request the build information 
                   when helping you resolve technical issues.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:any processContents="lax" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="AddressType">
		<xs:annotation>
			<xs:documentation> 
        Contains the data for one user address. This is the base type for a
        number of user addresses, including seller payment address and buyer
        shipping address.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="xs:string" minOccurs="0"/>
			<xs:element name="Street1" type="xs:string" minOccurs="0"/>
			<xs:element name="Street2" type="xs:string" minOccurs="0"/>
			<xs:element name="CityName" type="xs:string" minOccurs="0"/>
			<xs:element name="StateOrProvince" type="xs:string" minOccurs="0"/>
			<xs:element ref="ns:Country" minOccurs="0"/>
			<xs:element ref="ns:CountryName" minOccurs="0"/>
			<xs:element name="Phone" type="xs:string" minOccurs="0"/>
			<xs:element name="PostalCode" type="xs:string" minOccurs="0"/>
			<xs:element name="AddressID" type="xs:string" minOccurs="0"/>
			<xs:element name="AddressOwner" type="ns:AddressOwnerCodeType" minOccurs="0"/>
			<xs:element name="AddressStatus" type="ns:AddressStatusCodeType" minOccurs="0" maxOccurs="1"/>
			<xs:element name="ExternalAddressID" type="xs:string" minOccurs="0"/>
			<xs:element name="InternationalName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Seller's international name that is associated with the payment address.
            Only applicable to SellerPaymentAddress.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternationalStateAndCity" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            International state and city for the seller's payment address.
            Only applicable to SellerPaymentAddress.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InternationalStreet" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation> 
            Seller's international street address that is associated with the payment address.
            Only applicable to SellerPaymentAddress.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="Country" type="ns:CountryCodeType">
		<xs:annotation>
			<xs:documentation>
        Two-letter ISO 3166 code for a country.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CountryName" type="xs:string">
		<xs:annotation>
			<xs:documentation>
        Textual name of a country.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Currency" type="ns:CurrencyCodeType">
		<xs:annotation>
			<xs:documentation>
	         Three-letter ISO 4217 currency code. The annotations of CurrencyCodeType identify the
	         currencies that are applicable when listing items on eBay.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Email" type="xs:string">
		<xs:annotation>
			<xs:documentation>
        User email address. Only returned when certain conditions are met. See anti-spam
        rules for the conditions under which a user's email address is returned.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="StateOrProvince" type="xs:string">
		<xs:annotation>
			<xs:documentation>
		      The state or province associated with the user's registration address
		      or the sender or recipient's shipping address (depending on the context).
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UUID" type="cc:UUIDType">
		<xs:annotation>
			<xs:documentation>
        Universally unique constraint tag. Use UUID as a precaution if you are listing many
        items at once. If you add an item and do not get an HTTP response, resend the item
        with the same UUID. If the item was successfully listed the first time, you will receive
        an error message for trying to use a UUID that you have already used. The error will also
        include item ID for the duplicated item and a boolean value indicating whether the duplicate
        item was listed by the same application. The UUID can only contain digits from 0-9 and
        letters from A-F and must be 32 characters long. The UUID is unique for each root-level
        category.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
<xs:complexType name="CustomSecurityHeaderType">
		<xs:annotation>
			<xs:documentation>
      			Custom Securiy Header
      			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="eBayAuthToken" type="xs:string" minOccurs="0"/>
			<xs:element name="HardExpirationWarning" type="xs:string" minOccurs="0"/>
			<xs:element name="Credentials" type="ns:UserIdPasswordType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
<xs:complexType name="UserIdPasswordType">
		<xs:sequence>
			<xs:element name="AppId" type="xs:string"/>
			<xs:element name="DevId" type="xs:string"/>
			<xs:element name="AuthCert" type="xs:string"/>
			<xs:element name="Username" type="xs:string"/>
			<xs:element name="Password" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
<!--  

##### from file eBLBaseComponents/AccountDetailEntryCodeList.xsd #####

--><xs:simpleType name="AccountDetailEntryCodeType">
		<xs:annotation>
			<xs:documentation>
				AccountDetailEntryCodeType - Type declaration to be used by other schema.
				These are the possible codes to describe a type of eBay account detail entry.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeInsertion">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeBold">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeFeatured">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeCategoryFeatured">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeFinalValue">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentCheck">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentCC">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCourtesy">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditNoSale">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPartialSale">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RefundCC">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RefundCheck">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FinanceCharge">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AWDebit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AWCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AWMemo">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditDuplicateListing">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeePartialSale">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentElectronicTransferReversal">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentCCOnce">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeReturnedCheck">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeRedepositCheck">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentCash">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditInsertion">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditBold">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditFeatured">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCategoryFeatured">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditFinalValue">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeNSFCheck">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeReturnCheckClose">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Memo">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentMoneyOrder">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardOnFile">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardNotOnFile">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Invoiced">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="InvoicedCreditCard">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditTransferFrom">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DebitTransferTo">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="InvoiceCreditBalance">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayDebit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PromotionalCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CCNotOnFilePerCustReq">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditInsertionFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CCPaymentRejected">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeGiftIcon">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditGiftIcon">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeGallery">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeFeaturedGallery">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditGallery">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditFeaturedGallery">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemMoveFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OutageCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPSA">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPCGS">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeReserve">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditReserve">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayVISACredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BBAdminCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BBAdminDebit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReferrerCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReferrerDebit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SwitchCurrency">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentGiftCertificate">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentWireTransfer">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentHomeBanking">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentElectronicTransfer">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentAdjustmentCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentAdjustmentDebit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Chargeoff">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffRecovery">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffBankruptcy">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffSuspended">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffDeceased">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffOther">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeoffWacko">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FinanceChargeReversal">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FVFCreditReversal">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ForeignFundsConvert">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ForeignFundsCheckReversal">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EOMRestriction">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllFeesCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SetOnHold">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RevertUserState">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitOnFile">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitNotOnFile">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentDirectDebit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitReversal">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitReturnedItem">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeHighlight">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditHighlight">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BulkUserSuspension">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeRealEstate30DaysListing">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditRealEstate30DaysListing">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TradingLimitOverrideOn">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TradingLimitOverrideOff">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EquifaxRealtimeFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditEquifaxRealtimeFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentEquifaxDebit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentEquifaxCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Merged">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoTraderOn">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoTraderOff">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaperInvoiceOn">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaperInvoiceOff">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountStateSwitch">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FVFCreditReversalAutomatic">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditSoftOutage">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LACatalogFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAExtraItem">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LACatalogItemFeeRefund">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LACatalogInsertionRefund">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAFinalValueFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAFinalValueFeeRefund">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LABuyerPremiumPercentageFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LABuyerPremiumPercentageFeeRefund">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAAudioVideoFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LAAudioVideoFeeRefund">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeIPIXPhoto">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeIPIXSlideShow">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditIPIXPhoto">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditIPIXSlideShow">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeTenDayAuction">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditTenDayAuction">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TemporaryCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TemporaryCreditReversal">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptionAABasic">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptionAAPro">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditAABasic">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditAAPro">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeLargePicture">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditLargePicture">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeePicturePack">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPicturePackPartial">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditPicturePackFull">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptioneBayStores">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CrediteBayStores">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeInsertionFixedPrice">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditInsertionFixedPrice">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeFinalValueFixedPrice">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditFinalValueFixedPrice">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ElectronicInvoiceOn">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ElectronicInvoiceOff">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlagDDDDPending">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlagDDPaymentConfirmed">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceDurationFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceDurationCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FeeSchedule">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditSchedule">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptionSMBasic">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubscriptionSMBasicPro">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditSMBasic">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditSMBasicPro">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresGTCFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresGTCCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ListingDesignerFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ListingDesignerCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ExtendedAuctionFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ExtendedAcutionCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalOTPSucc">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalOTPPend">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalFailed">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalChargeBack">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeBack">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeBackReversal">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalRefund">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsAddition">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsReduction">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsPaymentAutomatic">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsPaymentManual">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsPaymentReversal">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BonusPointsCashPayout">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATDebit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusChangePending">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusChangeApproved">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusChange_Denied">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusDeletedByCSR">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATStatusDeletedByUser">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SMProListingDesignerFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SMProListingDesignerCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresSuccessfulListingFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresSuccessfulListingFeeCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresReferralFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresReferralCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubtitleFee">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SubtitleFeeCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayStoreInventorySubscriptionCredit">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoPmntReqExempt">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoPmntReqRein">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AccountHistorySelectionCodeList.xsd #####

--><xs:simpleType name="AccountHistorySelectionCodeType">
		<xs:annotation>
			<xs:documentation>
           AccountHistorySelectionCodeType - Type declaration to be used by other schema.
           Specifies the account retrieval cases (the seller account report format).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="LastInvoice">
				<xs:annotation>
					<xs:documentation>
                (in) Last Invoice report. Generates a report consisting of the data in the
                last invoice eBay sent to the seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SpecifiedInvoice">
				<xs:annotation>
					<xs:documentation>
                (in) Specified invoice. Generates a report consisting of the data for a
                specific invoice, identified by the month and year the invoice was issued.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BetweenSpecifiedDates">
				<xs:annotation>
					<xs:documentation>
                (in) Between specified dates. Generates a report consisting of account
                entries that were posted to the user's seller account between two dates.
                The period covered may cross the boundaries between formal invoices.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllHistory">
				<xs:annotation>
					<xs:documentation>
                (in) All history. Generates a report of all of the account entries in the
                user's seller account that are accessible (i.e., those that have not been
                archived and removed from the active database at eBay).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AccountStateCodeList.xsd #####

--><xs:simpleType name="AccountStateCodeType">
		<xs:annotation>
			<xs:documentation>
           AccountStateCodeType - Type declaration to be used by other schema.
           These are the possible codes to describe the state of an account of an 
           eBay user.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Active">
				<xs:annotation>
					<xs:documentation>
                (out) Indicates that the account is active and the current account used for
                the user's seller activities.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Pending">
				<xs:annotation>
					<xs:documentation>
                (out) Indicates that the account has been created, but is not yet active
                pending additional information or processing by eBay.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Inactive">
				<xs:annotation>
					<xs:documentation>
                (out) Indicates that the account is inactive. No new seller account entries
                would be posted by eBay to the account.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AckCodeList.xsd #####

--><xs:simpleType name="AckCodeType">
		<xs:annotation>
			<xs:documentation>
AckCodeType - Type declaration to be used by other schema.
This code identifies the acknowledgement code types that 
eBay could use to communicate the status of processing a 
(request) message to an application. This code would be used 
as part of a response message that contains an  
application-level acknowledgement element.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Success">
				<xs:annotation>
					<xs:documentation>
					   (out) Request processing succeeded
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Failure">
				<xs:annotation>
					<xs:documentation> 
					   (out) Request processing failed
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Warning">
				<xs:annotation>
					<xs:documentation>
					   (out) Request processing completed with warning information
					   being included in the response message
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AddressOwnerCodeList.xsd #####

--><xs:simpleType name="AddressOwnerCodeType">
		<xs:annotation>
			<xs:documentation>
AddressOwnerCodeType - Type declaration to be used by other schema.
This code identifies the AddressOwner code types which indicates
who owns the user'a address.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="PayPal">
				<xs:annotation>
					<xs:documentation>
					   (in/out) PayPal owns address
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBay">
				<xs:annotation>
					<xs:documentation> 
					   (in/out) eBay owns address
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/AddressStatusCodeList.xsd #####

--><xs:simpleType name="AddressStatusCodeType">
		<xs:annotation>
			<xs:documentation>
                                AddressStatusCodeType - Type declaration to be used by other schemas.
                                This is the PayPal address status
                        </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None"/>
			<xs:enumeration value="Confirmed"/>
			<xs:enumeration value="Unconfirmed"/>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BalanceCodeList.xsd #####

--><xs:simpleType name="BalanceCodeType">
		<xs:annotation>
			<xs:documentation>
BalanceCodeType - Type declaration to be used by other schema.
This code identifies the types of balances in an account, e.g., a PayPal 
account.   
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>Custom Code</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BidActionCodeList.xsd #####

--><xs:simpleType name="BidActionCodeType">
		<xs:annotation>
			<xs:documentation>
          BidActionCodeType - Type declaration to be used by other schema.
          These are the possible codes for types of bid.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
                Unknown
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Bid">
				<xs:annotation>
					<xs:documentation>
                (in/out) Bid. The offer is being or was placed on a competitive-bidding
                listing (a Chinese or Dutch auction).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotUsed">
				<xs:annotation>
					<xs:documentation>
                (out) Not used.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Retraction">
				<xs:annotation>
					<xs:documentation>
                (out) Retraction. The offer was retracted by the user who extended the
                offer. (Must be done on the eBay site, not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoRetraction">
				<xs:annotation>
					<xs:documentation>
                (out) Auto-retraction. The offer was auto-retracted. (Must be done on the
                eBay site, not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Cancelled">
				<xs:annotation>
					<xs:documentation>
                (out) Cancelled. The offer was cancelled. (Must be done on the eBay site,
                not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AutoCancel">
				<xs:annotation>
					<xs:documentation>
                (out) Auto-cancel. The offer was auto-cancelled. (Must be done on the eBay
                site, not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Absentee">
				<xs:annotation>
					<xs:documentation>
                (out) Absentee. The offer placed was an absentee bid. (Must be done on the
                eBay site, not possible through the API.)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNow">
				<xs:annotation>
					<xs:documentation>
                (out) BuyItNow. The offer resulted in the successful exercise of the Buy It
                Now option for a Chinese auction.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Purchase">
				<xs:annotation>
					<xs:documentation>
                (in/out) Purchase. The offer is being or was placed on a fixed-price listing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
                (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BidderTypeCodeList.xsd #####

--><xs:simpleType name="BidderTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			     BidderTypeCodeType - Type declaration to be used by other schema.
			     Specifies the whether to retrieve all bidders for ended or open listings. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AllBidder">
				<xs:annotation>
					<xs:documentation>
						  Retrieve all bidders for ended or open listings			
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HighBidder">
				<xs:annotation>
					<xs:documentation>
						  Retrieve all high bidders.			
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BuyerPaymentMethodCodeList.xsd #####

--><xs:simpleType name="BuyerPaymentMethodCodeType">
		<xs:annotation>
			<xs:documentation>
BuyerPaymentMethodCodeType - Type declaration to be used 
by other schema. Identifies the payment method used by the
buyer to pay the seller. On item listing, identifies one of
the payment methods seller will accept for the item.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						    (in/out) No payment method specified
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MOCC">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Money order/cashiers check
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AmEx">
				<xs:annotation>
					<xs:documentation>
						  (in/out) American Express
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PaymentSeeDescription">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Payment instructions are contained in the item's description
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CCAccepted">
				<xs:annotation>
					<xs:documentation>
						  (in/out) American Express
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PersonalCheck">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Personal check
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="COD">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Cash on delivery
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VisaMC">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Visa/Mastercard
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Other forms of payment.
						  Some custom method is accepted by seller 
						  as the payment method in the transaction. For 
						  Motors vehicle items, this field refers to the 
						  Deposit payment method.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPal">
				<xs:annotation>
					<xs:documentation>
						  (in/out) PayPal
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Discover">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Discover
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CashOnPickup">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Payment on delivery acceptable payment term 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MoneyXferAccepted">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Direct transfer of money acceptable payment term 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MoneyXferAcceptedInCheckout">
				<xs:annotation>
					<xs:documentation>
						    (in/out) If the seller has bank account information on file, 
						    and MoneyXferAcceptedInCheckout = true, then 
						    the bank account information will be displayed in 
						    Checkout. Applicable only to certain global eBay sites. See
						    the international differences section in the Developers Guide.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherOnlinePayments">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Online Escrow paid for by seller 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/BuyerProtectionCodeList.xsd #####

--><xs:simpleType name="BuyerProtectionCodeType">
		<xs:annotation>
			<xs:documentation>
BuyerProtectionCodeType - Type declaration to be used by other schema. 
Indicates the status of the item's eligibility for the Buyer Protection Program.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ItemIneligible">
				<xs:annotation>
					<xs:documentation>
						    (out) Item is ineligible (e.g., category not applicable)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemEligible">
				<xs:annotation>
					<xs:documentation>
						    (out) Item is eligible per standard criteria 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemMarkedIneligible">
				<xs:annotation>
					<xs:documentation>
						    (out) Item marked ineligible per special criteria (e.g., seller's account closed)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemMarkedEligible">
				<xs:annotation>
					<xs:documentation>
						    (out) Item marked eligible per other criteria
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						    (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CategoryListingsOrderCodeList.xsd #####

--><xs:simpleType name="CategoryListingsOrderCodeType">
		<xs:annotation>
			<xs:documentation>
			   CategoryListingsOrderCodeType - Type declaration to be used by other schema.
			   This code identifies the CategoryListingsOrder codes (e.g., for GetCategoryListings 
			   request) to be used to filter the returned data in the ways enumerated below.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NoFilter">
				<xs:annotation>
					<xs:documentation>
					    Applies no filter. For the US site, sorts items by start time. 
					    For International sites, sorts items by end time. 
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemsBy24Hr">
				<xs:annotation>
					<xs:documentation> 
					    Returns items that were listed in the past 24 hours. 	
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemsEndToday">
				<xs:annotation>
					<xs:documentation> 
					    	[NOTE: ROWInternal] Returns items that end today.	
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemsEndIn5Hr">
				<xs:annotation>
					<xs:documentation> 
					    	[NOTE: ROWInternal] Returns items that end within approximately 5 hours.  	
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CategoryListingsSearchTypeCodeList.xsd #####

--><xs:simpleType name="CategoryListingsSearchCodeType">
		<xs:annotation>
			<xs:documentation> 			    					</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Featured">
				<xs:annotation>
					<xs:documentation>  										</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SuperFeatured">
				<xs:annotation>
					<xs:documentation>  										</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>					   (out) Reserved for internal or future use.					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CharacteristicsSearchCodeList.xsd #####

--><xs:simpleType name="CharacteristicsSearchCodeType">
		<xs:annotation>
			<xs:documentation>
Indicates whether one attribute or multiple attributes can be used 
as the search criteria when calling GetProductSearchResults. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Single">
				<xs:annotation>
					<xs:documentation>
            (in/out) The search criteria can consist of one attribute.
            Applications should validate that only one searchable attribute 
            is selected for the query.
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Multi">
				<xs:annotation>
					<xs:documentation> 
            (in/out) The search criteria can consist of multiple attributes.
            One or more searchable attributes can be selected, and users should be informed 
            that the search engine will apply "AND" logic to the query.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
            (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CheckoutStatusCodeList.xsd #####

--><xs:simpleType name="CheckoutStatusCodeType">
		<xs:annotation>
			<xs:documentation>
CheckoutStatusCodeType - Type declaration to be used by other schema.
Indicates the current state of the checkout process for a transaction.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="CheckoutComplete">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Checkout complete
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CheckoutIncomplete">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Checkout incomplete--no details specified
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerRequestsTotal">
				<xs:annotation>
					<xs:documentation>
						   (out) Buyer requests total from seller
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SellerResponded">
				<xs:annotation>
					<xs:documentation>
						  (out) Seller responded to buyer's request 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CommentTypeCodeList.xsd #####

--><xs:simpleType name="CommentTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			     CommentTypeCodeType - Type declaration to be used by other schema.
			     These are the possible codes to specify the types of feedback/comment.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Positive">
				<xs:annotation>
					<xs:documentation>
						    Positive feedback.					
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Neutral">
				<xs:annotation>
					<xs:documentation>
						   Neutral feedback.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Negative">
				<xs:annotation>
					<xs:documentation>
						  Negative feedback.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Withdrawn">
				<xs:annotation>
					<xs:documentation>
						  Withdrawn feedback.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CompleteStatusCodeList.xsd #####

--><xs:simpleType name="CompleteStatusCodeType">
		<xs:annotation>
			<xs:documentation>
CompleteStatusCodeType - Type declaration to be used by other schema.
Indicates whether the transaction process is complete or incomplete.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Incomplete">
				<xs:annotation>
					<xs:documentation>
						    (out) transaction is incomplete.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Complete">
				<xs:annotation>
					<xs:documentation>
						    (out) transaction is complete.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CountryCodeList.xsd #####

--><xs:simpleType name="CountryCodeType">
		<xs:annotation>
			<xs:documentation>
CountryCodeType - Type declaration to be used by other schema.
This code list module defines the enumerated types of standard
2-letter ISO 3166 country codes. This code list also contains
some additional country codes not defined in the ISO 3166
country code set, which appear at the end of this code list and
are noted as non-ISO. Country codes may be used as input and as
output. For more information on ISO 3166 country codes, see the ISO site:
http://www.iso.ch/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AF"/>
			<xs:enumeration value="AL"/>
			<xs:enumeration value="DZ"/>
			<xs:enumeration value="AS"/>
			<xs:enumeration value="AD"/>
			<xs:enumeration value="AO"/>
			<xs:enumeration value="AI"/>
			<xs:enumeration value="AQ"/>
			<xs:enumeration value="AG"/>
			<xs:enumeration value="AR"/>
			<xs:enumeration value="AM"/>
			<xs:enumeration value="AW"/>
			<xs:enumeration value="AU"/>
			<xs:enumeration value="AT"/>
			<xs:enumeration value="AZ"/>
			<xs:enumeration value="BS"/>
			<xs:enumeration value="BH"/>
			<xs:enumeration value="BD"/>
			<xs:enumeration value="BB"/>
			<xs:enumeration value="BY"/>
			<xs:enumeration value="BE"/>
			<xs:enumeration value="BZ"/>
			<xs:enumeration value="BJ"/>
			<xs:enumeration value="BM"/>
			<xs:enumeration value="BT"/>
			<xs:enumeration value="BO"/>
			<xs:enumeration value="BA"/>
			<xs:enumeration value="BW"/>
			<xs:enumeration value="BV"/>
			<xs:enumeration value="BR"/>
			<xs:enumeration value="IO"/>
			<xs:enumeration value="BN"/>
			<xs:enumeration value="BG"/>
			<xs:enumeration value="BF"/>
			<xs:enumeration value="BI"/>
			<xs:enumeration value="KH"/>
			<xs:enumeration value="CM"/>
			<xs:enumeration value="CA"/>
			<xs:enumeration value="CV"/>
			<xs:enumeration value="KY"/>
			<xs:enumeration value="CF"/>
			<xs:enumeration value="TD"/>
			<xs:enumeration value="CL"/>
			<xs:enumeration value="CN"/>
			<xs:enumeration value="CX"/>
			<xs:enumeration value="CC"/>
			<xs:enumeration value="CO"/>
			<xs:enumeration value="KM"/>
			<xs:enumeration value="CG"/>
			<xs:enumeration value="CD"/>
			<xs:enumeration value="CK"/>
			<xs:enumeration value="CR"/>
			<xs:enumeration value="CI"/>
			<xs:enumeration value="HR"/>
			<xs:enumeration value="CU"/>
			<xs:enumeration value="CY"/>
			<xs:enumeration value="CZ"/>
			<xs:enumeration value="DK"/>
			<xs:enumeration value="DJ"/>
			<xs:enumeration value="DM"/>
			<xs:enumeration value="DO"/>
			<xs:enumeration value="TP"/>
			<xs:enumeration value="EC"/>
			<xs:enumeration value="EG"/>
			<xs:enumeration value="SV"/>
			<xs:enumeration value="GQ"/>
			<xs:enumeration value="ER"/>
			<xs:enumeration value="EE"/>
			<xs:enumeration value="ET"/>
			<xs:enumeration value="FK"/>
			<xs:enumeration value="FO"/>
			<xs:enumeration value="FJ"/>
			<xs:enumeration value="FI"/>
			<xs:enumeration value="FR"/>
			<xs:enumeration value="GF"/>
			<xs:enumeration value="PF"/>
			<xs:enumeration value="TF"/>
			<xs:enumeration value="GA"/>
			<xs:enumeration value="GM"/>
			<xs:enumeration value="GE"/>
			<xs:enumeration value="DE"/>
			<xs:enumeration value="GH"/>
			<xs:enumeration value="GI"/>
			<xs:enumeration value="GR"/>
			<xs:enumeration value="GL"/>
			<xs:enumeration value="GD"/>
			<xs:enumeration value="GP"/>
			<xs:enumeration value="GU"/>
			<xs:enumeration value="GT"/>
			<xs:enumeration value="GN"/>
			<xs:enumeration value="GW"/>
			<xs:enumeration value="GY"/>
			<xs:enumeration value="HT"/>
			<xs:enumeration value="HM"/>
			<xs:enumeration value="VA"/>
			<xs:enumeration value="HN"/>
			<xs:enumeration value="HK"/>
			<xs:enumeration value="HU"/>
			<xs:enumeration value="IS"/>
			<xs:enumeration value="IN"/>
			<xs:enumeration value="ID"/>
			<xs:enumeration value="IR"/>
			<xs:enumeration value="IQ"/>
			<xs:enumeration value="IE"/>
			<xs:enumeration value="IL"/>
			<xs:enumeration value="IT"/>
			<xs:enumeration value="JM"/>
			<xs:enumeration value="JP"/>
			<xs:enumeration value="JO"/>
			<xs:enumeration value="KZ"/>
			<xs:enumeration value="KE"/>
			<xs:enumeration value="KI"/>
			<xs:enumeration value="KP"/>
			<xs:enumeration value="KR"/>
			<xs:enumeration value="KW"/>
			<xs:enumeration value="KG"/>
			<xs:enumeration value="LA"/>
			<xs:enumeration value="LV"/>
			<xs:enumeration value="LB"/>
			<xs:enumeration value="LS"/>
			<xs:enumeration value="LR"/>
			<xs:enumeration value="LY"/>
			<xs:enumeration value="LI"/>
			<xs:enumeration value="LT"/>
			<xs:enumeration value="LU"/>
			<xs:enumeration value="MO"/>
			<xs:enumeration value="MK"/>
			<xs:enumeration value="MG"/>
			<xs:enumeration value="MW"/>
			<xs:enumeration value="MY"/>
			<xs:enumeration value="MV"/>
			<xs:enumeration value="ML"/>
			<xs:enumeration value="MT"/>
			<xs:enumeration value="MH"/>
			<xs:enumeration value="MQ"/>
			<xs:enumeration value="MR"/>
			<xs:enumeration value="MU"/>
			<xs:enumeration value="YT"/>
			<xs:enumeration value="MX"/>
			<xs:enumeration value="FM"/>
			<xs:enumeration value="MD"/>
			<xs:enumeration value="MC"/>
			<xs:enumeration value="MN"/>
			<xs:enumeration value="MS"/>
			<xs:enumeration value="MA"/>
			<xs:enumeration value="MZ"/>
			<xs:enumeration value="MM"/>
			<xs:enumeration value="NA"/>
			<xs:enumeration value="NR"/>
			<xs:enumeration value="NP"/>
			<xs:enumeration value="NL"/>
			<xs:enumeration value="AN"/>
			<xs:enumeration value="NC"/>
			<xs:enumeration value="NZ"/>
			<xs:enumeration value="NI"/>
			<xs:enumeration value="NE"/>
			<xs:enumeration value="NG"/>
			<xs:enumeration value="NU"/>
			<xs:enumeration value="NF"/>
			<xs:enumeration value="MP"/>
			<xs:enumeration value="NO"/>
			<xs:enumeration value="OM"/>
			<xs:enumeration value="PK"/>
			<xs:enumeration value="PW"/>
			<xs:enumeration value="PS"/>
			<xs:enumeration value="PA"/>
			<xs:enumeration value="PG"/>
			<xs:enumeration value="PY"/>
			<xs:enumeration value="PE"/>
			<xs:enumeration value="PH"/>
			<xs:enumeration value="PN"/>
			<xs:enumeration value="PL"/>
			<xs:enumeration value="PT"/>
			<xs:enumeration value="PR"/>
			<xs:enumeration value="QA"/>
			<xs:enumeration value="RE"/>
			<xs:enumeration value="RO"/>
			<xs:enumeration value="RU"/>
			<xs:enumeration value="RW"/>
			<xs:enumeration value="SH"/>
			<xs:enumeration value="KN"/>
			<xs:enumeration value="LC"/>
			<xs:enumeration value="PM"/>
			<xs:enumeration value="VC"/>
			<xs:enumeration value="WS"/>
			<xs:enumeration value="SM"/>
			<xs:enumeration value="ST"/>
			<xs:enumeration value="SA"/>
			<xs:enumeration value="SN"/>
			<xs:enumeration value="SC"/>
			<xs:enumeration value="SL"/>
			<xs:enumeration value="SG"/>
			<xs:enumeration value="SK"/>
			<xs:enumeration value="SI"/>
			<xs:enumeration value="SB"/>
			<xs:enumeration value="SO"/>
			<xs:enumeration value="ZA"/>
			<xs:enumeration value="GS"/>
			<xs:enumeration value="ES"/>
			<xs:enumeration value="LK"/>
			<xs:enumeration value="SD"/>
			<xs:enumeration value="SR"/>
			<xs:enumeration value="SJ"/>
			<xs:enumeration value="SZ"/>
			<xs:enumeration value="SE"/>
			<xs:enumeration value="CH"/>
			<xs:enumeration value="SY"/>
			<xs:enumeration value="TW"/>
			<xs:enumeration value="TJ"/>
			<xs:enumeration value="TZ"/>
			<xs:enumeration value="TH"/>
			<xs:enumeration value="TG"/>
			<xs:enumeration value="TK"/>
			<xs:enumeration value="TO"/>
			<xs:enumeration value="TT"/>
			<xs:enumeration value="TN"/>
			<xs:enumeration value="TR"/>
			<xs:enumeration value="TM"/>
			<xs:enumeration value="TC"/>
			<xs:enumeration value="TV"/>
			<xs:enumeration value="UG"/>
			<xs:enumeration value="UA"/>
			<xs:enumeration value="AE"/>
			<xs:enumeration value="GB"/>
			<xs:enumeration value="US"/>
			<xs:enumeration value="UM"/>
			<xs:enumeration value="UY"/>
			<xs:enumeration value="UZ"/>
			<xs:enumeration value="VU"/>
			<xs:enumeration value="VE"/>
			<xs:enumeration value="VN"/>
			<xs:enumeration value="VG"/>
			<xs:enumeration value="VI"/>
			<xs:enumeration value="WF"/>
			<xs:enumeration value="EH"/>
			<xs:enumeration value="YE"/>
			<xs:enumeration value="YU"/>
			<xs:enumeration value="ZM"/>
			<xs:enumeration value="ZW"/>
			<xs:enumeration value="AA">
				<xs:annotation>
					<xs:documentation>
		                NOTE: APO/FPO was defined in eBay list previously 
		                but they are not defined in ISO 3166. This country 
		                will remain on eBay country code list for backward 
		                compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QM">
				<xs:annotation>
					<xs:documentation>
		                NOTE: Guernsey was defined in eBay list previously 
		                but they are not defined in ISO 3166. This country 
		                will remain on eBay country list for backward 
		                compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QN">
				<xs:annotation>
					<xs:documentation>
		                 NOTE: Jan Mayen was defined in eBay list previously 
		                 but they are not defined in ISO 3166. This country 
		                 will remain on eBay country list for backward 
		                 compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QO">
				<xs:annotation>
					<xs:documentation>
		                 NOTE: Jersey was defined in eBay list previously 
		                 but they are not defined in ISO 3166. This country 
		                 will remain on eBay country list for backward 
		                 compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QP">
				<xs:annotation>
					<xs:documentation>
		                 NOTE: Tahiti was defined in eBay list previously 
		                 but they are not defined in ISO 3166. This country 
		                 will remain on eBay country list for backward 
		                 compatibility.
		             </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CurrencyCodeList.xsd #####

--><xs:simpleType name="CurrencyCodeType">
		<xs:annotation>
			<xs:documentation>
CurrencyCodeType - Type declaration to be used by other schema.
This code list module defines the enumerated types of standard 3-letter 
ISO 4217 currency codes. Currency codes can be used as input or 
output (in/out); however, only certain currency codes are currently valid 
for use on eBay. The valid codes are documented below with the notation 
"(in/out)". Other codes in this list are for future use.
See the ISO site for an explanation of each code:
http://www.iso.ch/iso/en/catsupport/maralist.html#4217
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AFA"/>
			<xs:enumeration value="ALL"/>
			<xs:enumeration value="DZD"/>
			<xs:enumeration value="ADP"/>
			<xs:enumeration value="AOA"/>
			<xs:enumeration value="ARS"/>
			<xs:enumeration value="AMD"/>
			<xs:enumeration value="AWG"/>
			<xs:enumeration value="AZM"/>
			<xs:enumeration value="BSD"/>
			<xs:enumeration value="BHD"/>
			<xs:enumeration value="BDT"/>
			<xs:enumeration value="BBD"/>
			<xs:enumeration value="BYR"/>
			<xs:enumeration value="BZD"/>
			<xs:enumeration value="BMD"/>
			<xs:enumeration value="BTN"/>
			<xs:enumeration value="INR"/>
			<xs:enumeration value="BOV"/>
			<xs:enumeration value="BOB"/>
			<xs:enumeration value="BAM"/>
			<xs:enumeration value="BWP"/>
			<xs:enumeration value="BRL"/>
			<xs:enumeration value="BND"/>
			<xs:enumeration value="BGL"/>
			<xs:enumeration value="BGN"/>
			<xs:enumeration value="BIF"/>
			<xs:enumeration value="KHR"/>
			<xs:enumeration value="CAD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Canadian Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CVE"/>
			<xs:enumeration value="KYD"/>
			<xs:enumeration value="XAF"/>
			<xs:enumeration value="CLF"/>
			<xs:enumeration value="CLP"/>
			<xs:enumeration value="CNY"/>
			<xs:enumeration value="COP"/>
			<xs:enumeration value="KMF"/>
			<xs:enumeration value="CDF"/>
			<xs:enumeration value="CRC"/>
			<xs:enumeration value="HRK"/>
			<xs:enumeration value="CUP"/>
			<xs:enumeration value="CYP"/>
			<xs:enumeration value="CZK"/>
			<xs:enumeration value="DKK"/>
			<xs:enumeration value="DJF"/>
			<xs:enumeration value="DOP"/>
			<xs:enumeration value="TPE"/>
			<xs:enumeration value="ECV"/>
			<xs:enumeration value="ECS"/>
			<xs:enumeration value="EGP"/>
			<xs:enumeration value="SVC"/>
			<xs:enumeration value="ERN"/>
			<xs:enumeration value="EEK"/>
			<xs:enumeration value="ETB"/>
			<xs:enumeration value="FKP"/>
			<xs:enumeration value="FJD"/>
			<xs:enumeration value="GMD"/>
			<xs:enumeration value="GEL"/>
			<xs:enumeration value="GHC"/>
			<xs:enumeration value="GIP"/>
			<xs:enumeration value="GTQ"/>
			<xs:enumeration value="GNF"/>
			<xs:enumeration value="GWP"/>
			<xs:enumeration value="GYD"/>
			<xs:enumeration value="HTG"/>
			<xs:enumeration value="HNL"/>
			<xs:enumeration value="HKD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Hong Kong Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HUF"/>
			<xs:enumeration value="ISK"/>
			<xs:enumeration value="IDR"/>
			<xs:enumeration value="IRR"/>
			<xs:enumeration value="IQD"/>
			<xs:enumeration value="ILS"/>
			<xs:enumeration value="JMD"/>
			<xs:enumeration value="JPY"/>
			<xs:enumeration value="JOD"/>
			<xs:enumeration value="KZT"/>
			<xs:enumeration value="KES"/>
			<xs:enumeration value="AUD">
				<xs:annotation>
					<xs:documentation>
					   (in/out) Australian Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="KPW"/>
			<xs:enumeration value="KRW"/>
			<xs:enumeration value="KWD"/>
			<xs:enumeration value="KGS"/>
			<xs:enumeration value="LAK"/>
			<xs:enumeration value="LVL"/>
			<xs:enumeration value="LBP"/>
			<xs:enumeration value="LSL"/>
			<xs:enumeration value="LRD"/>
			<xs:enumeration value="LYD"/>
			<xs:enumeration value="CHF">
				<xs:annotation>
					<xs:documentation>
					   (in/out) Swiss Franc
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LTL"/>
			<xs:enumeration value="MOP"/>
			<xs:enumeration value="MKD"/>
			<xs:enumeration value="MGF"/>
			<xs:enumeration value="MWK"/>
			<xs:enumeration value="MYR"/>
			<xs:enumeration value="MVR"/>
			<xs:enumeration value="MTL"/>
			<xs:enumeration value="EUR">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Euro
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MRO"/>
			<xs:enumeration value="MUR"/>
			<xs:enumeration value="MXN"/>
			<xs:enumeration value="MXV"/>
			<xs:enumeration value="MDL"/>
			<xs:enumeration value="MNT"/>
			<xs:enumeration value="XCD"/>
			<xs:enumeration value="MZM"/>
			<xs:enumeration value="MMK"/>
			<xs:enumeration value="ZAR"/>
			<xs:enumeration value="NAD"/>
			<xs:enumeration value="NPR"/>
			<xs:enumeration value="ANG"/>
			<xs:enumeration value="XPF"/>
			<xs:enumeration value="NZD"/>
			<xs:enumeration value="NIO"/>
			<xs:enumeration value="NGN"/>
			<xs:enumeration value="NOK"/>
			<xs:enumeration value="OMR"/>
			<xs:enumeration value="PKR"/>
			<xs:enumeration value="PAB"/>
			<xs:enumeration value="PGK"/>
			<xs:enumeration value="PYG"/>
			<xs:enumeration value="PEN"/>
			<xs:enumeration value="PHP"/>
			<xs:enumeration value="PLN"/>
			<xs:enumeration value="USD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) US Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="QAR"/>
			<xs:enumeration value="ROL"/>
			<xs:enumeration value="RUB"/>
			<xs:enumeration value="RUR"/>
			<xs:enumeration value="RWF"/>
			<xs:enumeration value="SHP"/>
			<xs:enumeration value="WST"/>
			<xs:enumeration value="STD"/>
			<xs:enumeration value="SAR"/>
			<xs:enumeration value="SCR"/>
			<xs:enumeration value="SLL"/>
			<xs:enumeration value="SGD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Singapore Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SKK"/>
			<xs:enumeration value="SIT"/>
			<xs:enumeration value="SBD"/>
			<xs:enumeration value="SOS"/>
			<xs:enumeration value="LKR"/>
			<xs:enumeration value="SDD"/>
			<xs:enumeration value="SRG"/>
			<xs:enumeration value="SZL"/>
			<xs:enumeration value="SEK"/>
			<xs:enumeration value="SYP"/>
			<xs:enumeration value="TWD">
				<xs:annotation>
					<xs:documentation>
                   (in/out) New Taiwan Dollar
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TJS"/>
			<xs:enumeration value="TZS"/>
			<xs:enumeration value="THB"/>
			<xs:enumeration value="XOF"/>
			<xs:enumeration value="TOP"/>
			<xs:enumeration value="TTD"/>
			<xs:enumeration value="TND"/>
			<xs:enumeration value="TRL"/>
			<xs:enumeration value="TMM"/>
			<xs:enumeration value="UGX"/>
			<xs:enumeration value="UAH"/>
			<xs:enumeration value="AED"/>
			<xs:enumeration value="GBP">
				<xs:annotation>
					<xs:documentation>
                   (in/out) Pound Sterling
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USS"/>
			<xs:enumeration value="USN"/>
			<xs:enumeration value="UYU"/>
			<xs:enumeration value="UZS"/>
			<xs:enumeration value="VUV"/>
			<xs:enumeration value="VEB"/>
			<xs:enumeration value="VND"/>
			<xs:enumeration value="MAD"/>
			<xs:enumeration value="YER"/>
			<xs:enumeration value="YUM"/>
			<xs:enumeration value="ZMK"/>
			<xs:enumeration value="ZWD"/>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DateSpecifierCodeList.xsd #####

--><xs:simpleType name="DateSpecifierCodeType">
		<xs:annotation>
			<xs:documentation>
Type declaration to be used by other schema.
Specifies a subcomponent of a date. Useful in cases when it is helpful to allow 
separate text fields or drop-down lists to be rendered for each date subcomponent.
(For example, when calling GetProductSearchResults, you use date specifiers to 
indicate the date subcomponent that the attribute represents.)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="M">
				<xs:annotation>
					<xs:documentation>
            (in/out) Represents the month subcomponent of a date
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="D">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Represents the day subcomponent of a date
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Y">
				<xs:annotation>
					<xs:documentation> 
            (in/out) Represents the year subcomponent of a date
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DetailLevelCodeList.xsd #####

--><xs:simpleType name="DetailLevelCodeType">
		<xs:annotation>
			<xs:documentation>
DetailLevelCodeType - Type declaration to be used by other schema.
Specifies standard subsets of data to return for each result
within the set of results in the response payload.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ReturnAll">
				<xs:annotation>
					<xs:documentation>
						  (in) Return all available data
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemReturnDescription">
				<xs:annotation>
					<xs:documentation>
						  (in) Return Description, plus the 
						  ListingDesigner node if applicable 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemReturnAttributes">
				<xs:annotation>
					<xs:documentation>
						  (in) Return the Item Specifics (AttributeSet), if applicable
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DepositTypeCodeList.xsd #####

--><xs:simpleType name="DepositTypeCodeType">
		<xs:annotation>
			<xs:documentation>
DepositTypeCodeType - Type declaration to be used by other schema.
For vehicles listed through the US eBay Motors site, DepositType 
indicates how the buyer should pay the deposit amount. It is 
used in conjunction with a buyer payment method (BuyerPaymentMethodCodeType).
If the item listed is not a US eBay Motors item, the DepositType value 
is returned as "None".
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
					  (in/out) No deposit needed
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherMethod">
				<xs:annotation>
					<xs:documentation>
					  (in/out) Pay the deposit using one of the specified
					  PaymentMethods (BuyerPaymentMethodCodeType)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FastDeposit">
				<xs:annotation>
					<xs:documentation> 
					   (in/out) No longer in use (defaults to OtherMethod)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/EndReasonCodeList.xsd #####

--><xs:simpleType name="EndReasonCodeType">
		<xs:annotation>
			<xs:documentation>
          ReasonCodeType - Type declaration to be used by other schema.
          Specifies the Seller's reason for ending the listing early. This is
          required if the seller ended the listing early and the Item did not
          successfully sell.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="LostOrBroken">
				<xs:annotation>
					<xs:documentation>
                (in) The item was lost or broken.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotAvailable">
				<xs:annotation>
					<xs:documentation>
                (in) The item is no longer available for sale.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Incorrect">
				<xs:annotation>
					<xs:documentation>
                (in) The Minimum Bid or Reserve Price is incorrect.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OtherListingError">
				<xs:annotation>
					<xs:documentation>
                (in) The listing contained an error (other than Minimum Bid or Reserve
                Price).
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/EscrowCodeList.xsd #####

--><xs:simpleType name="EscrowCodeType">
		<xs:annotation>
			<xs:documentation>
EscrowCodeType - Type declaration to be used by other schema. Indicates whether
escrow is used for a liting and, if so, who pays for it: the buyer or the seller.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ByBuyer">
				<xs:annotation>
					<xs:documentation>
						    (in/out) By Buyer
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BySeller">
				<xs:annotation>
					<xs:documentation>
						   (in/out) By Seller
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						   (in/out) None
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ExternalProductCodeList.xsd #####

--><xs:simpleType name="ExternalProductCodeType">
		<xs:annotation>
			<xs:documentation>
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ISBN">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPC">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ProductID">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/FeedbackRatingStarCodeList.xsd #####

--><xs:simpleType name="FeedbackRatingStarCodeType">
		<xs:annotation>
			<xs:documentation>
FeedbackRatingStarCodeType - Type declaration to be used by other schema. 
The color of a feedback score star visually denotes the range in which
the member's summary feedback score falls. 
The score is the net positive feedback minus the net negative feedback 
left for the member.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						(out) No graphic displayed, score=0-9
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Yellow">
				<xs:annotation>
					<xs:documentation>
						(out) Yellow Star, score=10-49  
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Turquoise">
				<xs:annotation>
					<xs:documentation>
						(out) Turquoise Star, score=100-499
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Purple">
				<xs:annotation>
					<xs:documentation>
						(out) Purple Star, score=500-999
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Red">
				<xs:annotation>
					<xs:documentation>
						(out) Red Star, score=1,000-4,999
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Green">
				<xs:annotation>
					<xs:documentation>
						(out) Green Star, score=5,000-9,999
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="YellowShooting">
				<xs:annotation>
					<xs:documentation>
						(out) Yellow Shooting Star, score=10,000-24,999
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TurquoiseShooting">
				<xs:annotation>
					<xs:documentation>
						(out) Turquoise Shooting Star, score=25,000-49,999
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PurpleShooting">
				<xs:annotation>
					<xs:documentation>
						(out) Purple Shooting Star, score=50,000-99,999
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RedShooting">
				<xs:annotation>
					<xs:documentation>
						(out) Red Shooting Star, score=100,000 and above
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Blue">
				<xs:annotation>
					<xs:documentation>
						(out) Blue Star, score=50-99
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/GalleryTypeCodeList.xsd #####

--><xs:simpleType name="GalleryTypeCodeType">
		<xs:annotation>
			<xs:documentation>
GalleryTypeCodeType - Type declaration to be used by other schema.
Indicates whether the item is listed in the gallery and, if so
whether it is also featured in the gallery.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Item is listed and featured in the gallery
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Featured">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Item is listed and featured in the gallery
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gallery">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Item is listed in the gallery
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/GeneralPaymentMethodCodeList.xsd #####

--><xs:simpleType name="GeneralPaymentMethodCodeType">
		<xs:annotation>
			<xs:documentation>
GeneralPaymentMethodCodeType - Type declaration to be used 
by other schema. This code identifies the general types of payment means, 
e.g., used by payment service provider applications.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>
						Custom Code
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Echeck">
				<xs:annotation>
					<xs:documentation>
						Electronic check
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ACH">
				<xs:annotation>
					<xs:documentation> ACH.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Creditcard">
				<xs:annotation>
					<xs:documentation>
						Credit-card
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalBalance">
				<xs:annotation>
					<xs:documentation>
						Pay balance
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/GiftServicesCodeList.xsd #####

--><xs:simpleType name="GiftServicesCodeType">
		<xs:annotation>
			<xs:documentation>
GiftServicesCodeType - Type declaration to be used by other schema.
Each code identifies an optional service that the seller is offering if the buyer
chooses to purchase the item as a gift. 
Not applicable for eBay Store Inventory listings. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="GiftExpressShipping">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller is offering to ship the item via 
						an express shipping method as explained in the item description 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GiftShipToRecipient">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller is offering to ship to the gift recipient 
						(instead of to the buyer) after payment clears
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GiftWrap">
				<xs:annotation>
					<xs:documentation>
						(in/out) The seller is offering to wrap the item (and 
						optionally include a card) as explained in the item 
						description
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/HitCounterCodeList.xsd #####

--><xs:simpleType name="HitCounterCodeType">
		<xs:annotation>
			<xs:documentation>
HitCounterCodeType - Type declaration to be used by other schema.
Indicates whether a hit counter is used for the item's listing page
and, if so, what type.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NoHitCounter">
				<xs:annotation>
					<xs:documentation>(in/out) No hit counter</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HonestyStyle">
				<xs:annotation>
					<xs:documentation>
					   (in/out) Honesty Style Hit Counter
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GreenLED">
				<xs:annotation>
					<xs:documentation> 
					   (in/out) Green LED counter																	</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Hidden">
				<xs:annotation>
					<xs:documentation>
					     (in/out) Hidden counter (US only)
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemSortTypeCodeList.xsd #####

--><xs:simpleType name="ItemSortTypeCodeType">
		<xs:annotation>
			<xs:documentation>
ItemSortTypeCodeType- Type declaration to be used by other schema.
Indicates fields and direction (ascending/descending) on which to sort returned item information.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ItemID">
				<xs:annotation>
					<xs:documentation>
						   (in) Sort by Item ID (ascending)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Price">
				<xs:annotation>
					<xs:documentation>
						   (in) Sort by price (ascending)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Title">
				<xs:annotation>
					<xs:documentation>
						   (in) Sort by item title (ascending)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BidCount">
				<xs:annotation>
					<xs:documentation>
						   (in) Sort by number of bids on the item (ascending)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EndTime">
				<xs:annotation>
					<xs:documentation>
						   (in) Sort by listing end time (ascending)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemLocationCodeList.xsd #####

--><xs:simpleType name="ItemLocationCodeType">
		<xs:annotation>
			<xs:documentation>
			  Use with Country Code  argument in GetSearchResulrs.
			  available values are:
			    ItemAvailableIn = Items available to the specified country.
			    ItemLocatedIn = Items located in the specified country.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ItemAvailableIn">
				<xs:annotation>
					<xs:documentation>
					   TODO
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemLocatedIn">
				<xs:annotation>
					<xs:documentation> 
					    	TODO		
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/InsuranceOptionCodeList.xsd #####

--><xs:simpleType name="InsuranceOptionCodeType">
		<xs:annotation>
			<xs:documentation>
InsuranceOptionCodeType - Type declaration to be used by other schema.
Indicates whether shipping insurance is offered for the item and, if so,
whether it is optional or required.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Optional">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Insurance optional
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Required">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Insurance required 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NotOffered">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Insurance not offered
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IncludedInShippingHandling">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Insurance included in shipping and handling costs
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemTypeFilterCodeList.xsd #####

--><xs:simpleType name="ItemTypeFilterCodeType">
		<xs:annotation>
			<xs:documentation>
			   ItemTypeFilterCodeType - Type declaration to be used by other schema.
			   This code identifies the ItemTypeFilters (e.g., for GetSearchResults 
			   requests) used to filter items returned by the type of listing. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AuctionItemsOnly">
				<xs:annotation>
					<xs:documentation>
					    Auction items only.
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPricedItem">
				<xs:annotation>
					<xs:documentation> 
					    	Fixed price items (both Fixed Price and Buy It Now).					
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AllItems">
				<xs:annotation>
					<xs:documentation> 
					      All items .						
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					   (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ListingDurationCodeList.xsd #####

--><xs:simpleType name="ListingDurationCodeType">
		<xs:annotation>
			<xs:documentation>
ListingDurationCodeType - Type declaration to be used by other schema.
Each code specifies a number of days that a listing can be active 
(i.e., available for bidding/buying). The validity of a code depends on the listing type.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Days_1">
				<xs:annotation>
					<xs:documentation>
						    (in/out) 1 Day - A seller must have a positive feedback rating of 10 or more or must 
						    be ID Verified to use the 1-day listing duration on the US site.
						    Applicable for Chinese and Dutch auction formats
						    (including Real Estate) and Personal Offer (Second Chance Offer)
						    
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_3">
				<xs:annotation>
					<xs:documentation>
						    (in/out) 3 Days - Applicable for Chinese, Dutch, and Live auction formats
						    (including Real Estate); Personal Offer (Second Chance Offer); and 
						    basic Fixed Price format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_5">
				<xs:annotation>
					<xs:documentation>
						   (in/out) 5 Days - Applicable for Chinese, Dutch, and Live auction formats
						    (including Real Estate); Personal Offer (Second Chance Offer); and 
						    basic Fixed Price format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_7">
				<xs:annotation>
					<xs:documentation>
						  (in/out) 7 Days - Applicable for Chinese, Dutch, and Live auction formats
						    (including Real Estate); Personal Offer (Second Chance Offer); and 
						    basic Fixed Price format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_10">
				<xs:annotation>
					<xs:documentation>
						  (in/out) 10 Days - Subject to an additional listing upgrade fee.
						  Applicable for Chinese, Dutch, and Live auction formats
						  (including Real Estate) and basic Fixed Price format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_30">
				<xs:annotation>
					<xs:documentation>
						    (in/out) 30 Days - Applicable for Real Estate Ad format 
						    and Store Inventory format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_60">
				<xs:annotation>
					<xs:documentation>
						    (in/out) 60 Days - Applicable for Store Inventory format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_90">
				<xs:annotation>
					<xs:documentation>
						    (in/out) 90 Days - Applicable for Real Estate Ad format 
						    and Store Inventory format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_120">
				<xs:annotation>
					<xs:documentation>
						    (in/out) 120 Days - Applicable for Store Inventory format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GTC">
				<xs:annotation>
					<xs:documentation>
						    (in/out) GTC  - Relist automatically every 30 days until all the items 
						    sell or the seller ends the listing. Applicable for Store Inventory format
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
				
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						    (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ListingTypeCodeList.xsd #####

--><xs:simpleType name="ListingTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			     ListingTypeCodeType - Type declaration to be used 
			     by other schema. This includes codes indicating the
			     type of auction for the listed item.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
						    (out) Unknown auction type
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Chinese">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Chinese auction (single item, competitive bidding,
						   automatically listed in the seller's Store if the seller is
						   a Store owner)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Dutch">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Dutch auction (multiple items, competitive bidding,
						   automatically listed in the seller's Store if the seller is
						   a Store owner)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Live">
				<xs:annotation>
					<xs:documentation>
						   (out) Live Auctions-type auction (live, on-site auctions that
						   include non-eBay bidders)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AdType">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Ad type auction (real estate advertisement listings to
						   solicit inquiries, no bidding or purchases)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoresFixedPrice">
				<xs:annotation>
					<xs:documentation>
						   (in/out) eBay Stores Inventory format (one or multiple items
						   sold at a fixed price, no bidding for purchase, listed in the
						   seller's Store)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PersonalOffer">
				<xs:annotation>
					<xs:documentation>
						   (out) Personal Offer auction (special second chance offer listing
						   available only to the recipient the seller chooses to extend the
						   offer to)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FixedPriceItem">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Fixed Price format (one or multiple items sold at a
						   fixed price, no bidding for purchase, not listed in an eBay Store)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ListingEnhancementsCodeList.xsd #####

--><xs:simpleType name="ListingEnhancementsCodeType">
		<xs:annotation>
			<xs:documentation>
ListingEnhancementsCodeType - Type declaration to be used by other schema.
Indicates optional featuring properties of an item. Featuring properties
make a listing stand out in a search or listing page, or let the item be featured
on the eBay home page.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
		<xs:enumeration value="Border">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Indicates whether an item is displayed with a border 
						    that goes around the item (e.g., for category-based search 
						    result page or store search that brings up multiple items) 
						    to differentiate it from other items in the list
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BoldTitle">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Listing's title appears in bold in lists
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Featured">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Indicates whether it is a featured item (Featured Plus! on the eBay site) 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		
			<xs:enumeration value="Highlight">
				<xs:annotation>
					<xs:documentation>
						    (jn/out) Listing is highlighted in a different color in lists 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="HomePageFeatured">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Listing is featured on the eBay home page
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:annotation>
				<xs:documentation>eBay Listing Enhancements Codes</xs:documentation>
			</xs:annotation>
	<xs:annotation>
				<xs:documentation>Code List Agency - eBay, Inc.</xs:documentation>
			</xs:annotation>
	<xs:annotation>
				<xs:documentation>Code List Version - 1.0</xs:documentation>
			</xs:annotation>
<!--  

##### from file eBLBaseComponents/MerchandizingPrefCodeList.xsd #####

--><xs:simpleType name="MerchandizingPrefCodeType">
		<xs:annotation>
			<xs:documentation>
MerchandizingPrefCodeType - Type declaration to be used by other schema.
Indicates whether the seller has opted to participate in item cross-promotion
through the Merchandising Manager feature. This option is set on the user's My
eBay page and determines whether the seller's other items are cross-promoted
with items from the seller that are listed or sold.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="OptIn">
				<xs:annotation>
					<xs:documentation>
						(in/out) Seller allows item cross-promotion
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="OptOut">
				<xs:annotation>
					<xs:documentation>
						(in/out) Seller does not allow item cross-promotion
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ModifyCodeList.xsd #####

--><xs:simpleType name="ModifyCodeType">
		<xs:annotation>
			<xs:documentation>
ModifyCodeType - Type declaration to be used by other schema.
This code identifies the types of modifications you can make to an object.
For example, you would use this when you want to change or remove fields when 
you relist an item.  
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Dropped">
				<xs:annotation>
					<xs:documentation>(in) Indicates that the specified field should be removed </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Modify">
				<xs:annotation>
					<xs:documentation>(in) Indicates that the specified field should be modified </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PaymentStatusCodeList.xsd #####

--><xs:simpleType name="PaymentStatusCodeType">
		<xs:annotation>
			<xs:documentation>
PaymentStatusCodeType - Type declaration to be used by other schema.
Indicates the success or failure of the buyer's online payment for a transaction.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NoPaymentFailure">
				<xs:annotation>
					<xs:documentation>
						    (out) No payment failure.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerECheckBounced">
				<xs:annotation>
					<xs:documentation>
						    (out) Buyer's eCheck bounced.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerCreditCardFailed">
				<xs:annotation>
					<xs:documentation>
						   (out) Buyer's credit card failed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerFailedPaymentReportedBySeller">
				<xs:annotation>
					<xs:documentation>
						  (out) Buyer failed payment as reported by seller.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalPaymentInProcess">
				<xs:annotation>
					<xs:documentation>
						  (out) Payment from buyer to seller is in PayPal process, 
                                                        but has not yet been completed.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PhotoDisplayCodeList.xsd #####

--><xs:simpleType name="PhotoDisplayCodeType">
		<xs:annotation>
			<xs:documentation>
PhotoDisplayCodeType - Type declaration to be used by other schema.
These are types of display for photos used for PhotoHosting slide show.
Applicable only if the item's images are hosted on eBay Picture Services
(EPS).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						      (in/out) No special eBay Picture Services features
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SlideShow">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Slideshow of multiple pictures
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SuperSize">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Super-size format picture
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PicturePack">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Picture Pack 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ProductUseCaseCodeList.xsd #####

--><xs:simpleType name="ProductUseCaseCodeType">
		<xs:annotation>
			<xs:documentation>
Specifies the context in which the product selling page is being called, 
which will imply certain validation rules. Use this code list to make sure 
you retrieve the appropriate version of product information and characteristic 
meta-data when you are listing an item with Pre-filled Item Information.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AddItem">
				<xs:annotation>
					<xs:documentation>
            (in) Use this code when calling GetProductSellingPages 
            before adding an item. This retrieves the latest product ID and the corresponding characteristic meta-data. 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ReviseItem">
				<xs:annotation>
					<xs:documentation>
            (in) Use this code when calling GetProductSellingPages 
            before revising an item that already contains product information. 
            If the product ID or data has changed, the original 
            product ID that you passed in and the data associated with that original version of the 
            product is returned. This is useful because the original Pre-filled Item Information 
            is used when you call ReviseItem.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RelistItem">
				<xs:annotation>
					<xs:documentation>
            (in) Use this code when calling GetProductSellingPages 
            before relisting an item that already contains product information. 
            This retrieves the latest product ID and the 
            corresponding characteristic meta-data (same data as AddItem). 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PromotionItemPriceTypeCodeList.xsd #####

--><xs:simpleType name="PromotionItemPriceTypeCodeType">
		<xs:annotation>
			<xs:documentation>
PromotionItemPriceTypeCodeType - Type declaration to be used by other schema.
Indicates the type of offer that can be made for a cross-promoted item. Note
that for a Chinese listing with a still-active Buy It Now option, either a
Bid (Auction) or a Buy It Now type offer may be made.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AuctionPrice">
				<xs:annotation>
					<xs:documentation>
						    (out) Bid offer in a competitive-bidding listing
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowPrice">
				<xs:annotation>
					<xs:documentation>
						  (out) Buy It Now offer in a fixed-price or Buy It Now listing
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AdFormat">
				<xs:annotation>
					<xs:documentation>
						  (out) This listing is an advertisement and there is no bidding. Contact the seller/agent to request additional information.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
              (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PromotionItemSelectionCodeList.xsd #####

--><xs:simpleType name="PromotionItemSelectionCodeType">
		<xs:annotation>
			<xs:documentation>
PromotionItemSelectionCodeType - Type declaration to be used by other schema.
Indicates how the cross-promoted item was selected for association with the
referring item. If the seller defined an item-to-item cross-promotion rule and
the item was selected because of that rule, then "Manual" is returned. If the
seller defined some other rule and the item was selected because of that rule
(or the seller defined no rules that could be applied), then "Automatic" is
returned.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Manual">
				<xs:annotation>
					<xs:documentation>
						    (out) Manual selection
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Automatic">
				<xs:annotation>
					<xs:documentation>
						  (out) Automatic selection
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
              (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PromotionMethodCodeList.xsd #####

--><xs:simpleType name="PromotionMethodCodeType">
		<xs:annotation>
			<xs:documentation>
PromotionMethodCodeType - Type declaration to be used by other schema.
Indicates the type of cross-promotion (cross-promotion method) used for
a cross-promotion rule. In an up-sell promotion, the seller presents
items to a potential buyer that are more than or better than the item on
which the buyer is considering for bidding or that the buyer has already
purchased. In a cross-sell promotion, the seller presents to the target
user items that the buyer is likely to find of interest. This is based on
an item or items that the user has already bought or has bid on.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="CrossSell">
				<xs:annotation>
					<xs:documentation>
                (in/out) Cross-sell (similar items that might be of interest to the buyer)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UpSell">
				<xs:annotation>
					<xs:documentation>
              (in/out) Up-sell (better or later model items the buyer might purchase)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
              (in/out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PromotionSchemeCodeList.xsd #####

--><xs:simpleType name="PromotionSchemeCodeType">
		<xs:annotation>
			<xs:documentation>
PromotionItemSelectionCodeType - Type declaration to be used by other schema.
Identifies the rule scheme used to define a cross-promotion rule.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ItemToItem">
				<xs:annotation>
					<xs:documentation>
                (in/out) Item-to-item promotion scheme (the seller specifies
                individual items, by their item IDs, that are to be displayed
                as cross-promotion items)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ItemToStoreCat">
				<xs:annotation>
					<xs:documentation>
              (in/out) Item-to-Store category scheme (the seller specifies a
              category in that seller's eBay Store from which items are
              drawn and displayed as cross-promotion items)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="StoreToStoreCat">
				<xs:annotation>
					<xs:documentation>
              (in/out) Store-category-to-Store-category scheme (the seller
              specifies a category in that seller's eBay Store as the referring
              category; and when any item from that category is displayed, the
              rule causes items from the promoted category to be displayed as
              cross-promotion items)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
              (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/PurchasePurposeTypeCodeList.xsd #####

--><xs:simpleType name="PurchasePurposeTypeCodeType">
		<xs:annotation>
			<xs:documentation>
PurchasePurposeTypeCodeType - Type declaration to be used by other 
schema. This code identifies the purpose of a purchase (e.g.,  
by a PayPal application).                
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Other">
				<xs:annotation>
					<xs:documentation>Custom Code</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyNowItem">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShoppingCart">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AuctionItem">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="GiftCertificates">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Subscription">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Donation">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayBilling">
				<xs:annotation>
					<xs:documentation/>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/RangeCodeList.xsd #####

--><xs:simpleType name="RangeCodeType">
		<xs:annotation>
			<xs:documentation>
Type declaration to be used by other schema.
Indicates that the data represents the high or low end in a range, 
such as a date range, price range, or width range. 
(For example, when calling GetProductSearchResults, you use range codes to 
indicate the role of an attribute in a range.)
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="High">
				<xs:annotation>
					<xs:documentation>
            High end of the range
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Low">
				<xs:annotation>
					<xs:documentation> 
            Low end of the range
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SearchFlagsCodeList.xsd #####

--><xs:simpleType name="SearchFlagsCodeType">
		<xs:annotation>
			<xs:documentation> SearchFlagsCodeType- Search flags for
GetSearchResults.  </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Charity">
				<xs:annotation>
					<xs:documentation> SearchFlagsCodeType- Search flags
for GetSearchResults.  </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SearchInDescription">
				<xs:annotation>
					<xs:documentation> SearchFlagsCodeType- Search flags
for GetSearchResults.  </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PayPalBuyerPaymentOption">
				<xs:annotation>
					<xs:documentation> SearchFlagsCodeType- Search flags
for GetSearchResults.  </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> (out) Reserved for internal or future use.
</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SearchResultValuesCodeList.xsd #####

--><xs:simpleType name="SearchResultValuesCodeType">		<xs:annotation>
			<xs:documentation>
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Escrow">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="New">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CharityListing">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Picture">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gift">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SearchSortOrderCodeList.xsd #####

--><xs:simpleType name="SearchSortOrderCodeType">
		<xs:annotation>
			<xs:documentation>
				GetSearchResult Sort Order
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="SortByEndDate">
				<xs:annotation>
					<xs:documentation>
            				</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByStartDate">
				<xs:annotation>
					<xs:documentation>
            				</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByCurrentBid">
				<xs:annotation>
					<xs:documentation>
            					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByListingDate">
				<xs:annotation>
					<xs:documentation>
            					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByCurrentBidAsc">
				<xs:annotation>
					<xs:documentation>
            					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SortByCurrentBidDesc">
				<xs:annotation>
					<xs:documentation>
            					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SearchTypeCodeList.xsd #####

--><xs:simpleType name="SearchTypeCodeType">
		<xs:annotation>
			<xs:documentation>
			   SearchTypeCodeType - Type declaration to be used by other schema.
			   This code identifies the SearchTypes (e.g., for GetSearchResults requests)
			   used to restrict items returned to, selectively, only gallery items or gallery 
			   and non-gallery items.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="All">
				<xs:annotation>
					<xs:documentation>
					     Search for gallery and non-gallery items.
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gallery">
				<xs:annotation>
					<xs:documentation> 
					    	Search for gallery items only and display a preview (thumbnail) 
					    	image of gallery picture.				
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SecondChanceOfferDurationCodeList.xsd #####

--><xs:simpleType name="SecondChanceOfferDurationCodeType">
		<xs:annotation>
			<xs:documentation>
			     SecondChanceOfferDurationCodeType - Type declaration to be used by other schema.
			     Specifies the number of days the second chance offer is good for.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Days_1">
				<xs:annotation>
					<xs:documentation>
						    1 Day					
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_3">
				<xs:annotation>
					<xs:documentation>
						   3 Days
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_5">
				<xs:annotation>
					<xs:documentation>
						  5 Days
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_7">
				<xs:annotation>
					<xs:documentation>
						  7 Days
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SellerLevelCodeList.xsd #####

--><xs:simpleType name="SellerLevelCodeType">
		<xs:annotation>
			<xs:documentation>
SellerLevelCodeType - Type declaration to be used by other schema.
Indicates the user's eBay PowerSeller tier.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Bronze">
				<xs:annotation>
					<xs:documentation>
						(out) Bronze
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Silver">
				<xs:annotation>
					<xs:documentation>
						(out) Silver
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Gold">
				<xs:annotation>
					<xs:documentation>
						(out) Gold
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Platinum">
				<xs:annotation>
					<xs:documentation>
						(out) Platinum
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Titanium">
				<xs:annotation>
					<xs:documentation>
						(out) Titanium
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						(out) None
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SellerPaymentMethodCodeList.xsd #####

--><xs:simpleType name="SellerPaymentMethodCodeType">
		<xs:annotation>
			<xs:documentation>
SellerPaymentMethodCodeType - Type declaration to be used by other schema.
These are payment methods that sellers can use to pay eBay fees.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NothingOnFile">
				<xs:annotation>
					<xs:documentation>
						    Used for all other payment methods (e.g., payment via PayPal) which are not specifically listed in other columns.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCard">
				<xs:annotation>
					<xs:documentation>
						    Credit Card
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebit">
				<xs:annotation>
					<xs:documentation>
						    Direct Debit
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DirectDebitPendingSignatureMandate">
				<xs:annotation>
					<xs:documentation>
						   Direct Debit, pending signature mandate
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayDirectPay">
				<xs:annotation>
					<xs:documentation>
						   eBay Direct Pay
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SeverityCodeList.xsd #####

--><xs:simpleType name="SeverityCodeType">
		<xs:annotation>
			<xs:documentation>
SeverityCodeType - Type declaration to be used by other schema.
This code identifies the severity of an API error. A code indicates
whether there is an API-level error or warning that needs to be
communicated to the client.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Warning">
				<xs:annotation>
					<xs:documentation>
					   (out) Warning or informational error
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Error">
				<xs:annotation>
					<xs:documentation> 
					   (out) Application-level error										
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingOptionCodeList.xsd #####

--><xs:simpleType name="ShippingOptionCodeType">
		<xs:annotation>
			<xs:documentation>
ShippingOptionCodeType - Type declaration to be used by other schema.
These codes indicate where the seller is willing to ship the item. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="SiteOnly">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Seller will only ship to a buyer in the same
                country/region as the eBay site the item is listed on
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WorldWide">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Seller will ship to a buyer anywhere in the
               world
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SitePlusRegions">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Seller will ship to a buyer on the same eBay
               site or in one of the specified regions (ShippingRegionCodeType)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WillNotShip">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Seller will not (or cannot) ship the item to any
               buyer at any location
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingPackageCodeList.xsd #####

--><xs:simpleType name="ShippingPackageCodeType">
		<xs:annotation>
			<xs:documentation>
ShippingPackageCodeType - Type declaration to be used by other schema.
Part of the specifications for calculated shipping, these codes describe
the package that will be used to ship the item(s). Not all package types
are supported by a specific shipping service (ShippingServiceCodeType).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="None">
				<xs:annotation>
					<xs:documentation>
						    (in/out) None
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Letter">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Letter
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LargeEnvelope">
				<xs:annotation>
					<xs:documentation>
						   (in/out) LargeEnvelope
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSLargePack">
				<xs:annotation>
					<xs:documentation>
						   (in/out) USPS Large Package/Oversize 1
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VeryLargePack">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Very Large Package/Oversize 2
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSLetter">
				<xs:annotation>
					<xs:documentation>
						   (in/out) UPS Letter
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSFlatRateEnvelope">
				<xs:annotation>
					<xs:documentation>
						   (in/out) USPS Flat Rate Envelope
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PackageThickEnvelope">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Package/thick envelope
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingRegionCodeList.xsd #####

--><xs:simpleType name="ShippingRegionCodeType">
		<xs:annotation>
			<xs:documentation>
ShippingRegion CodeType - Type declaration to be used by other schema.
Indicates the additional region(s) to which the seller will ship the item.
Only applicable if the seller specifies SitePlusRegions for the shipping
option (ShippingOptionCodeType).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Africa">
				<xs:annotation>
					<xs:documentation>
						(in/out) Africa
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Asia">
				<xs:annotation>
					<xs:documentation>
						(in/out) Asia
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Caribbean">
				<xs:annotation>
					<xs:documentation>
						(in/out) Caribbean
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Europe">
				<xs:annotation>
					<xs:documentation>
						(in/out) Europe
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LatinAmerica">
				<xs:annotation>
					<xs:documentation>
						(in/out) LatinAmerica
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MiddleEast">
				<xs:annotation>
					<xs:documentation>
						(in/out) MiddleEast
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NorthAmerica">
				<xs:annotation>
					<xs:documentation>
						(in/out) NorthAmerica
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Oceania">
				<xs:annotation>
					<xs:documentation>
						(in/out) Oceania (Pacific region other than Asia)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SouthAmerica">
				<xs:annotation>
					<xs:documentation>
						(in/out) SouthAmerica
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingServiceCodeList.xsd #####

--><xs:simpleType name="ShippingServiceCodeType">
		<xs:annotation>
			<xs:documentation>
ShippingServiceCodeType - Type declaration to be used by other schema.
Part of the specifications for calculated shipping, these codes indicate
the shipping service that would be used to ship the item(s).
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="UPSGround">
				<xs:annotation>
					<xs:documentation>
						    (in/out) UPS Ground
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPS3rdDay">
				<xs:annotation>
					<xs:documentation>
						   (in/out) UPS 3rd Day
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPS2ndDay">
				<xs:annotation>
					<xs:documentation>
						   (in/out) UPS 2nd Day
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSNextDay">
				<xs:annotation>
					<xs:documentation>
						   (in/out) UPS Next Day.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSPriority">
				<xs:annotation>
					<xs:documentation>
						   (in/out) USPS Priority.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSParcel">
				<xs:annotation>
					<xs:documentation>
						   (in/out) USPS Parcel.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSMedia">
				<xs:annotation>
					<xs:documentation>
						   (in/out) USPS Media.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSFirstClass">
				<xs:annotation>
					<xs:documentation>
						   (in/out) USPS First Class
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShippingMethodStandard">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShippingMethodExpress">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="USPSExpressMail">
				<xs:annotation>
					<xs:documentation>
						   (in/out) USPS Express Mail
				</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ShippingTermsCodeList.xsd #####

--><xs:simpleType name="ShippingTermsCodeType">
		<xs:annotation>
			<xs:documentation>
ShippingTermsCodeType - Type declaration to be used by other schema's.
Shipping terms codes indicate who pays for the shipping of an item, the
seller or the buyer.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="SellerPays">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Seller pays all shipping costs 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyerPays">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Buyer pays all shipping costs 
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SiteCodeList.xsd #####

--><xs:simpleType name="SiteCodeType">
		<xs:annotation>
			<xs:documentation>
SiteCodeType - Type declaration to be used by other schema.
Identifies eBay sites (by the country in which each resides) on
which a user is registered and on which items can be listed.   
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="US">
				<xs:annotation>
					<xs:documentation>
						(in/out) USA
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Canada">
				<xs:annotation>
					<xs:documentation>
						(in/out) Canada
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UK">
				<xs:annotation>
					<xs:documentation>
						(in/out) United Kingdom
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Australia">
				<xs:annotation>
					<xs:documentation>
						(in/out) Australia
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Austria">
				<xs:annotation>
					<xs:documentation>
						(in/out) Austria
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Belgium_French">
				<xs:annotation>
					<xs:documentation>
						(in/out) Belgium (French)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="France">
				<xs:annotation>
					<xs:documentation>
						(in/out) France
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Germany">
				<xs:annotation>
					<xs:documentation>
						(in/out) Germany
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Italy">
				<xs:annotation>
					<xs:documentation>
						(in/out) Italy
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Belgium_Dutch">
				<xs:annotation>
					<xs:documentation>
						(in/out) Belgium (Dutch)
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Netherlands">
				<xs:annotation>
					<xs:documentation>
						(in/out) Netherlands
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Spain">
				<xs:annotation>
					<xs:documentation>
						(in/out) Spain
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Switzerland">
				<xs:annotation>
					<xs:documentation>
						(in/out) Switzerland
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Taiwan">
				<xs:annotation>
					<xs:documentation>
						(in/out) Taiwan
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eBayMotors">
				<xs:annotation>
					<xs:documentation>
						(in/out) eBay Motors
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="HongKong">
				<xs:annotation>
					<xs:documentation>
						(out) Hong Kong
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>

			<xs:enumeration value="Singapore">
				<xs:annotation>
					<xs:documentation>
						(out) Singapore
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>


			
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SiteIDFilterCodeList.xsd #####

--><xs:simpleType name="SiteIDFilterCodeType">
		<xs:annotation>
			<xs:documentation>
			   SiteIDFilterCodeType - Type declaration to be used by other schema.
			   This code identifies the SiteIDFilters  to allow user to filter the category 
			   listings by SiteID. 
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ListedInCurrencyImplied">
				<xs:annotation>
					<xs:documentation>
					   Items listed in the currency implied by SiteID. 
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LocatedInCountryImplied">
				<xs:annotation>
					<xs:documentation> 
					   Items located in the country implied by SiteID. 						
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AvailableInCountryImplied">
				<xs:annotation>
					<xs:documentation>
					     Items available to the country implied by SiteID. 
			                  (For the US site, this implies listings from ALL English-language countries 
			                  that are availabe to the US.) 
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SiteImplied">
				<xs:annotation>
					<xs:documentation>
					    Items listed on the site implied by SiteID, regardless of listing currency. 
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BelgiumListing">
				<xs:annotation>
					<xs:documentation>
					     Items located in Belgium or listed on one of the two 
			                  Belgian sites.  
					 </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/SortOrderCodeList.xsd #####

--><xs:simpleType name="SortOrderCodeType">
		<xs:annotation>
			<xs:documentation>
Indicates the order in which the catalog search engine will sort the results 
if you pass a sort attribute (SortAttributeID) in catalog search requests. 
Applications cannot change the sort order of a sort attribute.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Ascending">
				<xs:annotation>
					<xs:documentation>
            The results will be sorted by the specified attribute in ascending order
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Descending">
				<xs:annotation>
					<xs:documentation>
            The results will be sorted by the specified attribute in descending order
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
            (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/StoreSearchCodeList.xsd #####

--><xs:simpleType name="StoreSearchCodeType">
		<xs:annotation>
			<xs:documentation>
			   StoreSearchCodeType - Type declaration to be used by other schema.
			   This code identifies the StoreSearch codes (e.g., for GetSearchResults requests).  
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="AllItemsInTheStore">
				<xs:annotation>
					<xs:documentation>
					    
				      </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AuctionItemsInTheStore">
				<xs:annotation>
					<xs:documentation> 
					    				
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowItemsInTheStore">
				<xs:annotation>
					<xs:documentation> 
					    				
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="BuyItNowItemsInAllStores">
				<xs:annotation>
					<xs:documentation> 
					    				
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/TradingRoleCodeList.xsd #####

--><xs:simpleType name="TradingRoleCodeType">
		<xs:annotation>
			<xs:documentation>
			     TradingRoleCodeType - Type declaration to be used by other schema.
			     These are the possible codes to specify the type of roles, e.g., buyer
			     or seller.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Buyer">
				<xs:annotation>
					<xs:documentation>
						    Buyer					
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Seller">
				<xs:annotation>
					<xs:documentation>
						   Seller
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/UnitCodeList.xsd #####

--><xs:simpleType name="UnitCodeType">
		<xs:annotation>
			<xs:documentation>
UnitCodeType - Type declaration to be used by other schema.
These codes describe the units of measure used to express
such properties as weight and size dimensions.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="kg">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Kilograms
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="lbs">
				<xs:annotation>
					<xs:documentation>
						    (in/out) Pounds
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="oz">
				<xs:annotation>
					<xs:documentation>
						   (in/out) Ounces						
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="cm">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Centimeters
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="inches">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Inches
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ft">
				<xs:annotation>
					<xs:documentation>
						  (in/out) Feet
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/UserStatusCodeList.xsd #####

--><xs:simpleType name="UserStatusCodeType">
		<xs:annotation>
			<xs:documentation>
UserStatusCodeType - Type declaration to be used by other schema.
These codes indicate the current state or status of a an eBay
user account.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Unknown">
				<xs:annotation>
					<xs:documentation>
						     (out) User properties have never been set; this value should
						     seldom, if ever, be returned and typically represents a
						     problem
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Suspended">
				<xs:annotation>
					<xs:documentation>
						    (out) User has been suspended from selling and buying, such as
						    for violations of eBay terms or agreement
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Confirmed">
				<xs:annotation>
					<xs:documentation>
						   (out) User has completed online registration and has properly
						   responded to confirmation email; most users should fall
						   in this category
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Unconfirmed">
				<xs:annotation>
					<xs:documentation>
						    (out) User has completed online registration, but has either
						    not responded to confirmation email or has not yet been
						    sent the confirmation email
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Ghost">
				<xs:annotation>
					<xs:documentation>
						    (out) Registered users of AuctionWeb (pre-eBay) who never
						    re-registered on eBay
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="InMaintenance">
				<xs:annotation>
					<xs:documentation>
						    (out) Temporary user record state indicating the record is in
						    the process of being changed by eBay; query user
						    information again to get new status
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Deleted">
				<xs:annotation>
					<xs:documentation>
						    (out) Records for the specified user have been deleted
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardVerify">
				<xs:annotation>
					<xs:documentation>
						    (out) User has completed registration and confirmation, but is
						    pending a verification of credit card information
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="AccountOnHold">
				<xs:annotation>
					<xs:documentation>
						    (out) User's account is on hold, such as for non-payment of
						    amounts due eBay; user cannot sell or buy items
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Merged">
				<xs:annotation>
					<xs:documentation>
						      (out) User record has been merged with another account record
						      for the same user
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RegistrationCodeMailOut">
				<xs:annotation>
					<xs:documentation>
						    (out) User has completed online registration and has been sent
						    the confirmation email, but has not yet responded to the
						    confirmation email
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TermPending">
				<xs:annotation>
					<xs:documentation>
						      (out) User has been scheduled for account closure (typically
						      when a user has requested to have their account closed)
						      A user in this state should not be considered an active
						      user
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnconfirmedHalfOptIn">
				<xs:annotation>
					<xs:documentation>
						      (out) User has completed the registration for Half.com and opted
						      to automatically also be registered with eBay, but the
						      registration confirmation is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardVerifyHalfOptIn">
				<xs:annotation>
					<xs:documentation>
						      (out) User has completed the registration for Half.com and opted
						      to automatically also be registered with eBay, but the
						      verification of credit card information is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnconfirmedPassport">
				<xs:annotation>
					<xs:documentation>
						      (out) Passport User; user has completed the registration process,
						      but the registration confirmation is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CreditCardVerifyPassport">
				<xs:annotation>
					<xs:documentation>
						     (out) Passport User Requiring Credit Card Verification; user has
						     completed the registration process with credit card verification,
						     but the registration confirmation is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UnconfirmedExpress">
				<xs:annotation>
					<xs:documentation>
						     (out) Half.com User; user has completed the registration for Half.com
						     and opted to automatically also be registered with eBay, but the
						     registration confirmation is still pending
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						  (out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/VATStatusCodeList.xsd #####

--><xs:simpleType name="VATStatusCodeType">
		<xs:annotation>
			<xs:documentation>
VATStatusCodeType - Type declaration to be used by other schema.
Indicates whether the user is subject to VAT. Users in the EU who register 
with eBay as VAT-exempt are not subject to VAT.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="NoVATTax">
				<xs:annotation>
					<xs:documentation>
						(out) VAT is not applicable
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATTax">
				<xs:annotation>
					<xs:documentation>
						(out) EU user, but not registered as VAT-exempt
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="VATExempt">
				<xs:annotation>
					<xs:documentation>
						(out) EU user and registered as VAT-exempt
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation>
						(out) Reserved for internal or future use
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/DisplayPayNowButtonCodeList.xsd #####

--><xs:simpleType name="DisplayPayNowButtonCodeType">
		<xs:annotation>
			<xs:documentation>Ways to Display PayNow Button</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ShowPayNowButtonForAllPaymentMethods">
				<xs:annotation>
					<xs:documentation> Show PayNow Button For All Payment Methods </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowPayNowButtonForPayPalOnly">
				<xs:annotation>
					<xs:documentation> Show PayNow Button For PayPal Only</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/UPSRateOptionCodeList.xsd #####

--><xs:simpleType name="UPSRateOptionCodeType">
		<xs:annotation>
			<xs:documentation>UPS Rate Options</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="UPSDailyRates">
				<xs:annotation>
					<xs:documentation>UPS Daily Rates</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPSOnDemandRates">
				<xs:annotation>
					<xs:documentation>UPS On-Demand Rates</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CombinedPaymentPeriodCodeList.xsd #####

--><xs:simpleType name="CombinedPaymentPeriodCodeType">
		<xs:annotation>
			<xs:documentation>Combined Purchase Days</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="Days_3">
				<xs:annotation>
					<xs:documentation>(in/out) 3 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_5">
				<xs:annotation>
					<xs:documentation>(in/out) 5 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_7">
				<xs:annotation>
					<xs:documentation>(in/out) 7 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_14">
				<xs:annotation>
					<xs:documentation>(in/out) 14 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="Days_30">
				<xs:annotation>
					<xs:documentation>(in/out) 30 Days</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CombinedPaymentOptionCodeList.xsd #####

--><xs:simpleType name="CombinedPaymentOptionCodeType">
	<xs:annotation>
		<xs:documentation>Combined Purchase Options</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:token">
		<xs:enumeration value="NoCombinedPayment">
			<xs:annotation>
				<xs:documentation>No Combined Purchase</xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="DiscountSpecified">
			<xs:annotation>
				<xs:documentation> Yes Specify Discount Now </xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="SpecifyDiscountLater">
			<xs:annotation>
				<xs:documentation> Yes Specify Discount Later </xs:documentation>
			</xs:annotation>
		</xs:enumeration>
		<xs:enumeration value="CustomCode">
			<xs:annotation>
				<xs:documentation> Reserved for internal or future use </xs:documentation>
			</xs:annotation>
		</xs:enumeration>
	</xs:restriction>
</xs:simpleType>
<!--  

##### from file eBLBaseComponents/FlatShippingRateOptionCodeList.xsd #####

--><xs:simpleType name="FlatShippingRateOptionCodeType">
		<xs:annotation>
			<xs:documentation>Flat Shipping Rate Options</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ChargeAmountForEachAdditionalItem">
				<xs:annotation>
					<xs:documentation>
						Charge Highest Shipping Cost For The 1st Item And X Amount For Each 
						Additional Item
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DeductAmountFromEachAdditionalItem">
				<xs:annotation>
					<xs:documentation>
						Charge Highest Shipping Cost For The 1st Item And Deduct X Amount From The 
						Shipping Cost Of Each Additional Item
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShipAdditionalItemsFree">
				<xs:annotation>
					<xs:documentation>
						Charge Highest Shipping Cost For The 1st Item And Ship Each Additional Item Free
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CalculatedShippingChargeOptionCodeList.xsd #####

--><xs:simpleType name="CalculatedShippingChargeOptionCodeType">
		<xs:annotation>
			<xs:documentation>Calculated Shipping Charge Options</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ChargeEachItem">
				<xs:annotation>
					<xs:documentation>
						Charge the actual shipping cost and my full packaging and handling 
						fee for each item
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ChargeEntireOrder">
				<xs:annotation>
					<xs:documentation>
						Charge the actual shipping cost and a packaging and handling fee of 
						X amount for the entire order
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/CalculatedShippingRateOptionCodeList.xsd #####

--><xs:simpleType name="CalculatedShippingRateOptionCodeType">
		<xs:annotation>
			<xs:documentation>Calculated Shipping Rate Options</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="CombinedItemWeight">
				<xs:annotation>
					<xs:documentation>Calculate the Actual Shipping Rate from Combined Item Weight</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="IndividualItemWeight">
				<xs:annotation>
					<xs:documentation>Calculate the Actual Shipping Rate from Individual Item Weight</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemFormatSortFilterCodeList.xsd #####

--><xs:simpleType name="ItemFormatSortFilterCodeType">
		<xs:annotation>
			<xs:documentation>Display options based on selling format</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ShowAnyItems">
				<xs:annotation>
					<xs:documentation>Show any items in no particular order</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowItemsWithBINFirst">
				<xs:annotation>
					<xs:documentation> Show Items With A Buy It Now Price First</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowOnlyItemsWithBIN">
				<xs:annotation>
					<xs:documentation> Show Only Items With A Buy It Now Price</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowOnlyStoreItems">
				<xs:annotation>
					<xs:documentation> Show Only Store Inventory Items</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/GallerySortFilterCodeList.xsd #####

--><xs:simpleType name="GallerySortFilterCodeType">
		<xs:annotation>
			<xs:documentation>Display options for gallery images</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="ShowAnyItems">
				<xs:annotation>
					<xs:documentation>Show Any Items in no particular order</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowItemsWithGalleryImagesFirst">
				<xs:annotation>
					<xs:documentation> Show Items With Gallery Images First</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ShowOnlyItemsWithGalleryImages">
				<xs:annotation>
					<xs:documentation> Show Only Items With Gallery Images</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/ItemSortFilterCodeList.xsd #####

--><xs:simpleType name="ItemSortFilterCodeType">
		<xs:annotation>
			<xs:documentation>different ways to sort items by</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="EndingLast">
				<xs:annotation>
					<xs:documentation>sort items by ending time, ending last first</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="EndingSoonest">
				<xs:annotation>
					<xs:documentation>sort items by ending time, ending soonest first</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="HighestPrice">
				<xs:annotation>
					<xs:documentation>sort items by price, highest price first</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="LowestPrice">
				<xs:annotation>
					<xs:documentation> sort items by price, lowest price first</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="NewlyListed">
				<xs:annotation>
					<xs:documentation>sort items by listing time, newly listed first</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
<!--  

##### from file eBLBaseComponents/FlatRateInsuranceRangeCodeList.xsd #####

--><xs:simpleType name="FlatRateInsuranceRangeCodeType">
		<xs:annotation>
			<xs:documentation>Flat Rate Insurance Ranges</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="FlatRateInsuranceRange1">
				<xs:annotation>
					<xs:documentation>Range from 0.01 to 9.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange2">
				<xs:annotation>
					<xs:documentation>Range from 10.00 to 49.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange3">
				<xs:annotation>
					<xs:documentation>Range from 50.00 to 99.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange4">
				<xs:annotation>
					<xs:documentation>Range from 100.00 to 199.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange5">
				<xs:annotation>
					<xs:documentation>Range from 200.00 to 299.99</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="FlatRateInsuranceRange6">
				<xs:annotation>
					<xs:documentation>Range from 300.00 to more</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CustomCode">
				<xs:annotation>
					<xs:documentation> Reserved for internal or future use </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>


    </xs:schema>
	
	</wsdl:types>
	<wsdl:message name="RequesterCredentials">
		<wsdl:part name="RequesterCredentials" element="ns:RequesterCredentials"/>
	</wsdl:message>
	
	<wsdl:message name="GetItemResponse">
		<wsdl:part name="GetItemResponse" element="ns:GetItemResponse"/>
	</wsdl:message>
	<wsdl:message name="GetItemRequest">
		<wsdl:part name="GetItemRequest" element="ns:GetItemRequest"/>
	</wsdl:message>
	<wsdl:message name="AddItemResponse">
		<wsdl:part name="AddItemResponse" element="ns:AddItemResponse"/>
	</wsdl:message>
	<wsdl:message name="AddItemRequest">
		<wsdl:part name="AddItemRequest" element="ns:AddItemRequest"/>
	</wsdl:message>
	<wsdl:message name="VerifyAddItemResponse">
		<wsdl:part name="VerifyAddItemResponse" element="ns:VerifyAddItemResponse"/>
	</wsdl:message>
	<wsdl:message name="VerifyAddItemRequest">
		<wsdl:part name="VerifyAddItemRequest" element="ns:VerifyAddItemRequest"/>
	</wsdl:message>
	<wsdl:message name="GetUserResponse">
		<wsdl:part name="GetUserResponse" element="ns:GetUserResponse"/>
	</wsdl:message>
	<wsdl:message name="GetUserRequest">
		<wsdl:part name="GetUserRequest" element="ns:GetUserRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSellerEventsResponse">
		<wsdl:part name="GetSellerEventsResponse" element="ns:GetSellerEventsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSellerEventsRequest">
		<wsdl:part name="GetSellerEventsRequest" element="ns:GetSellerEventsRequest"/>
	</wsdl:message>
	<wsdl:message name="RelistItemResponse">
		<wsdl:part name="RelistItemResponse" element="ns:RelistItemResponse"/>
	</wsdl:message>
	<wsdl:message name="RelistItemRequest">
		<wsdl:part name="RelistItemRequest" element="ns:RelistItemRequest"/>
	</wsdl:message>
	<wsdl:message name="ReviseItemResponse">
		<wsdl:part name="ReviseItemResponse" element="ns:ReviseItemResponse"/>
	</wsdl:message>
	<wsdl:message name="ReviseItemRequest">
		<wsdl:part name="ReviseItemRequest" element="ns:ReviseItemRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSellerListResponse">
		<wsdl:part name="GetSellerListResponse" element="ns:GetSellerListResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSellerListRequest">
		<wsdl:part name="GetSellerListRequest" element="ns:GetSellerListRequest"/>
	</wsdl:message>
	<wsdl:message name="GetItemTransactionsResponse">
		<wsdl:part name="GetItemTransactionsResponse" element="ns:GetItemTransactionsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetItemTransactionsRequest">
		<wsdl:part name="GetItemTransactionsRequest" element="ns:GetItemTransactionsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSellerTransactionsResponse">
		<wsdl:part name="GetSellerTransactionsResponse" element="ns:GetSellerTransactionsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSellerTransactionsRequest">
		<wsdl:part name="GetSellerTransactionsRequest" element="ns:GetSellerTransactionsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetCategoriesResponse">
		<wsdl:part name="GetCategoriesResponse" element="ns:GetCategoriesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetCategoriesRequest">
		<wsdl:part name="GetCategoriesRequest" element="ns:GetCategoriesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetAttributesCSResponse">
		<wsdl:part name="GetAttributesCSResponse" element="ns:GetAttributesCSResponse"/>
	</wsdl:message>
	<wsdl:message name="GetAttributesCSRequest">
		<wsdl:part name="GetAttributesCSRequest" element="ns:GetAttributesCSRequest"/>
	</wsdl:message>
	<wsdl:message name="GetAttributesXSLResponse">
		<wsdl:part name="GetAttributesXSLResponse" element="ns:GetAttributesXSLResponse"/>
	</wsdl:message>
	<wsdl:message name="GetAttributesXSLRequest">
		<wsdl:part name="GetAttributesXSLRequest" element="ns:GetAttributesXSLRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductFinderResponse">
		<wsdl:part name="GetProductFinderResponse" element="ns:GetProductFinderResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductFinderRequest">
		<wsdl:part name="GetProductFinderRequest" element="ns:GetProductFinderRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductFinderXSLResponse">
		<wsdl:part name="GetProductFinderXSLResponse" element="ns:GetProductFinderXSLResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductFinderXSLRequest">
		<wsdl:part name="GetProductFinderXSLRequest" element="ns:GetProductFinderXSLRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductSellingPagesResponse">
		<wsdl:part name="GetProductSellingPagesResponse" element="ns:GetProductSellingPagesResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductSellingPagesRequest">
		<wsdl:part name="GetProductSellingPagesRequest" element="ns:GetProductSellingPagesRequest"/>
	</wsdl:message>
	<wsdl:message name="GetAccountResponse">
		<wsdl:part name="GetAccountResponse" element="ns:GetAccountResponse"/>
	</wsdl:message>
	<wsdl:message name="GetAccountRequest">
		<wsdl:part name="GetAccountRequest" element="ns:GetAccountRequest"/>
	</wsdl:message>
	<wsdl:message name="AddToItemDescriptionResponse">
		<wsdl:part name="AddToItemDescriptionResponse" element="ns:AddToItemDescriptionResponse"/>
	</wsdl:message>
	<wsdl:message name="AddToItemDescriptionRequest">
		<wsdl:part name="AddToItemDescriptionRequest" element="ns:AddToItemDescriptionRequest"/>
	</wsdl:message>
	<wsdl:message name="PlaceOfferResponse">
		<wsdl:part name="PlaceOfferResponse" element="ns:PlaceOfferResponse"/>
	</wsdl:message>
	<wsdl:message name="PlaceOfferRequest">
		<wsdl:part name="PlaceOfferRequest" element="ns:PlaceOfferRequest"/>
	</wsdl:message>
	<wsdl:message name="EndItemResponse">
		<wsdl:part name="EndItemResponse" element="ns:EndItemResponse"/>
	</wsdl:message>
	<wsdl:message name="EndItemRequest">
		<wsdl:part name="EndItemRequest" element="ns:EndItemRequest"/>
	</wsdl:message>
	<wsdl:message name="GetHighBiddersResponse">
		<wsdl:part name="GetHighBiddersResponse" element="ns:GetHighBiddersResponse"/>
	</wsdl:message>
	<wsdl:message name="GetHighBiddersRequest">
		<wsdl:part name="GetHighBiddersRequest" element="ns:GetHighBiddersRequest"/>
	</wsdl:message>
	<wsdl:message name="GetCategory2CSResponse">
		<wsdl:part name="GetCategory2CSResponse" element="ns:GetCategory2CSResponse"/>
	</wsdl:message>
	<wsdl:message name="GetCategory2CSRequest">
		<wsdl:part name="GetCategory2CSRequest" element="ns:GetCategory2CSRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductSearchResultsResponse">
		<wsdl:part name="GetProductSearchResultsResponse" element="ns:GetProductSearchResultsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductSearchResultsRequest">
		<wsdl:part name="GetProductSearchResultsRequest" element="ns:GetProductSearchResultsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetMyeBayResponse">
		<wsdl:part name="GetMyeBayResponse" element="ns:GetMyeBayResponse"/>
	</wsdl:message>
	<wsdl:message name="GetMyeBayRequest">
		<wsdl:part name="GetMyeBayRequest" element="ns:GetMyeBayRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductSearchPageResponse">
		<wsdl:part name="GetProductSearchPageResponse" element="ns:GetProductSearchPageResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductSearchPageRequest">
		<wsdl:part name="GetProductSearchPageRequest" element="ns:GetProductSearchPageRequest"/>
	</wsdl:message>
	<wsdl:message name="GetSearchResultsResponse">
		<wsdl:part name="GetSearchResultsResponse" element="ns:GetSearchResultsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetSearchResultsRequest">
		<wsdl:part name="GetSearchResultsRequest" element="ns:GetSearchResultsRequest"/>
	</wsdl:message>
	<wsdl:message name="AddSecondChanceItemResponse">
		<wsdl:part name="AddSecondChanceItemResponse" element="ns:AddSecondChanceItemResponse"/>
	</wsdl:message>
	<wsdl:message name="AddSecondChanceItemRequest">
		<wsdl:part name="AddSecondChanceItemRequest" element="ns:AddSecondChanceItemRequest"/>
	</wsdl:message>
	<wsdl:message name="VerifyAddSecondChanceItemResponse">
		<wsdl:part name="VerifyAddSecondChanceItemResponse" element="ns:VerifyAddSecondChanceItemResponse"/>
	</wsdl:message>
	<wsdl:message name="VerifyAddSecondChanceItemRequest">
		<wsdl:part name="VerifyAddSecondChanceItemRequest" element="ns:VerifyAddSecondChanceItemRequest"/>
	</wsdl:message>
	<wsdl:message name="GetProductFamilyMembersResponse">
		<wsdl:part name="GetProductFamilyMembersResponse" element="ns:GetProductFamilyMembersResponse"/>
	</wsdl:message>
	<wsdl:message name="GetProductFamilyMembersRequest">
		<wsdl:part name="GetProductFamilyMembersRequest" element="ns:GetProductFamilyMembersRequest"/>
	</wsdl:message>
	<wsdl:message name="GetCategoryListingsResponse">
		<wsdl:part name="GetCategoryListingsResponse" element="ns:GetCategoryListingsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetCategoryListingsRequest">
		<wsdl:part name="GetCategoryListingsRequest" element="ns:GetCategoryListingsRequest"/>
	</wsdl:message>
	<wsdl:message name="LeaveFeedbackResponse">
		<wsdl:part name="LeaveFeedbackResponse" element="ns:LeaveFeedbackResponse"/>
	</wsdl:message>
	<wsdl:message name="LeaveFeedbackRequest">
		<wsdl:part name="LeaveFeedbackRequest" element="ns:LeaveFeedbackRequest"/>
	</wsdl:message>
	<wsdl:message name="GetFeedbackResponse">
		<wsdl:part name="GetFeedbackResponse" element="ns:GetFeedbackResponse"/>
	</wsdl:message>
	<wsdl:message name="GetFeedbackRequest">
		<wsdl:part name="GetFeedbackRequest" element="ns:GetFeedbackRequest"/>
	</wsdl:message>
	<wsdl:portType name="eBayAPIInterface">
			
		<wsdl:operation name="GetItem">
			<wsdl:input message="ns:GetItemRequest"/>
			<wsdl:output message="ns:GetItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddItem">
			<wsdl:input message="ns:AddItemRequest"/>
			<wsdl:output message="ns:AddItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="VerifyAddItem">
			<wsdl:input message="ns:VerifyAddItemRequest"/>
			<wsdl:output message="ns:VerifyAddItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetUser">
			<wsdl:input message="ns:GetUserRequest"/>
			<wsdl:output message="ns:GetUserResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSellerEvents">
			<wsdl:input message="ns:GetSellerEventsRequest"/>
			<wsdl:output message="ns:GetSellerEventsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="RelistItem">
			<wsdl:input message="ns:RelistItemRequest"/>
			<wsdl:output message="ns:RelistItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="ReviseItem">
			<wsdl:input message="ns:ReviseItemRequest"/>
			<wsdl:output message="ns:ReviseItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSellerList">
			<wsdl:input message="ns:GetSellerListRequest"/>
			<wsdl:output message="ns:GetSellerListResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetItemTransactions">
			<wsdl:input message="ns:GetItemTransactionsRequest"/>
			<wsdl:output message="ns:GetItemTransactionsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSellerTransactions">
			<wsdl:input message="ns:GetSellerTransactionsRequest"/>
			<wsdl:output message="ns:GetSellerTransactionsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetCategories">
			<wsdl:input message="ns:GetCategoriesRequest"/>
			<wsdl:output message="ns:GetCategoriesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetAttributesCS">
			<wsdl:input message="ns:GetAttributesCSRequest"/>
			<wsdl:output message="ns:GetAttributesCSResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetAttributesXSL">
			<wsdl:input message="ns:GetAttributesXSLRequest"/>
			<wsdl:output message="ns:GetAttributesXSLResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductFinder">
			<wsdl:input message="ns:GetProductFinderRequest"/>
			<wsdl:output message="ns:GetProductFinderResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductFinderXSL">
			<wsdl:input message="ns:GetProductFinderXSLRequest"/>
			<wsdl:output message="ns:GetProductFinderXSLResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductSellingPages">
			<wsdl:input message="ns:GetProductSellingPagesRequest"/>
			<wsdl:output message="ns:GetProductSellingPagesResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetAccount">
			<wsdl:input message="ns:GetAccountRequest"/>
			<wsdl:output message="ns:GetAccountResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddToItemDescription">
			<wsdl:input message="ns:AddToItemDescriptionRequest"/>
			<wsdl:output message="ns:AddToItemDescriptionResponse"/>
		</wsdl:operation>
		<wsdl:operation name="PlaceOffer">
			<wsdl:input message="ns:PlaceOfferRequest"/>
			<wsdl:output message="ns:PlaceOfferResponse"/>
		</wsdl:operation>
		<wsdl:operation name="EndItem">
			<wsdl:input message="ns:EndItemRequest"/>
			<wsdl:output message="ns:EndItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetHighBidders">
			<wsdl:input message="ns:GetHighBiddersRequest"/>
			<wsdl:output message="ns:GetHighBiddersResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetCategory2CS">
			<wsdl:input message="ns:GetCategory2CSRequest"/>
			<wsdl:output message="ns:GetCategory2CSResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductSearchResults">
			<wsdl:input message="ns:GetProductSearchResultsRequest"/>
			<wsdl:output message="ns:GetProductSearchResultsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetMyeBay">
			<wsdl:input message="ns:GetMyeBayRequest"/>
			<wsdl:output message="ns:GetMyeBayResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductSearchPage">
			<wsdl:input message="ns:GetProductSearchPageRequest"/>
			<wsdl:output message="ns:GetProductSearchPageResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetSearchResults">
			<wsdl:input message="ns:GetSearchResultsRequest"/>
			<wsdl:output message="ns:GetSearchResultsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="AddSecondChanceItem">
			<wsdl:input message="ns:AddSecondChanceItemRequest"/>
			<wsdl:output message="ns:AddSecondChanceItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="VerifyAddSecondChanceItem">
			<wsdl:input message="ns:VerifyAddSecondChanceItemRequest"/>
			<wsdl:output message="ns:VerifyAddSecondChanceItemResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetProductFamilyMembers">
			<wsdl:input message="ns:GetProductFamilyMembersRequest"/>
			<wsdl:output message="ns:GetProductFamilyMembersResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetCategoryListings">
			<wsdl:input message="ns:GetCategoryListingsRequest"/>
			<wsdl:output message="ns:GetCategoryListingsResponse"/>
		</wsdl:operation>
		<wsdl:operation name="LeaveFeedback">
			<wsdl:input message="ns:LeaveFeedbackRequest"/>
			<wsdl:output message="ns:LeaveFeedbackResponse"/>
		</wsdl:operation>
		<wsdl:operation name="GetFeedback">
			<wsdl:input message="ns:GetFeedbackRequest"/>
			<wsdl:output message="ns:GetFeedbackResponse"/>
		</wsdl:operation>
	</wsdl:portType>
	<wsdl:binding name="eBayAPISoapBinding" type="ns:eBayAPIInterface">	
	<wsdlsoap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
			
		<wsdl:operation name="GetItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="VerifyAddItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetUser">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSellerEvents">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="RelistItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="ReviseItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSellerList">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetItemTransactions">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSellerTransactions">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetCategories">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAttributesCS">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAttributesXSL">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductFinder">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductFinderXSL">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductSellingPages">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetAccount">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddToItemDescription">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="PlaceOffer">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="EndItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetHighBidders">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetCategory2CS">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductSearchResults">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetMyeBay">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductSearchPage">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetSearchResults">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="AddSecondChanceItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="VerifyAddSecondChanceItem">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetProductFamilyMembers">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetCategoryListings">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="LeaveFeedback">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
		<wsdl:operation name="GetFeedback">
			<wsdlsoap:operation soapAction=""/>
			<wsdl:input>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<wsdlsoap:header use="literal" message="ns:RequesterCredentials" part="RequesterCredentials"/>
				<wsdlsoap:body use="literal"/>
			</wsdl:output>
		</wsdl:operation>
	</wsdl:binding>
	<wsdl:service name="eBayAPIInterfaceService">
			<wsdl:port binding="ns:eBayAPISoapBinding" name="eBayAPI">
				<wsdlsoap:address location="http://localhost:8080/axis/services/eBayAPI"/>
			</wsdl:port>
	</wsdl:service>
</wsdl:definitions>
	
