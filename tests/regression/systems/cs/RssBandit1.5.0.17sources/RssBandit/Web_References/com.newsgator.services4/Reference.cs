//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2407.
// 
namespace RssBandit.com.newsgator.services4 {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PostItemSoap", Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    public class PostItem : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        public NGImpersonate NGImpersonateValue;
        
        public NGAPIToken NGAPITokenValue;
        
        /// <remarks/>
        public PostItem() {
            this.Url = "http://services.newsgator.com/ngws/svc/PostItem.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/SetState", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PostState[] SetState(string locationName, string[] deletedPosts, string[] readPosts, string[] unreadPosts) {
            object[] results = this.Invoke("SetState", new object[] {
                        locationName,
                        deletedPosts,
                        readPosts,
                        unreadPosts});
            return ((PostState[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetState(string locationName, string[] deletedPosts, string[] readPosts, string[] unreadPosts, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetState", new object[] {
                        locationName,
                        deletedPosts,
                        readPosts,
                        unreadPosts}, callback, asyncState);
        }
        
        /// <remarks/>
        public PostState[] EndSetState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PostState[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/UpdatePostMetadata", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FeedMetadata[] UpdatePostMetadata(string locationName, string syncToken, bool unreadOnly, FeedMetadata[] newStates, bool updateRelevanceScores) {
            object[] results = this.Invoke("UpdatePostMetadata", new object[] {
                        locationName,
                        syncToken,
                        unreadOnly,
                        newStates,
                        updateRelevanceScores});
            return ((FeedMetadata[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePostMetadata(string locationName, string syncToken, bool unreadOnly, FeedMetadata[] newStates, bool updateRelevanceScores, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePostMetadata", new object[] {
                        locationName,
                        syncToken,
                        unreadOnly,
                        newStates,
                        updateRelevanceScores}, callback, asyncState);
        }
        
        /// <remarks/>
        public FeedMetadata[] EndUpdatePostMetadata(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FeedMetadata[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/UpdatePostMetadatav2", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FeedMetadata[] UpdatePostMetadatav2(string locationName, string syncToken, FeedMetadata[] newStates, bool updateRelevanceScores) {
            object[] results = this.Invoke("UpdatePostMetadatav2", new object[] {
                        locationName,
                        syncToken,
                        newStates,
                        updateRelevanceScores});
            return ((FeedMetadata[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePostMetadatav2(string locationName, string syncToken, FeedMetadata[] newStates, bool updateRelevanceScores, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePostMetadatav2", new object[] {
                        locationName,
                        syncToken,
                        newStates,
                        updateRelevanceScores}, callback, asyncState);
        }
        
        /// <remarks/>
        public FeedMetadata[] EndUpdatePostMetadatav2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((FeedMetadata[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/RatePost", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RatePost(string url, int rating) {
            this.Invoke("RatePost", new object[] {
                        url,
                        rating});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRatePost(string url, int rating, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RatePost", new object[] {
                        url,
                        rating}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndRatePost(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/GetLinkCount", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLinkCount(string postId) {
            object[] results = this.Invoke("GetLinkCount", new object[] {
                        postId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLinkCount(string postId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLinkCount", new object[] {
                        postId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetLinkCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/GetLinks", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetLinks(string postId) {
            object[] results = this.Invoke("GetLinks", new object[] {
                        postId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLinks(string postId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLinks", new object[] {
                        postId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetLinks(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/GetPostId", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPostId(string url) {
            object[] results = this.Invoke("GetPostId", new object[] {
                        url});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPostId(string url, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPostId", new object[] {
                        url}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPostId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/ClipPosts", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ClipPosts(ClippedPost[] clipList) {
            this.Invoke("ClipPosts", new object[] {
                        clipList});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClipPosts(ClippedPost[] clipList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ClipPosts", new object[] {
                        clipList}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndClipPosts(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/ClipItems", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClippedItem[] ClipItems(ClippedItem[] clipList) {
            object[] results = this.Invoke("ClipItems", new object[] {
                        clipList});
            return ((ClippedItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClipItems(ClippedItem[] clipList, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ClipItems", new object[] {
                        clipList}, callback, asyncState);
        }
        
        /// <remarks/>
        public ClippedItem[] EndClipItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ClippedItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/UnClipPosts", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnClipPosts(string[] postIds) {
            this.Invoke("UnClipPosts", new object[] {
                        postIds});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUnClipPosts(string[] postIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UnClipPosts", new object[] {
                        postIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUnClipPosts(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/GetItems", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="")]
        public rss GetItems(string[] postIds) {
            object[] results = this.Invoke("GetItems", new object[] {
                        postIds});
            return ((rss)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetItems(string[] postIds, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetItems", new object[] {
                        postIds}, callback, asyncState);
        }
        
        /// <remarks/>
        public rss EndGetItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((rss)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/GetHighlyViewedPosts", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement GetHighlyViewedPosts(int maxPosts, System.DateTime fromDate, System.DateTime toDate, bool includeDescription) {
            object[] results = this.Invoke("GetHighlyViewedPosts", new object[] {
                        maxPosts,
                        fromDate,
                        toDate,
                        includeDescription});
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetHighlyViewedPosts(int maxPosts, System.DateTime fromDate, System.DateTime toDate, bool includeDescription, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetHighlyViewedPosts", new object[] {
                        maxPosts,
                        fromDate,
                        toDate,
                        includeDescription}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlElement EndGetHighlyViewedPosts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGImpersonateValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/SendPost", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendPost(long postId, string subject, string comments, string address, string protocol) {
            this.Invoke("SendPost", new object[] {
                        postId,
                        subject,
                        comments,
                        address,
                        protocol});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendPost(long postId, string subject, string comments, string address, string protocol, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendPost", new object[] {
                        postId,
                        subject,
                        comments,
                        address,
                        protocol}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSendPost(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/ngws/Impersonate")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://services.newsgator.com/ngws/Impersonate", IsNullable=false)]
    public class NGImpersonate : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string ImpersonateUser;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr;
    }
    
    /// <remarks/>
    public class rssChannelItemGuid {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool isPermaLink = true;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }
    
    /// <remarks/>
    public class rssChannelItem {
        
        /// <remarks/>
        public object title;
        
        /// <remarks/>
        public object link;
        
        /// <remarks/>
        public object description;
        
        /// <remarks/>
        public object pubDate;
        
        /// <remarks/>
        public rssChannelItemGuid guid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://newsgator.com/schema/extensions")]
        public string postId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://newsgator.com/schema/extensions")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool read = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool readSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://newsgator.com/schema/extensions")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool deleted = false;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool deletedSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://wellformedweb.org/CommentAPI/")]
        public string commentRss;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://wellformedweb.org/CommentAPI/")]
        public string comment;
        
        /// <remarks/>
        public string comments;
        
        /// <remarks/>
        public string author;
        
        /// <remarks/>
        public rssChannelItemEnclosure enclosure;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://newsgator.com/schema/extensions", DataType="integer")]
        public string userRating;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://newsgator.com/schema/extensions")]
        public System.Decimal avgRating;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://newsgator.com/schema/extensions", DataType="integer")]
        public string folderId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://newsgator.com/schema/extensions", DataType="integer")]
        public string feedId;
        
        /// <remarks/>
        public string extensionData;
        
        /// <remarks/>
        public string source;
    }
    
    /// <remarks/>
    public class rssChannelItemEnclosure {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string url;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type;
    }
    
    /// <remarks/>
    public class rssChannel {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string link;
        
        /// <remarks/>
        public string copyright;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public object webMaster;
        
        /// <remarks/>
        public object lastBuildDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://newsgator.com/schema/extensions")]
        public string token;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://newsgator.com/schema/extensions")]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string ttl;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("item")]
        public rssChannelItem[] item;
    }
    
    /// <remarks/>
    public class rss {
        
        /// <remarks/>
        public rssChannel channel;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="http://newsgator.com/schema/extensions")]
        public string token;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    public class ClippedItem {
        
        /// <remarks/>
        public string PostId;
        
        /// <remarks/>
        public string Url;
        
        /// <remarks/>
        public string Title;
        
        /// <remarks/>
        public int FolderId;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    public class ClippedPost {
        
        /// <remarks/>
        public string PostId;
        
        /// <remarks/>
        public int FolderId;
        
        /// <remarks/>
        public bool Deleted;
        
        /// <remarks/>
        public System.DateTime LastModified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    public class PostMetadata {
        
        /// <remarks/>
        public string PostID;
        
        /// <remarks/>
        public int State;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StateSpecified;
        
        /// <remarks/>
        public int FlagState;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlagStateSpecified;
        
        /// <remarks/>
        public string UserActions;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    public class FeedMetadata {
        
        /// <remarks/>
        public string FeedID;
        
        /// <remarks/>
        public string UserActions;
        
        /// <remarks/>
        public PostMetadata[] PostMetadata;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    public class PostState {
        
        /// <remarks/>
        public string PostID;
        
        /// <remarks/>
        public int State;
        
        /// <remarks/>
        public string FeedID;
        
        /// <remarks/>
        public int FlagState;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlagStateSpecified;
        
        /// <remarks/>
        public string UserActions;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", IsNullable=false)]
    public class NGAPIToken : System.Web.Services.Protocols.SoapHeader {
        
        /// <remarks/>
        public string Token;
        
        /// <remarks/>
        public bool EnableCompression;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr;
    }
}
